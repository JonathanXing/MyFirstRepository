<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ClearScada.Client</name>
    </assembly>
    <members>
        <member name="T:ClearScada.Client.AccessControlEntry">
            <summary>
            	Specifies a set of security permissions for a particular user.
            </summary>
            <remarks>
            	An <b>AccessControlEntry</b> specifies a set of permissions for a particular user that control what data and operations that user has access to.
            	An <b>AccessControlEntry</b> can apply to either a single user, a user group, or the special users <b>Everyone</b>, <b>Guest</b> or <b>Web</b>.
            </remarks>
        </member>
        <member name="F:ClearScada.Client.AccessControlEntry.Everyone">
            <summary>
            	The <see cref="P:ClearScada.Client.AccessControlEntry.UserName"/> to use to indicate the <b>AccessControlEntry</b> applies to all users.
            </summary>
        </member>
        <member name="F:ClearScada.Client.AccessControlEntry.Guest">
            <summary>
            	The <see cref="P:ClearScada.Client.AccessControlEntry.UserName"/> to use to indicate the <b>AccessControlEntry</b> applies to the Guest user for non-web clients.
            </summary>
        </member>
        <member name="F:ClearScada.Client.AccessControlEntry.Web">
            <summary>
            	The <see cref="P:ClearScada.Client.AccessControlEntry.UserName"/> to use to indicate the <b>AccessControlEntry</b> applies to the Guest user for web clients.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AccessControlEntry.#ctor(System.String,ClearScada.Client.ObjectPermissions)">
            <summary>
            	Initializes a new instance of the <b>AccessControlEntry</b> class with the specified user and permissions.
            </summary>
            <param name="userName">
            	The name of the user the <b>AccessControlEntry</b> applies to.
            </param>
            <param name="permissions">
            	The set of permissions granted to the user by the <b>AccessControlEntry</b>.
            </param>
        </member>
        <member name="P:ClearScada.Client.AccessControlEntry.UserName">
            <summary>
            	Gets the name of the user the <see cref="T:ClearScada.Client.AccessControlEntry"/> applies to.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the user the <b>AccessControlEntry</b> applies to.
            </value>
        </member>
        <member name="P:ClearScada.Client.AccessControlEntry.Permissions">
            <summary>
            	Gets the permissions specified by the <see cref="T:ClearScada.Client.AccessControlEntry"/>.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.ObjectPermissionSet"/> containing the permissions specified by the <b>AccessControlEntry</b>.
            </value>
        </member>
        <member name="T:ClearScada.Client.AccessControlList">
            <summary>
            	Represents the security of a database object.
            </summary>
            <remarks>
            	The <b>AccessControlList</b> class is a collection of <see cref="T:ClearScada.Client.AccessControlEntry"/> objects that represent the security of a particular database object. 
            	An <b>AccessControlEntry</b> specifies a set of permissions for a particular user that control what data and operations that user has access to.
            	An <b>AccessControlEntry</b> can apply to either a single user, a user group, or the special users <b>Everyone</b>, <b>Guest</b> or <b>Web</b>.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.AccessControlList.#ctor">
            <summary>
            	Initializes a new instance of the <b>AccessControlList</b> class that is empty.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AccessControlList.#ctor(ClearScada.Client.AccessControlList)">
            <summary>
            	Initializes a new instance of the <b>AccessControlList</b> class that contains entries copied from the specified <b>AccessControlList</b>.
            </summary>
            <param name="acl">
            	The <b>AccessControlList</b> whose entries are copied to the new <b>AccessControlList</b>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="acl"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.AccessControlList.Add(ClearScada.Client.AccessControlEntry)">
            <summary>
            	Adds an <see cref="T:ClearScada.Client.AccessControlEntry"/> to the <b>AccessControlList</b>.
            </summary>
            <param name="value">
            	The <b>AccessControlEntry</b> to add.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="value"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	An <b>AccessControlEntry</b> with the same <see cref="P:ClearScada.Client.AccessControlEntry.UserName">UserName</see> already exists in the <b>AccessControlList</b>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.AccessControlList.Clear">
            <summary>
            	Removes all entries from the <b>AccessControlList</b>.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AccessControlList.ContainsKey(System.String)">
            <summary>
            	Determines whether there is an <see cref="T:ClearScada.Client.AccessControlEntry"/> for the specified user in the <b>AccessControlList</b>.
            </summary>
            <param name="key">
            	The name of the user to locate.
            </param>
            <returns>
            	<see langword="true"/> if an entry for <paramref name="key"/> is found in the <b>AccessControlList</b>; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.AccessControlList.Remove(System.String)">
            <summary>
            	Removes an <see cref="T:ClearScada.Client.AccessControlEntry"/> from the <b>AccessControlList</b>.
            </summary>
            <param name="key">
            	The user of the <b>AccessControlEntry</b> to remove.
            </param>
            <returns>
            	<see langword="true"/> if an entry for <paramref name="key"/> was found and removed from the <b>AccessControlList</b>; or, <see langword="false"/> if an entry for <paramref name="key"/> was not in the <b>AccessControlList</b>.
            </returns>
            <remarks>
            	Attempting to remove the <b>AccessControlEntry</b> for a user that is not in the <b>AccessControlList</b> leaves the <b>AccessControlList</b> unchanged.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.AccessControlList.TryGetValue(System.String,ClearScada.Client.AccessControlEntry@)">
            <summary>
            	Gets the <see cref="T:ClearScada.Client.AccessControlEntry"/> for the specified user.
            </summary>
            <param name="key">
            	The name of the aggregate to get.
            </param>
            <param name="value">
            	When this method returns, contains the <b>AccessControlEntry</b> for the specified user, if found; otherwise, <see langword="null"/>. This parameter is passed uninitialized.
            </param>
            <returns>
            	<see langword="true"/> if the <b>AccessControlList</b> contains an entry for the specified user; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            	This method combines the functionality of the <see cref="M:ClearScada.Client.AccessControlList.ContainsKey(System.String)">ContainsKey</see> method and the <see cref="P:ClearScada.Client.AccessControlList.Item(System.String)">Item</see> property.
            	Use the <b>TryGetValue</b> method if your code frequently attempts to access entries that are not in the <b>AccessControlList</b>.
            	Using this method is more efficient than catching the <see cref="T:System.Collections.Generic.KeyNotFoundException"/> thrown by the <b>Item</b> property.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:ClearScada.Client.AccessControlList.InheritedFromParent">
            <summary>
            	Gets and sets a value indicating whether this <b>AccessControlList</b> is inherited.
            </summary>
            <value>
            	<see langword="true"/> if the <b>AccessControlList</b> is inherited; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            	<para>
            		When an <b>AccessControlList</b> is returned from a call to <see cref="M:ClearScada.Client.Simple.DBObject.GetSecurity">GetSecurity</see>, <b>InheritedFromParent</b> will be <see langword="true"/> if the ACL 
            		was inherited from the object's parent, or <see langword="false"/> if the ACL belongs to object itself.
            	</para>
            	<para>
            		When an <b>AccessControlList</b> is passed to a call to <see cref="M:ClearScada.Client.Simple.DBObject.SetSecurity(ClearScada.Client.AccessControlList,System.Boolean)">SetSecurity</see>, set <b>InheritedFromParent</b> to <see langword="true"/> to remove the ACL
            		from the object and cause it to inherit from its parent, or <see langword="false"/> to replace the object's ACL. If <b>InheritedFromParent</b> is <see langword="true"/> then the
            		contents of the <b>AccessControlList</b> will be ignored.
            	</para>
            </remarks>
        </member>
        <member name="P:ClearScada.Client.AccessControlList.Count">
            <summary>
            	Gets the number of entries in the <b>AccessControlList</b>.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> containing the number of entries in the <b>AccessControlList</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.AccessControlList.Keys">
            <summary>
            	Gets a collection containing the users in the <b>AccessControlList</b>.
            </summary>
            <value>
            	An <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>&lt;<see cref="T:System.String"/>&gt; containing the users in the <b>AccessControlList</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.AccessControlList.Values">
            <summary>
            	Gets a collection containing the entries in the <b>AccessControlList</b>.
            </summary>
            <value>
            	An <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>&lt;<see cref="T:ClearScada.Client.AccessControlEntry"/>&gt; containing the entries in the <b>AccessControlList</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.AccessControlList.Item(System.String)">
            <summary>
            	Gets and sets the <see cref="T:ClearScada.Client.AccessControlEntry"/> for the specified user.
            </summary>
            <param name="key">
            	The name of the user whose entry to get or set.
            </param>
            <value>
            	The <see cref="T:ClearScada.Client.AccessControlEntry"/> for the specified user. If the specified user is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException"/>, and a set operation adds a new entry for the specified user.
            </value>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            	When setting the property, <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            	When getting the property, an entry for <paramref name="key"/> does not exist in the <b>AccessControlList</b>.
            </exception>
        </member>
        <member name="T:ClearScada.Client.Advanced.AggregateDetails">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateDetails.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateDetails.Index">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateDetails.Classes">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateDetails.AlarmConditions">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateDetails.IsHistoric">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AreaDetails">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AreaDetails.Id">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AreaDetails.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AreaDetails.ParentId">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AreaDetails.FullName">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.BrowseNodeType">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseNodeType.Branch">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseNodeType.Leaf">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.BrowseIconType">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Unknown">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.DatabaseObject">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Objects">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Config">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Aggregate">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.SearchKeys">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.SearchKey">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.RegisterSpaces">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.RegisterSpace">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Tag">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Network">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Domain">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Server">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.SerialPort">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.Folder">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.DriveRemovable">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.DriveFixed">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.DriveRemote">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.DriveCdRom">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.DriveRamDisk">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.StatusRow">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.StatusGroup">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.List">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.HistoricTag">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.AlarmCondition">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.ColourPalette">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.BrowseIconType.ColourPaletteEntry">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.BrowseNode">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.BrowseNode.NodeType">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.BrowseNode.IconType">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.BrowseNode.ClassName">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.BrowseNode.Description">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.BrowseNode.Label">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ConversionDetails">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ConversionDetails.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ConversionDetails.DisplayName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ConversionDetails.Category">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ConversionDetails.Icon">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.IAreaHierarchy">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.LookupArea(ClearScada.Client.AreaOfInterestId)">
             <summary>
            
             </summary>
             <param name="areaId"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.FindArea(System.String)">
             <summary>
            
             </summary>
             <param name="areaName"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.ListAreas(System.String,ClearScada.Client.AreaOfInterestId,System.Boolean)">
             <summary>
            
             </summary>
             <param name="areaNamePattern"></param>
             <param name="parentId"></param>
             <param name="childrenOnly"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.CreateArea(ClearScada.Client.AreaOfInterestId,System.String)">
             <summary>
            
             </summary>
             <param name="parentId"></param>
             <param name="areaName"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.DeleteArea(ClearScada.Client.AreaOfInterestId,System.Boolean,ClearScada.Client.Advanced.Warning[]@)">
             <summary>
            
             </summary>
             <param name="areaId"></param>
             <param name="forceDeletion"></param>
             <param name="warnings"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.RenameArea(ClearScada.Client.AreaOfInterestId,System.String)">
             <summary>
            
             </summary>
             <param name="areaId"></param>
             <param name="areaName"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.MoveArea(ClearScada.Client.AreaOfInterestId,ClearScada.Client.AreaOfInterestId)">
             <summary>
            
             </summary>
             <param name="areaId"></param>
             <param name="parentId"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IAreaHierarchy.CopyArea(ClearScada.Client.AreaOfInterestId,ClearScada.Client.AreaOfInterestId,System.String)">
             <summary>
            
             </summary>
             <param name="areaId"></param>
             <param name="parentId"></param>
             <param name="areaName"></param>
             <returns></returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.IBrowse">
            <summary>
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IBrowse.List">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IBrowse.MoveTo(System.String[])">
            <summary>
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IBrowse.GetFullName(System.String)">
            <summary>
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IBrowse.GetPath(System.String)">
            <summary>
            </summary>
            <param name="fullName"></param>
            <returns></returns>
        </member>
        <member name="P:ClearScada.Client.Advanced.IBrowse.IsFlat">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.IBrowse.AllowBranches">
            <summary>
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.IBrowse.AllowRoot">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.IDatabaseMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDatabaseMetadata.GetClass(System.String)">
            <summary>
            
            </summary>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDatabaseMetadata.GetClasses(System.String[])">
            <summary>
            
            </summary>
            <param name="classNames"></param>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDatabaseMetadata.ListClasses(System.String)">
            <summary>
            
            </summary>
            <param name="baseClassName"></param>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDatabaseMetadata.GetSeverities">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDatabaseMetadata.ListQueries">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ClearScada.Client.Advanced.TagAccessRights">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.TagAccessRights.None">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.TagAccessRights.Readable">
            <summary>
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.TagAccessRights.Writable">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.IDataSource">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.AddTags(ClearScada.Client.Advanced.TagDetails[])">
            <summary>
            
            </summary>
            <param name="tags"></param>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.RemoveTags(System.Int32[])">
            <summary>
            
            </summary>
            <param name="tagIds"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.ValidateTags(System.String[])">
            <summary>
            
            </summary>
            <param name="tags"></param>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.ListTags">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.ReadTagValue(System.Int32)">
            <summary>
            
            </summary>
            <param name="tagId"></param>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.WriteTagValue(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="tagId"></param>
            <param name="value"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IDataSource.GetTagBrowse(ClearScada.Client.ObjectId,System.Type,ClearScada.Client.Advanced.TagAccessRights)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="E:ClearScada.Client.Advanced.IDataSource.TagsUpdated">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.GetObjectMenuOptions">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.GetObjectMenuOptions.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.GetObjectMenuOptions.IgnoreState">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.GetObjectMenuOptions.IncludeTemplateMembers">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.GetObjectMenuOptions.ReturnMethodsOnly">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.GetObjectMenuOptions.ReturnDescriptions">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.GetObjectMenuOptions.IncludeAlarmMethods">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.GetObjectMenuOptions.IsPickMenu">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.IObjectConfiguration">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetProperty(ClearScada.Client.ObjectId,System.String)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="propertyName"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetProperty(ClearScada.Client.ObjectId,System.String,System.Object)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="propertyName"></param>
             <param name="value"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.IsPropertyWritable(ClearScada.Client.ObjectId,System.String)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="propertyName"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetProperties(ClearScada.Client.ObjectId,System.String[],System.Object[])">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="propertyNames"></param>
             <param name="values"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.InvokeMethod(ClearScada.Client.ObjectId,System.String,System.Object[])">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="methodName"></param>
             <param name="arguments"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetAggregate(ClearScada.Client.ObjectId,System.String,System.String)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="aggregateName"></param>
             <param name="aggregateClass"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetSecurity(ClearScada.Client.ObjectId)">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetSecurity(ClearScada.Client.ObjectId,ClearScada.Client.AccessControlList,System.Boolean,ClearScada.Client.Advanced.Warning[]@)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="security"></param>
             <param name="removeSecurityFromDescendants"></param>
             <param name="warnings"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetPropertyOverrides(ClearScada.Client.ObjectId)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetPropertyOverrides(ClearScada.Client.ObjectId,ClearScada.Client.PropertyOverrideCollection)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="propertyOverrides"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetReferencesFrom(ClearScada.Client.ObjectId)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetReferencesTo(ClearScada.Client.ObjectId)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetEvents(ClearScada.Client.ObjectId,System.DateTimeOffset,System.DateTimeOffset)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="rangeStart"></param>
             <param name="rangeEnd"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetAlarms(ClearScada.Client.ObjectId)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.AdvisePropertyUpdates(ClearScada.Client.ObjectId,System.String[])">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="propertyNames"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.UnadvisePropertyUpdates(ClearScada.Client.ObjectId)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetDocumentContent(ClearScada.Client.ObjectId,System.IO.Stream,System.Int32@,System.Int32@)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="stream"></param>
             <param name="version"></param>
             <param name="crc"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.SetDocumentContent(ClearScada.Client.ObjectId,System.IO.Stream,System.Int32@,System.Boolean,System.Int32@)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="stream"></param>
             <param name="version"></param>
             <param name="force"></param>
             <param name="crc"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetUserProfile">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetObjectMenu(ClearScada.Client.ObjectId,ClearScada.Client.Advanced.GetObjectMenuOptions)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="options"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectConfiguration.GetObjectStatus(ClearScada.Client.ObjectId)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <returns></returns>
        </member>
        <member name="E:ClearScada.Client.Advanced.IObjectConfiguration.PropertyUpdated">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ImportOptions">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ImportOptions.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ImportOptions.Merge">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.IObjectHierarchy">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.LookupObject(ClearScada.Client.ObjectId)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.FindObject(System.String)">
             <summary>
            
             </summary>
             <param name="objectName"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.FindObjects(System.String[])">
             <summary>
            
             </summary>
             <param name="objectNames"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ListObjects(System.String,System.String,ClearScada.Client.ObjectId,System.Boolean)">
             <summary>
            
             </summary>
             <param name="className"></param>
             <param name="objectNamePattern"></param>
             <param name="parentId"></param>
             <param name="childrenOnly"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.GetTemplateObject(ClearScada.Client.ObjectId)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.CreateObject(System.String,ClearScada.Client.ObjectId,System.String)">
            <summary>
            </summary>
            <param name="className"></param>
            <param name="parentId"></param>
            <param name="objectName"></param>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.CreateInstance(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.String)">
             <summary>
            
             </summary>
             <param name="templateId"></param>
             <param name="parentId"></param>
             <param name="instanceName"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.DeleteObject(ClearScada.Client.ObjectId,System.Boolean,ClearScada.Client.Advanced.Warning[]@)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="forceDeletion"></param>
             <param name="warnings"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.RenameObject(ClearScada.Client.ObjectId,System.String)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="objectName"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.MoveObject(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,ClearScada.Client.Advanced.Warning[]@)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="parentId"></param>
             <param name="warnings"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.CopyObject(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.String,ClearScada.Client.Advanced.Warning[]@)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="parentId"></param>
             <param name="objectName"></param>
             <param name="warnings"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.GetAvailableConversions(ClearScada.Client.ObjectId)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ConvertObject(ClearScada.Client.ObjectId,System.String,ClearScada.Client.Advanced.Warning[]@)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="className"></param>
             <param name="warnings"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ConvertInstance(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.Boolean,ClearScada.Client.Advanced.Warning[]@)">
             <summary>
            
             </summary>
             <param name="instanceId"></param>
             <param name="templateId"></param>
             <param name="forceConversion"></param>
             <param name="warnings"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ExportConfiguration(ClearScada.Client.ObjectId,System.IO.Stream,ClearScada.Client.Advanced.Warning[]@)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="stream"></param>
             <param name="warnings"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ExportConfiguration(ClearScada.Client.ObjectId,System.IO.Stream,ClearScada.Client.Advanced.VersionNumber,ClearScada.Client.Advanced.Warning[]@)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="stream"></param>
             <param name="version"></param>
             <param name="warnings"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.GetExportVersions">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ImportConfiguration(ClearScada.Client.ObjectId,System.IO.Stream,ClearScada.Client.Advanced.ImportOptions,ClearScada.Client.Advanced.Warning[]@)">
             <summary>
            
             </summary>
             <param name="parentId"></param>
             <param name="stream"></param>
             <param name="options"></param>
             <param name="warnings"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.ImportConfiguration(ClearScada.Client.ObjectId,System.IO.Stream,System.Int32,ClearScada.Client.Advanced.ImportOptions,ClearScada.Client.Advanced.Warning[]@)">
             <summary>
            
             </summary>
             <param name="parentId"></param>
             <param name="stream"></param>
             <param name="length"></param>
             <param name="options"></param>
             <param name="warnings"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.AdviseObjectUpdates(System.Boolean,System.String[])">
             <summary>
            
             </summary>
             <param name="includeObjectsInTemplates"></param>
             <param name="classNames"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.UnadviseObjectUpdates">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IObjectHierarchy.GetObjectBrowse(ClearScada.Client.ObjectId,System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="objectId"></param>
            <param name="className"></param>
            <param name="filterName"></param>
            <param name="filterParam"></param>
            <returns></returns>
        </member>
        <member name="E:ClearScada.Client.Advanced.IObjectHierarchy.ObjectUpdated">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.IOfflineObjects">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IOfflineObjects.OfflineObjectCreate(ClearScada.Client.ObjectId[],ClearScada.Client.ObjectId[],System.String[],System.String[])">
             <summary>
            
             </summary>
             <param name="existingObjects"></param>
             <param name="newObjectParents"></param>
             <param name="newObjectNames"></param>
             <param name="newObjectClasses"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IOfflineObjects.OfflineObjectAssign(ClearScada.Client.ObjectId[],System.String)">
             <summary>
            
             </summary>
             <param name="objects"></param>
             <param name="userName"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IOfflineObjects.OfflineObjectSetDeployState(ClearScada.Client.ObjectId[],System.Boolean,ClearScada.Client.Advanced.Warning[]@)">
             <summary>
            
             </summary>
             <param name="objects"></param>
             <param name="deploy"></param>
             <param name="warnings"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IOfflineObjects.OfflineObjectCommit(ClearScada.Client.ObjectId[])">
             <summary>
            
             </summary>
             <param name="objects"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.IOfflineObjects.OfflineObjectQuery(ClearScada.Client.ObjectId[])">
             <summary>
            
             </summary>
             <param name="objects"></param>
        </member>
        <member name="T:ClearScada.Client.Advanced.ChangePasswordOptions">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ChangePasswordOptions.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.ChangePasswordOptions.DoNotResetPreExpiredFlag">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ISecurity">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.LogOn(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="userName"></param>
             <param name="password"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.LogOff">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.InactivityLogOff">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.ValidatePassword(System.String)">
             <summary>
            
             </summary>
             <param name="password"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.ChangePassword(ClearScada.Client.ObjectId,System.String,System.String,ClearScada.Client.Advanced.ChangePasswordOptions)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="oldPassword"></param>
             <param name="newPassword"></param>
             <param name="options"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.ISecurity.ChangeVoicemailPin(ClearScada.Client.ObjectId,System.String,System.String)">
             <summary>
            
             </summary>
             <param name="objectId"></param>
             <param name="oldPin"></param>
             <param name="newPin"></param>
        </member>
        <member name="P:ClearScada.Client.Advanced.ISecurity.IsLoggedOn">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ISecurity.UserName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ISecurity.UserObjectId">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.DatabaseFeatures">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.Security">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.HistoricData">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.EventJournal">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.AlarmsAndEvents">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.HistoricValidation">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.QualityClassification">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.MultipleAlarmLimits">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.ExclusiveControl">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.MasterstationAlarmLimits">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.HistoricFiles">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.AlarmResponse">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.AreaOfInterest">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.ConfigurationPermits">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.PerUserSecurity">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.DatabaseFeatures.DmzPermanentStandby">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.IServer">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.AdviseStateChange">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.UnadviseStateChange">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.GetServerState">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.Poll">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.StartSecureSession">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.EndSecureSession">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.IServer.SupportsFeatures(ClearScada.Client.Advanced.DatabaseFeatures)">
             <summary>
            
             </summary>
             <param name="features"></param>
             <returns></returns>
        </member>
        <member name="E:ClearScada.Client.Advanced.IServer.ServerShutdown">
             <summary>
            
             </summary>
        </member>
        <member name="E:ClearScada.Client.Advanced.IServer.StateChanged">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.IServer.PeerVersion">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ObjectStatusDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectStatusDetails.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectStatusDetails.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.QueryDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryDetails.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryDetails.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.QueryDetails.Query">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.TrendDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TrendDetails.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TrendDetails.Title">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.MethodConfirmType">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodConfirmType.Never">
            <summary>
            
            </summary>
            
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodConfirmType.Always">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.MethodConfirmType.PerUser">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.MethodDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.ConfirmText">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.Parameters">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.HasReturnValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.ConfirmType">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.IsConfirmedWithPassword">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.IsConfirmedWithNotes">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.IsUserMethod">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodDetails.IsAlarmMethod">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.LinkDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.LinkDetails.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.LinkDetails.Details">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.EnumerationDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EnumerationDetails.Descriptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EnumerationDetails.Values">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EnumerationDetails.AllowEditing">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.EnumerationDetails.ShowValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.RangeDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.RangeDetails.Minimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.RangeDetails.Maximum">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.MethodParameterDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.DataType">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.Format">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.Range">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.Enumeration">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsReturnValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsFileOpen">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsFileSave">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsServerFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsDBReference">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.UsesLabelAsName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsDateOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterDetails.IsTimeOnly">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ObjectMenuDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.Methods">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.Trends">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.Queries">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.Links">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.AlarmView">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.DefaultView">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.HelpView">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.TemplateObject">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectMenuDetails.Template">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.TagUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagUpdate.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagUpdate.Status">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagUpdate.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AggregateMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateMetadata.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateMetadata.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateMetadata.CanDisable">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AggregateMetadata.Classes">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.AlarmConditionMetadata">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmConditionMetadata.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmConditionMetadata.DisplayName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmConditionMetadata.Category">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.AlarmConditionMetadata.SubConditions">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ClassMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.Category">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.BaseClass">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.DerivedClasses">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.Icon">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.DefaultPropertyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.Properties">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.Methods">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.Aggregates">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.AlarmConditions">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.CanCreateInGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.CanCreateInInstance">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.CanCreateInTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.CanCreateInDocStore">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ClassMetadata.CanCreateInPermit">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.MethodMetadata">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodMetadata.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodMetadata.DisplayName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodMetadata.Description">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodMetadata.ReturnType">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodMetadata.Parameters">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodMetadata.InvokePermissions">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.MethodParameterMetadata">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterMetadata.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterMetadata.DisplayName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterMetadata.Description">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterMetadata.ParameterType">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.MethodParameterMetadata.IsOptional">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.PropertyMetadata">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.DisplayName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.Description">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.PropertyType">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.DataType">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.Length">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.ReferenceClass">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.IsReadable">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.IsWritable">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.WritePermissions">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyMetadata.OpcPropertyId">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ObjectDetails">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.ObjectDetails.CheckAccess(ClearScada.Client.ObjectPermissions)">
             <summary>
            
             </summary>
             <param name="permissions"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.ObjectDetails.UpdateFullName(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="oldParentName"></param>
             <param name="newParentName"></param>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.Empty">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.Id">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.ParentId">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.FullName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.ClassName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.TemplateId">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.InstanceId">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.AccessRights">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.ConfigVersion">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.ConfigCrc">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.Aggregates">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.AlarmConditions">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsAlarmObject">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsGroup">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsInstance">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsControlledByInstance">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.HasDocumentContentOverride">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsUser">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.HasConfigErrors">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsInDocumentStore">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsInDocumentStoreOfCurrentUser">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsInActivePermit">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.HasSecurityOverride">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.HasPaletteOverride">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.HasTemplateOverride">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsNewObjectInActivePermit">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsInstanceWithNoTemplate">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.IsInPermit">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.HasMfcContent">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectDetails.HasWpfContent">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.TagDetails">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.TagDetails.#ctor(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="path"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.TagDetails.#ctor(System.Int32,System.String,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="path"></param>
            <param name="updateRate"></param>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagDetails.IsValid">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagDetails.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagDetails.Path">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagDetails.DataType">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagDetails.UpdateRate">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagDetails.InitialStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagDetails.InitialValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.TagsUpdatedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.TagsUpdatedEventArgs.Updates">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.UserCapability">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.DoubleClickEditsDocuments">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.DoubleClickShowsProperties">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanToggleFullScreen">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanCloseViewX">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanOperate">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanDisplayAlarms">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanDisplayEvents">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanViewConfiguration">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanConfigureDocuments">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanConfigureDatabase">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanConfigureOptions">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanDisableAlarmBell">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.IsAlarmBellInitiallyDisabled">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanSelectMultipleAlarms">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.HasAlarmBannerAtTop">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanResizeAlarmBanner">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanMoveAlarmBanner">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanRemoveAlarmBanner">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanDebugScripts">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.CanFilterAlarmBanner">
            <summary>
            
            </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.UserCapability.Max">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.CalendarType">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.CalendarType.Gregorian">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.CalendarType.Persian">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.UserProfileDetails">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.Locale">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.Calendar">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.DisplayTimesInUtc">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.DefaultDateFormat">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.Homepage">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.InactivityTimeout">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.MustConfirmMethods">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.MinimumAlarmBannerRows">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.AlarmBannerFilterTimeout">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.Favorites">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.DockStates">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.UserProfileDetails.Capabilities">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.AlarmDetailsCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.AlarmDetails"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.AreaReference">
            <summary>
            	Represents a reference from a database object to an Area of Interest.
            </summary>
        </member>
        <member name="P:ClearScada.Client.AreaReference.Source">
            <summary>
            	Gets the source of the reference.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Advanced.ObjectDetails"/> representing the source of the reference (the referencing object).
            </value>
        </member>
        <member name="P:ClearScada.Client.AreaReference.Target">
            <summary>
            	Gets the target of the reference.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Advanced.AreaDetails"/> representing the target of the reference (the referenced area).
            </value>
        </member>
        <member name="T:ClearScada.Client.EventDetailsCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.EventDetails"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.AccessDeniedException">
            <summary>
            	The exception that is thrown when an operation fails due to insufficient access.
            </summary>
        </member>
        <member name="T:ClearScada.Client.ClearScadaException">
            <summary>
            	 Represents ClearSCADA specific errors.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ClearScadaException.#ctor">
            <summary>
            	Initializes a new instance of the <b>ClearScadaException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ClearScadaException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>ClearScadaException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.ClearScadaException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>ClearScadaException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.ClearScadaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Initializes a new instance of the <b>ClearScadaException</b> class with serialized data.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="M:ClearScada.Client.AccessDeniedException.#ctor">
            <summary>
            	Initializes a new instance of the <b>AccessDeniedException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AccessDeniedException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>AccessDeniedException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>AccessDeniedException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.AccessDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="P:ClearScada.Client.AccessDeniedException.ObjectId">
            <summary>
            	Gets the ID of the object that caused the exception.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.ObjectId"/> of the object that caused the exception; or, <see cref="F:ClearScada.Client.ObjectId.Null"/> if the exception was not caused by a specific object.
            </value>
        </member>
        <member name="P:ClearScada.Client.AccessDeniedException.ObjectName">
            <summary>
            	Gets the name of the object that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object that caused the exception; or, an empty string if the exception was not caused by a specific object.
            </value>
        </member>
        <member name="P:ClearScada.Client.AccessDeniedException.RequiredPermissions">
            <summary>
            	Gets the permissions required to perform the operation.
            </summary>
            <value>
            	A set of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags that specify the permissions required to successfully perform the operation; or, <see cref="F:ClearScada.Client.ObjectPermissions.None"/> if the exception was not caused by insufficient permissions.
            </value>
        </member>
        <member name="T:ClearScada.Client.AdviseException">
            <summary>
            	The exception thrown by an invalid advise operation.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AdviseException.#ctor">
            <summary>
            	Initializes a new instance of the <b>AdviseException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AdviseException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>AdviseException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.AdviseException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>AdviseException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.AggregateException">
            <summary>
            	The exception that is thrown when an error occurs accessing an aggregate of a database object.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AggregateException.#ctor">
            <summary>
            	Initializes a new instance of the <b>AggregateException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AggregateException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>AggregateException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.AggregateException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>AggregateException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="P:ClearScada.Client.AggregateException.ObjectId">
            <summary>
            	Gets the ID of the object that caused the exception.
            </summary>
            <value>
            	The <see cref="P:ClearScada.Client.AggregateException.ObjectId"/> of the object that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.AggregateException.ObjectName">
            <summary>
            	Gets the name of the object that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.AggregateException.AggregateName">
            <summary>
            	Gets the aggregate that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the aggregate that caused the exception.
            </value>
        </member>
        <member name="T:ClearScada.Client.AreaReferenceException">
            <summary>
            	The exception that is thrown when an operation on an Area of Interest fails due to references from database objects.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AreaReferenceException.#ctor">
            <summary>
            	Initializes a new instance of the <b>AreaReferenceException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AreaReferenceException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>AreaReferenceException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.AreaReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>AreaReferenceException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.AreaReferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="P:ClearScada.Client.AreaReferenceException.References">
            <summary>
            	Gets the list of references that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1">ReadOnlyCollection</see>&lt;<see cref="T:ClearScada.Client.AreaReference"/>&gt; containing an entry for each reference that is blocking the operation.
            </value>
        </member>
        <member name="T:ClearScada.Client.BrowseException">
            <summary>
            	The exception thrown when a browse operation fails to complete successfully.
            </summary>
        </member>
        <member name="M:ClearScada.Client.BrowseException.#ctor">
            <summary>
            	Initializes a new instance of the <b>BrowseException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.BrowseException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>BrowseException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.BrowseException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>BrowseException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.CommunicationsException">
            <summary>
            	The exception thrown when an error occurs communicating with the server.
            </summary>
        </member>
        <member name="M:ClearScada.Client.CommunicationsException.#ctor">
            <summary>
            	Initializes a new instance of the <b>CommunicationsException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.CommunicationsException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>CommunicationsException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.CommunicationsException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>CommunicationsException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.DatabaseIntegrityException">
            <summary>
            	The exception thrown when the database fails an integrity check.
            </summary>
        </member>
        <member name="M:ClearScada.Client.DatabaseIntegrityException.#ctor">
            <summary>
            	Initializes a new instance of the <b>DatabaseIntegrityException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.DatabaseIntegrityException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>DatabaseIntegrityException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.DatabaseIntegrityException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>DatabaseIntegrityException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.DatabaseIntegrityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="P:ClearScada.Client.DatabaseIntegrityException.Errors">
            <summary>
            	Gets the errors reported by the integrity check.
            </summary>
            <value>
            	A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1">ReadOnlyCollection</see>&lt;<see cref="T:System.String"/>&gt; containing an entry for each error reported by the integrity check.
            </value>
        </member>
        <member name="T:ClearScada.Client.DatabaseLimitException">
            <summary>
            	The exception that is thrown when an operation fails due to hitting a database limit.
            </summary>
            <remarks>
            	The database limits are:
            	<list type="bullet">
            		<item>Maximum object full name length.</item>
            		<item>Maximum object depth.</item>
            		<item>Maximum area full name length.</item>
            		<item>Maximum area depth.</item>
            		<item>Maximum number of points (as defined by database licence).</item>
            	</list>
            </remarks>
        </member>
        <member name="M:ClearScada.Client.DatabaseLimitException.#ctor">
            <summary>
            	Initializes a new instance of the <b>DatabaseLimitException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.DatabaseLimitException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>DatabaseLimitException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.DatabaseLimitException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>DatabaseLimitException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.DatabaseLimitException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="P:ClearScada.Client.DatabaseLimitException.Limit">
            <summary>
            	Gets the limit that caused the exception.
            </summary>
            <value>
            	The limit that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.DatabaseLimitException.Value">
            <summary>
            	Gets the value that caused the exception.
            </summary>
            <value>
            	The value that caused the exception.
            </value>
        </member>
        <member name="T:ClearScada.Client.ImportFormatException">
            <summary>
            	The exception thrown when an invalid database export file is passed to a method.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ImportFormatException.#ctor">
            <summary>
            	Initializes a new instance of the <b>ImportFormatException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ImportFormatException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>ImportFormatException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.ImportFormatException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>ImportFormatException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.InvalidAreaException">
            <summary>
            	The exception that is thrown when an invalid Area of Interest is passed to a method.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidAreaException.#ctor">
            <summary>
            	Initializes a new instance of the <b>InvalidAreaException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidAreaException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>InvalidAreaException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidAreaException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>InvalidAreaException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidAreaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="P:ClearScada.Client.InvalidAreaException.AreaId">
            <summary>
            	Gets the ID of the area that caused the exception.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.AreaOfInterestId"/> of the area that caused the exception; or, <see cref="F:ClearScada.Client.AreaOfInterestId.Null"/> if the exception was caused by passing an unknown area name.
            </value>
        </member>
        <member name="P:ClearScada.Client.InvalidAreaException.AreaName">
            <summary>
            	Gets the name of the area that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the area that caused the exception; or, an empty string if the exception was caused by passing an unknown area ID.
            </value>
        </member>
        <member name="T:ClearScada.Client.InvalidClassException">
            <summary>
            	The exception that is thrown when an invalid database class is passed to a method.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidClassException.#ctor">
            <summary>
            	Initializes a new instance of the <b>InvalidClassException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidClassException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>InvalidClassException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidClassException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>InvalidClassException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidClassException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="P:ClearScada.Client.InvalidClassException.ClassName">
            <summary>
            	Gets the name of the class that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the database class that caused the exception.
            </value>
        </member>
        <member name="T:ClearScada.Client.InvalidNameException">
            <summary>
            	The exception that is thrown when an invalid name is passed to a method.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidNameException.#ctor">
            <summary>
            	Initializes a new instance of the <b>InvalidNameException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidNameException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>InvalidNameException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidNameException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>InvalidNameException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.InvalidObjectException">
            <summary>
            	The exception that is thrown when an invalid database object is passed to a method.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidObjectException.#ctor">
            <summary>
            	Initializes a new instance of the <b>InvalidObjectException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidObjectException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>InvalidObjectException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidObjectException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>InvalidObjectException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidObjectException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="P:ClearScada.Client.InvalidObjectException.ObjectId">
            <summary>
            	Gets the ID of the object that caused the exception.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.ObjectId"/> of the object that caused the exception; or, <see cref="F:ClearScada.Client.ObjectId.Null"/> if the exception was caused by passing an unknown object name.
            </value>
        </member>
        <member name="P:ClearScada.Client.InvalidObjectException.ObjectName">
            <summary>
            	Gets the name of the object that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object that caused the exception; or, an empty string if the exception was caused by passing an unknown object ID.
            </value>
        </member>
        <member name="T:ClearScada.Client.InvalidPasswordException">
            <summary>
            	The exception thrown when an invalid password is passed to a method.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidPasswordException.#ctor">
            <summary>
            	Initializes a new instance of the <b>InvalidPasswordException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.InvalidPasswordException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>InvalidPasswordException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.InvalidPasswordException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>InvalidPasswordException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.SecureSessionRequiredException">
            <summary>
            	The exception thrown when an operation requires a secure session to complete.
            </summary>
        </member>
        <member name="M:ClearScada.Client.SecureSessionRequiredException.#ctor">
            <summary>
            	Initializes a new instance of the <b>SecureSessionRequiredException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.SecureSessionRequiredException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>SecureSessionRequiredException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.SecureSessionRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>SecureSessionRequiredException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.TagException">
            <summary>
            	The exception that is thrown when an error occurs with a tag.
            </summary>	
        </member>
        <member name="M:ClearScada.Client.TagException.#ctor">
            <summary>
            	Initializes a new instance of the <b>TagException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.TagException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>TagException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.TagException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>TagException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.TagException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information. 
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="P:ClearScada.Client.TagException.TagId">
            <summary>
            	Gets the ID of the object that caused the exception.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.ObjectId"/> of the object that caused the exception; or, <see cref="F:ClearScada.Client.ObjectId.Null"/> if the exception was caused by passing an unknown object name.
            </value>
        </member>
        <member name="T:ClearScada.Client.LocalObjectsException">
            <summary>
            	The exception that is thrown when an operation on a database object fails due to local objects in an instance.
            </summary>
        </member>
        <member name="M:ClearScada.Client.LocalObjectsException.#ctor">
            <summary>
            	Initializes a new instance of the <b>LocalObjectsException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.LocalObjectsException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>LocalObjectsException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.LocalObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>LocalObjectsException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.LocalObjectsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="P:ClearScada.Client.LocalObjectsException.Objects">
            <summary>
            	Gets the objects that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1">ReadOnlyCollection</see>&lt;<see cref="T:ClearScada.Client.Advanced.ObjectDetails"/>&gt; containing an entry for each local object that is blocking the operation.
            </value>
        </member>
        <member name="T:ClearScada.Client.MethodException">
            <summary>
            	The exception that is thrown when an error occurs invoking a method of a database object.
            </summary>
        </member>
        <member name="M:ClearScada.Client.MethodException.#ctor">
            <summary>
            	Initializes a new instance of the <b>MethodException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.MethodException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>MethodException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.MethodException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>MethodException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.MethodException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="P:ClearScada.Client.MethodException.ObjectId">
            <summary>
            	Gets the ID of the object that caused the exception.
            </summary>
            <value>
            	The <see cref="P:ClearScada.Client.MethodException.ObjectId"/> of the object that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.MethodException.ObjectName">
            <summary>
            	Gets the name of the object that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.MethodException.MethodName">
            <summary>
            	Gets the method that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the method that caused the exception.
            </value>
        </member>
        <member name="T:ClearScada.Client.ObjectReferenceException">
            <summary>
            	The exception that is thrown when an operation on an object fails due to references from other objects.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ObjectReferenceException.#ctor">
            <summary>
            	Initializes a new instance of the <b>ObjectReferenceException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ObjectReferenceException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>ObjectReferenceException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.ObjectReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>ObjectReferenceException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.ObjectReferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="P:ClearScada.Client.ObjectReferenceException.References">
            <summary>
            	Gets the list of references that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1">ReadOnlyCollection</see>&lt;<see cref="T:ClearScada.Client.ObjectReference"/>&gt; containing an entry for each reference that is blocking the operation.
            </value>
        </member>
        <member name="T:ClearScada.Client.PasswordExpiredException">
            <summary>
            	The exception thrown when attempting to log on if the user's password has expired.
            </summary>
        </member>
        <member name="M:ClearScada.Client.PasswordExpiredException.#ctor">
            <summary>
            	Initializes a new instance of the <b>PasswordExpiredException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.PasswordExpiredException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>PasswordExpiredException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.PasswordExpiredException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>PasswordExpiredException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="T:ClearScada.Client.PropertyException">
            <summary>
            	The exception that is thrown when an error occurs accessing a property of a database object.
            </summary>
        </member>
        <member name="M:ClearScada.Client.PropertyException.#ctor">
            <summary>
            	Initializes a new instance of the <b>PropertyException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.PropertyException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>PropertyException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.PropertyException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>PropertyException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.PropertyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="P:ClearScada.Client.PropertyException.ObjectId">
            <summary>
            	Gets the ID of the object that caused the exception.
            </summary>
            <value>
            	The <see cref="P:ClearScada.Client.PropertyException.ObjectId"/> of the object that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.PropertyException.ObjectName">
            <summary>
            	Gets the name of the object that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.PropertyException.PropertyName">
            <summary>
            	Gets the property that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the property that caused the exception.
            </value>
        </member>
        <member name="T:ClearScada.Client.VersionMismatchException">
            <summary>
            	The exception thrown when an invalid version number is passed to <see cref="M:ClearScada.Client.Advanced.IObjectConfiguration.SetDocumentContent(ClearScada.Client.ObjectId,System.IO.Stream,System.Int32@,System.Boolean,System.Int32@)">SetDocumentContent</see>.
            </summary>
        </member>
        <member name="M:ClearScada.Client.VersionMismatchException.#ctor">
            <summary>
            	Initializes a new instance of the <b>VersionMismatchException</b> class.
            </summary>
        </member>
        <member name="M:ClearScada.Client.VersionMismatchException.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>VersionMismatchException</b> class with a specified error message.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.VersionMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            	Initializes a new instance of the <b>VersionMismatchException</b> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            	The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            	The exception that is the cause of the current exception.
            </param>
        </member>
        <member name="M:ClearScada.Client.VersionMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            	Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with additional exception information.
            </summary>
            <param name="info">
            	The object that holds the serialized object data.
            </param>
            <param name="context">
            	The contextual information about the source or destination.
            </param>
        </member>
        <member name="P:ClearScada.Client.VersionMismatchException.ObjectId">
            <summary>
            	Gets the ID of the object that caused the exception.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.ObjectId"/> of the object that caused the exception.
            </value>
        </member>
        <member name="P:ClearScada.Client.VersionMismatchException.ObjectName">
            <summary>
            	Gets the name of the object that caused the exception.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object that caused the exception; or, an empty string if the exception was caused by passing an unknown object ID.
            </value>
        </member>
        <member name="P:ClearScada.Client.VersionMismatchException.Version">
            <summary>
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.ObjectChangeDetails">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectChangeDetails.Empty">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectChangeDetails.Id">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectChangeDetails.IsNew">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectChangeDetails.IsDeployed">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectChangeDetails.FullName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.ObjectChangeDetails.Changes">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.ObjectPermissionSet">
            <summary>
            	Wraps a set of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags.
            </summary>
            <remarks>
            	The <b>ObjectPermissionSet</b> class wraps a bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags, providing methods to manipulate which permissions are enabled without having to use bitwise operations.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.ObjectPermissionSet.op_Implicit(ClearScada.Client.ObjectPermissionSet)~ClearScada.Client.ObjectPermissions">
            <summary>
            	Converts a <b>ObjectPermissionSet</b> to a bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags.
            </summary>
            <param name="set">
            	The <b>ObjectPermissionSet</b> to convert.
            </param>
            <returns>
            	A bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags containing the permissions specified by <paramref name="set"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectPermissionSet.op_Implicit(ClearScada.Client.ObjectPermissions)~ClearScada.Client.ObjectPermissionSet">
            <summary>
            	Converts a bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags to a <b>ObjectPermissionSet</b>.
            </summary>
            <param name="permissions">
            	The <b>ObjectPermissions</b> flags to convert.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.ObjectPermissions"/> containing the flags specified by <paramref name="permissions"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectPermissionSet.Add(ClearScada.Client.ObjectPermissions)">
            <summary>
            	Adds the specified permissions to the <b>ObjectPermissionSet</b>.
            </summary>
            <param name="permissions">
            	A bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags to add.
            </param>
        </member>
        <member name="M:ClearScada.Client.ObjectPermissionSet.Remove(ClearScada.Client.ObjectPermissions)">
            <summary>
            	Removes the specified permissions from the <b>ObjectPermissionSet</b>.
            </summary>
            <param name="permissions">
            	A bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags to remove.
            </param>
        </member>
        <member name="M:ClearScada.Client.ObjectPermissionSet.Clear">
            <summary>
            	Removes all permissions from the <b>ObjectPermissionSet</b>.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ObjectPermissionSet.IsSet(ClearScada.Client.ObjectPermissions)">
            <summary>
            	Determines whether the specified permissions are part of the <b>ObjectPermissionSet</b>.
            </summary>
            <param name="permissions">
            	A bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags to test for.
            </param>
            <returns>
            	<see langword="true"/> if all of the permissions specified by <paramref name="permissions"/> are part of the <b>ObjectPermissionSet</b>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectPermissionSet.ToObjectPermissions">
            <summary>
            	Converts this <b>ObjectPermissionSet</b> to a bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags.
            </summary>
            <returns>
            	A bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags containing the permissions specified by this instance.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectPermissionSet.FromObjectPermissions(ClearScada.Client.ObjectPermissions)">
            <summary>
            	Initializes this instance from a bitmask of <see cref="T:ClearScada.Client.ObjectPermissions"/> flags.
            </summary>
            <param name="permissions">
            	The flags from which to initialize this instance.
            </param>
        </member>
        <member name="T:ClearScada.Client.ObjectReference">
            <summary>
            	Represents a reference between two database objects.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ObjectReference.Source">
            <summary>
            	Gets the source of the reference.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Advanced.ObjectDetails"/> representing the source of the reference (the referencing object).
            </value>
        </member>
        <member name="P:ClearScada.Client.ObjectReference.Target">
            <summary>
            	Gets the target of the reference.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Advanced.ObjectDetails"/> representing the target of the reference (the referenced object).
            </value>
        </member>
        <member name="T:ClearScada.Client.Advanced.PropertyChangeDetails">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyChangeDetails.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyChangeDetails.OldValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.PropertyChangeDetails.NewValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClearScada.Client.ServerNode">
            <summary>
            	Represents a node that runs a ClearSCADA database server.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerNode.DefaultStandardPort">
            <summary>
            	Specifies the default port for a Standard connection.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerNode.DefaultHttpPort">
            <summary>
            	Specifies the default port for a HTTP connection.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ServerNode.#ctor(ClearScada.Client.ConnectionType,System.String,System.Int32)">
            <summary>
            	Initializes a new instance of the <b>ServerNode</b> class that connects to the specified server.
            </summary>
            <param name="connectionType">
            	How to connect to the server.
            </param>
            <param name="hostName">
            	The DNS name or IP address of the host the server is running on.
            </param>
            <param name="port">
            	The port number the server is running on.
            </param>
        </member>
        <member name="M:ClearScada.Client.ServerNode.#ctor(System.Xml.XmlReader)">
            <summary>
            	Initializes a new instance of the <b>ServerNode</b> class with configuration loaded from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">
            	The <b>XmlReader</b> to load configuration from.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="reader"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	An error occurred during serialization. The original exception is available using the <see cref="P:System.Exception.InnerException">InnerException</see> property.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerNode.Connect(System.String)">
            <summary>
            	Attempts to connect to the server.
            </summary>
            <param name="clientName">
            	The name of the client application.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Advanced.IServer">IServer</see> interface for the connection.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="clientName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="clientName"/> is an empty string.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerNode.Save(System.Xml.XmlWriter)">
            <summary>
            	Saves the configuration of the <b>ServerNode</b> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">
            	The <b>XmlWriter</b> to save configuration to.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="writer"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:ClearScada.Client.ServerNode.ConnectionType">
            <summary>
            	Gets and sets the connection type of the <b>ServerNode</b>.
            </summary>
            <value>
            	One of the <see cref="P:ClearScada.Client.ServerNode.ConnectionType"/> values.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerNode.HostName">
            <summary>
            	Gets and sets the host name of the <b>ServerNode</b>.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the DNS name or IP address of the <b>ServerNode</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerNode.Port">
            <summary>
            Gets and sets the port number of the <b>ServerNode</b>.
            </summary>
            <value>
            An <see cref="T:System.Int32"/> in the range <see cref="F:System.Net.IPEndPoint.MinPort">MinPort</see> to <see cref="F:System.Net.IPEndPoint.MaxPort">MaxPort</see> containing the port number of the <b>ServerNode</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerNode.Cost">
            <summary>
            	Gets and sets the cost of the <b>ServerNode</b>.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> indicating the relative cost of the <b>ServerNode</b>.
            </value>
            <remarks>
            	A <b>ServerNode</b> with a lower <b>Cost</b> is preferred to a <b>ServerNode</b> with a higher <b>Cost</b> when connecting to a <see cref="T:ClearScada.Client.ServerSystem"/>.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.ServerNode.UseCompression">
            <summary>
            	Gets and sets a value indicating whether to compress requests end to the server.
            </summary>
            <value>
            	<see langword="true"/> to compress request; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerNode.ConnectTimeout">
            <summary>
            	Gets and sets the network timeout to use when connecting to the server.
            </summary>
            <value>
            	A <see cref="T:System.TimeSpan"/> containing the network timeout to use when connecting to the server.
            </value>
            <remarks>
            	The default value for <b>ConnectTimeout</b> is 30 seconds.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.ServerNode.RequestTimeout">
            <summary>
            	Gets and sets the network timeout to use when sending a request to the server.
            </summary>
            <value>
            	A <see cref="T:System.TimeSpan"/> containing the network timeout to use when sending a request to the server.
            </value>
            <remarks>
            	The default value for <b>RequestTimeout</b> is 2 minutes.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.ServerNode.PollInterval">
            <summary>
            	Gets and sets how often to poll when monitoring the server with a <see cref="T:ClearScada.Client.ServerSystemMonitor"/>.
            </summary>
             <value>
            	A <see cref="T:System.TimeSpan"/> containing how often to poll.
            </value>
            <remarks>
            	The default value for <b>PollInterval</b> is 10 seconds.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.ServerNode.PollTimeout">
            <summary>
            	Gets and sets the network timeout to use for a poll when monitoring the server with a <see cref="T:ClearScada.Client.ServerSystemMonitor"/>.
            </summary>
            <value>
            	A <see cref="T:System.TimeSpan"/> containing the network timeout to use for a poll.
            </value>
            <remarks>
            	The default value for <b>PollTimeout</b> is 15 seconds.
            </remarks>
        </member>
        <member name="T:ClearScada.Client.ServerNodeEventArgs">
            <summary>
            	Provides data for events raised when the availability of a <see cref="T:ClearScada.Client.ServerNode"/> changes.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ServerNodeEventArgs.Node">
            <summary>
            	Gets the node the event applies to.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.ServerNode"/> the event applies to.
            </value>
        </member>
        <member name="T:ClearScada.Client.ServerState">
            <summary>
            	The possible states of a ClearSCADA database server.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.None">
            <summary>
            	The server is not running.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.Starting">
            <summary>
            	The server is connecting to partners to determine whether to go <see cref="F:ClearScada.Client.ServerState.Main"/> or <see cref="F:ClearScada.Client.ServerState.Standby"/>.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.ConfigurationError">
            <summary>
            	The server has a configuration error.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.Main">
            <summary>
            	The server is running normally.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.Synchronizing">
            <summary>
            	The server is synchronizing configuration and current data to a partner that is <see cref="F:ClearScada.Client.ServerState.Main"/>.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.Standby">
            <summary>
            	The server is standby to a partner that is <see cref="F:ClearScada.Client.ServerState.Main"/>.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.Shutdown">
            <summary>
            	The server is shutting down.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.Initializing">
            <summary>
            	The server is initializing.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.Loading">
            <summary>
            	The server is loading its database.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ServerState.SynchronizingHistoric">
            <summary>
            	The server is synchronizing historic data to a partner that is <see cref="F:ClearScada.Client.ServerState.Main"/>.
            </summary>
        </member>
        <member name="T:ClearScada.Client.ServerStateDetails">
            <summary>
            	Represents the current state of a ClearSCADA database server.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ServerStateDetails.State">
            <summary>
            	Gets the current state of the server.
            </summary>
            <value>
            	One of the <see cref="T:ClearScada.Client.ServerState"/> values.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerStateDetails.StateDescription">
            <summary>
            	Gets the description of the current state of the server.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing a description of the current <see cref="P:ClearScada.Client.ServerStateDetails.State"/> of the server.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerStateDetails.StateChangeTime">
            <summary>
            	Gets the time the server entered its current state.
            </summary>
            <value>
            	A <see cref="T:System.DateTimeOffset"/> containing the time the server entered its current state.
            </value>
        </member>
        <member name="T:ClearScada.Client.Advanced.Warning">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.Warning.Text">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.Warning.ObjectId">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.Warning.ObjectName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.Warning.Data">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.Warning.AggregateName">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.Warning.FieldName">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.AlarmState">
            <summary>
            	Specifies the possible values for the state of an <see cref="T:ClearScada.Client.AlarmDetails"/>.
            </summary>
        </member>
        <member name="F:ClearScada.Client.AlarmState.Inactive">
            <summary>
            	The alarm is inactive.
            </summary>
        </member>
        <member name="F:ClearScada.Client.AlarmState.Disabled">
            <summary>
            	The alarm is disabled.
            </summary>
        </member>
        <member name="F:ClearScada.Client.AlarmState.AcceptedUncleared">
            <summary>
            	The alarm is accepted and uncleared.
            </summary>
        </member>
        <member name="F:ClearScada.Client.AlarmState.UnacceptedCleared">
            <summary>
            	The alarm is unaccepted and cleared.
            </summary>
        </member>
        <member name="F:ClearScada.Client.AlarmState.UnacceptedUncleared">
            <summary>
            	The alarm is unaccepted and uncleared.
            </summary>
        </member>
        <member name="T:ClearScada.Client.AlarmDetails">
            <summary>
            	Represents a database alarm.
            </summary>
        </member>
        <member name="P:ClearScada.Client.AlarmDetails.State">
            <summary>
            	Gets the state of the alarm.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.AlarmState"/> value containing the state of the alarm.
            </value>
        </member>
        <member name="P:ClearScada.Client.AlarmDetails.Severity">
            <summary>
            	Gets the severity of the alarm.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Severity"/> representing the severity of the alarm.
            </value>
        </member>
        <member name="P:ClearScada.Client.AlarmDetails.ConditionName">
            <summary>
            	Gets the condition of the alarm.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the condition of the alarm.
            </value>
        </member>
        <member name="P:ClearScada.Client.AlarmDetails.SubConditionName">
            <summary>
            	Gets the current active sub-condition of the alarm.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the current active sub-condition of the alarm.
            </value>
        </member>
        <member name="P:ClearScada.Client.AlarmDetails.ActiveTime">
            <summary>
            	Gets the time the alarm went active.
            </summary>
            <value>
            	A <see cref="T:System.DateTimeOffset"/> containing the time the alarm went active, or the time the alarm transitioned into the current active sub-condition.
            </value>
        </member>
        <member name="P:ClearScada.Client.AlarmDetails.Source">
            <summary>
            	Gets the source of the alarm.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the source of the alarm.
            </value>
            <remarks>
            	For most alarms, <b>Source</b> will be the full name of the object the alarm belongs to; however, for text alarms <b>Source</b> may be an arbitrary string.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.AlarmDetails.Message">
            <summary>
            	Gets a message describing the alarm.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing a message describing the alarm.
            </value>
        </member>
        <member name="P:ClearScada.Client.AlarmDetails.Category">
            <summary>
            	Gets the category of the alarm.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the event category of the alarm.
            </value>
        </member>
        <member name="T:ClearScada.Client.AreaOfInterestId">
            <summary>
            	Represents the unique identifier of an Area of Interest.
            </summary>
            <remarks>
            	An Area of Interest ID is a signed 32-bit integer. The <b>AreaOfInterestId</b> type should be used to represent Area of Interest IDs to provide strong type safety.
            </remarks>
        </member>
        <member name="F:ClearScada.Client.AreaOfInterestId.Null">
            <summary>
            	The ID used to represent a null Area of Interest reference.
            </summary>
        </member>
        <member name="F:ClearScada.Client.AreaOfInterestId.Root">
            <summary>
            	The ID used to represent a reference to the database's root area.
            </summary>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.#ctor(System.Int32)">
            <summary>
            	Initializes a new instance of the <b>AreaOfInterestId</b> structure to a specified ID.
            </summary>
            <param name="id">
            	The ID to initialize the new instance to.
            </param>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.op_Equality(ClearScada.Client.AreaOfInterestId,ClearScada.Client.AreaOfInterestId)">
            <summary>
            	Determines whether two instances of <b>AreaOfInterestId</b> are equal.
            </summary>
            <param name="id1">
            	The first <b>AreaOfInterestId</b> to compare.
            </param>
            <param name="id2">
            	The second <b>AreaOfInterestId</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="id1"/> and <paramref name="id2"/> are equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.op_Inequality(ClearScada.Client.AreaOfInterestId,ClearScada.Client.AreaOfInterestId)">
            <summary>
            	Determines whether two instances of <b>AreaOfInterestId</b> are not equal.
            </summary>
            <param name="id1">
            	The first <b>AreaOfInterestId</b> to compare.
            </param>
            <param name="id2">
            	The second <b>AreaOfInterestId</b>to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="id1"/> and <paramref name="id2"/> are not equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.op_Equality(ClearScada.Client.AreaOfInterestId,System.Int32)">
            <summary>
            	Determines whether an instance of <b>AreaOfInterestId</b> and an instance of <see cref="T:System.Int32"/> are equal.
            </summary>
            <param name="id1">
            	The <b>AreaOfInterestId</b> to compare.
            </param>
            <param name="id2">
            	The <b>int</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="id1"/> and <paramref name="id2"/> are equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.op_Inequality(ClearScada.Client.AreaOfInterestId,System.Int32)">
            <summary>
            	Determines whether an instance of <b>AreaOfInterestId</b> and an instance of <see cref="T:System.Int32"/> are not equal.
            </summary>
            <param name="id1">
            	The <b>AreaOfInterestId</b> to compare.
            </param>
            <param name="id2">
            	The <b>int</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="id1"/> and <paramref name="id2"/> are not equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.op_Implicit(ClearScada.Client.AreaOfInterestId)~System.Int32">
            <summary>
            	Converts an instance of <b>AreaOfInterestId</b> to an <see cref="T:System.Int32"/>.
            </summary>
            <param name="id">
            	The <b>AreaOfInterestId</b> to convert.
            </param>
            <returns>
            	An <see cref="T:System.Int32"/> containing the numeric value of <paramref name="id"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.op_Implicit(System.Int32)~ClearScada.Client.AreaOfInterestId">
            <summary>
            	Converts an instance of <see cref="T:System.Int32"/> to an <b>AreaOfInterestId</b>.
            </summary>
            <param name="id">
            	The <b>int</b> to convert.
            </param>
            <returns>
            	An <b>AreaOfInterestId</b> containing the ID specified by <paramref name="id"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.Equals(ClearScada.Client.AreaOfInterestId)">
            <summary>
            	Returns a value indicating whether this instance is equal to a specified <b>AreaOfInterestId</b> value.
            </summary>
            <param name="other">
            	The value to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="other"/> has the same value as this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.Equals(System.Int32)">
            <summary>
            	Returns a value indicating whether this instance is equal to a specified <b>int</b> value.
            </summary>
            <param name="other">
            	The value to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="other"/> has the same value as this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.Equals(System.Object)">
            <summary>
            	Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">
            	An object to compare with this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is an instance of <b>AreaOfInterestId</b> or <see cref="T:System.Int32"/>, and has the same value as this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.GetHashCode">
            <summary>
            	Returns the hash code for this instance.
            </summary>
            <returns>
            	A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.ToString">
            <summary>
            	Converts the numerical value of this instance to its equivalent string representation.
            </summary>
            <returns>
            	The string representation of the value of this instance.
            </returns>
            <remarks>
            	The return value is formatted with the general numeric format specifier ("G") and the <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> for the current culture.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.ToString(System.IFormatProvider)">
            <summary>
            	Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.
            </summary>
            <param name="provider">
            	An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.
            </param>
            <returns>
            	The string representation of the value of this instance as specified by <paramref name="provider"/>.
            </returns>
            <remarks>
            	This instance is formatted with the general numeric format specifier ("G").<br/>
            	The <paramref name="provider"/> parameter is an <b>IFormatProvider</b> that obtains a <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> object.
            	The <b>NumberFormatInfo</b> provides culture-specific format information about this instance.
            	If <paramref name="provider"/> is <see langword="null"/>, this instance is formatted with the <b>NumberFormatInfo</b> for the current culture.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.ToString(System.String)">
            <summary>
            	Converts the numeric value of this instance to its equivalent string representation, using the specified format.
            </summary>
            <param name="format">
            	A numeric format string.
            </param>
            <returns>
            	The string representation of the value of this instance as specified by <paramref name="format"/>.
            </returns>
            <remarks>
            	If format is <see langword="null"/> or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").<br/>
            	The return value of this instance is formatted with the <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> for the current culture.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.ToString(System.String,System.IFormatProvider)">
            <summary>
            	Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.
            </summary>
            <param name="format">
            	A numeric format string.
            </param>
            <param name="formatProvider">
            	An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.
            </param>
            <returns>
            	The string representation of the value of this instance as specified by <paramref name="format"/> and <paramref name="formatProvider"/>
            </returns>
            <remarks>
            	If format is <see langword="null"/> or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").<br/>
            	The <paramref name="formatProvider"/> parameter is an <b>IFormatProvider</b> that obtains a <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> object.
            	The <b>NumberFormatInfo</b> provides culture-specific format information about this instance.
            	If <paramref name="formatProvider"/> is <see langword="null"/>, this instance is formatted with the <b>NumberFormatInfo</b> for the current culture.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.AreaOfInterestId.ToInt32">
            <summary>
            	Converts this instance to an <see cref="T:System.Int32"/>.
            </summary>
            <returns>
            	An <see cref="T:System.Int32"/> containing the numeric value of this instance.
            </returns>
        </member>
        <member name="T:ClearScada.Client.EventDetails">
            <summary>
            	Represents a database event journal entry.
            </summary>
        </member>
        <member name="P:ClearScada.Client.EventDetails.Severity">
            <summary>
            	Gets the severity of the event.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Severity"/> representing the severity of the event.
            </value>
        </member>
        <member name="P:ClearScada.Client.EventDetails.Time">
            <summary>
            	Gets the time the event occurred.
            </summary>
            <value>
            	A <see cref="T:System.DateTimeOffset"/> containing the time the event occurred.
            </value>
        </member>
        <member name="P:ClearScada.Client.EventDetails.Source">
            <summary>
            	Gets the source of the event.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the source of the event.
            </value>
        </member>
        <member name="P:ClearScada.Client.EventDetails.Message">
            <summary>
            	Gets a message describing the event.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing a message describing the event.
            </value>
        </member>
        <member name="P:ClearScada.Client.EventDetails.Category">
            <summary>
            	Gets the category of the event.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the category of the event.
            </value>
        </member>
        <member name="P:ClearScada.Client.EventDetails.User">
            <summary>
            	Gets the user that caused the event to occur.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the user that caused the event to occur.
            </value>
        </member>
        <member name="T:ClearScada.Client.ExceptionMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Aggregate_EnableMultiChoiceAggregate">
            <summary>
              Looks up a localized string similar to Cannot enable a multi-choice aggregate using the Enable property..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Aggregate_NotEnabled">
            <summary>
              Looks up a localized string similar to The aggregate &apos;{0}&apos; is not enabled..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_ArraysMustBeSameLength">
            <summary>
              Looks up a localized string similar to Arrays must be the same length..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_InvalidExceptionClass">
            <summary>
              Looks up a localized string similar to The server returned an unknown exception class {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_InvalidExceptionConstructor">
            <summary>
              Looks up a localized string similar to The server returned an exception of class {0} but this class does not have an appropriate constructor..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_InvalidExceptionProperty">
            <summary>
              Looks up a localized string similar to The server returned an exception of class {0} with an unknown or read-only property {1}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_InvalidNode">
            <summary>
              Looks up a localized string similar to The specified node is invalid..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_InvalidOffsetAndLength">
            <summary>
              Looks up a localized string similar to Invalid offset and length..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_InvalidOptions">
            <summary>
              Looks up a localized string similar to Invalid options..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_InvalidSeekOrigin">
            <summary>
              Looks up a localized string similar to Invalid SeekOrigin value..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_LengthIncorrect">
            <summary>
              Looks up a localized string similar to Length is incorrect..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_LengthIsZero">
            <summary>
              Looks up a localized string similar to Length must not be zero..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_ObjectNotSeverity">
            <summary>
              Looks up a localized string similar to Object is not a Severity.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_OldParentNameDoesNotMatch">
            <summary>
              Looks up a localized string similar to oldParentName does not match FullName..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_RangeEndIsBeforeRangeStart">
            <summary>
              Looks up a localized string similar to Invalid range - end is before start..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_StreamIsEmpty">
            <summary>
              Looks up a localized string similar to Stream must not be empty..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_StreamNotReadable">
            <summary>
              Looks up a localized string similar to Stream must be readable..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_StreamNotSeekable">
            <summary>
              Looks up a localized string similar to Stream must be seekable..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_StreamNotWritable">
            <summary>
              Looks up a localized string similar to Stream must be writable..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_StreamTooLong">
            <summary>
              Looks up a localized string similar to Stream too long..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_UnsupportedType">
            <summary>
              Looks up a localized string similar to Value is an unsupported type..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_ValueCannotBeEmpty">
            <summary>
              Looks up a localized string similar to Value cannot be empty..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Argument_VoicemailPinCharacters">
            <summary>
              Looks up a localized string similar to Voicemail PIN cannot contain any characters other than numeric digits..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.ArgumentNull_ArrayElementCannotBeNull">
            <summary>
              Looks up a localized string similar to Array element cannot be null..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_BodyCRCMismatch">
            <summary>
              Looks up a localized string similar to The received body checksum value is incorrect..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_ConnectionCloseByServer">
            <summary>
              Looks up a localized string similar to The connection was closed by the server..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_ConnectionNotLicensed">
            <summary>
              Looks up a localized string similar to The request could not be processed as the connection is not licensed..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_ConstructException">
            <summary>
              Looks up a localized string similar to An error occurred constructing the exception returned by the server..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_HeaderCRCMismatch">
            <summary>
              Looks up a localized string similar to The received header checksum value is incorrect..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_HMACMismatch">
            <summary>
              Looks up a localized string similar to The HMAC received from the server is incorrect..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_LinkDisconnected">
            <summary>
              Looks up a localized string similar to Link has been disconnected..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_NoProxyLink">
            <summary>
              Looks up a localized string similar to The request could not be processed as the server does not have a connection to the main server..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_ServerInInvalidState">
            <summary>
              Looks up a localized string similar to The request could not be processed as the server is in an invalid state..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_ServerThrewException">
            <summary>
              Looks up a localized string similar to The request could not be processed as the server threw an exception..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_SocketError">
            <summary>
              Looks up a localized string similar to An error occurred communicating with the server..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_TransactionIdMismatch">
            <summary>
              Looks up a localized string similar to The received transaction ID {0} does not match the expected transaction ID {1}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_UnexpectedEventDuringAdviseConnect">
            <summary>
              Looks up a localized string similar to Unexpected event received during advise connection..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_UnknownStatus">
            <summary>
              Looks up a localized string similar to The request could not be processed. The server returned an unknown status code 0x{0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_UnsupportedClientVersion">
            <summary>
              Looks up a localized string similar to The server does not support clients running this software version..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_UnsupportedInterface">
            <summary>
              Looks up a localized string similar to The server does not support the requested interface..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.Communications_UnsupportedServerVersion">
            <summary>
              Looks up a localized string similar to The server is running an unsupported software version ({0})..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidArea_UnknownAreaId">
            <summary>
              Looks up a localized string similar to The database does not contain an Area of Interest with ID {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidObject_UnknownObjectId">
            <summary>
              Looks up a localized string similar to The database does not contain an object with ID {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidOperation_AlreadyMonitoring">
            <summary>
              Looks up a localized string similar to The system is already being monitored..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidOperation_MonitoringAlreadyStarted">
            <summary>
              Looks up a localized string similar to Node monitoring has already been started..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidOperation_MonitoringNotStarted">
            <summary>
              Looks up a localized string similar to Node monitoring has not been started..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidOperation_NotConnected">
            <summary>
              Looks up a localized string similar to The connection is not connected..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidOperation_SerializationError">
            <summary>
              Looks up a localized string similar to An error occurred during serialization..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidOperation_SessionAlreadySecure">
            <summary>
              Looks up a localized string similar to The session is already secure..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidOperation_SessionNotSecure">
            <summary>
              Looks up a localized string similar to The session is not secure..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.InvalidOperation_SessionSecure">
            <summary>
              Looks up a localized string similar to Operation not available when the socket is secure..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.IO_CantSeekBeforeBeginningOfStream">
            <summary>
              Looks up a localized string similar to Cannot seek before the beginning of the stream..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.NotSupported_MultiDimArrays">
            <summary>
              Looks up a localized string similar to Multi-dimensional arrays are not supported..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.NotSupported_NonZeroBasedArrays">
            <summary>
              Looks up a localized string similar to Non-zero-based arrays are not supported..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.NotSupported_UnsupportedDbType">
            <summary>
              Looks up a localized string similar to Unsupported database type {0}..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.NotSupported_UnsupportedTypeForVariant">
            <summary>
              Looks up a localized string similar to Objects of type {0} cannot be converted to variants..
            </summary>
        </member>
        <member name="P:ClearScada.Client.ExceptionMessages.NotSupported_UnsupportedVarType">
            <summary>
              Looks up a localized string similar to Unsupported VARTYPE {0}..
            </summary>
        </member>
        <member name="T:ClearScada.Client.ObjectId">
            <summary>
            	Represents the unique identifier of a database object.
            </summary>
            <remarks>
            	A database object ID is a signed 32-bit integer. The <b>ObjectId</b> type should be used to represent object IDs to provide strong type safety.
            </remarks>
        </member>
        <member name="F:ClearScada.Client.ObjectId.Null">
            <summary>
            The ID used to represent a null database object reference.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectId.Root">
            <summary>
            The ID used to represent a reference to the database's root group.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ObjectId.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <b>ObjectId</b> structure to a specified ID.
            </summary>
            <param name="id">The ID to initialize the new instance to.</param>
        </member>
        <member name="M:ClearScada.Client.ObjectId.op_Equality(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId)">
            <summary>
            	Determines whether two instances of <b>ObjectId</b> are equal.
            </summary>
            <param name="id1">
            	The first <b>ObjectId</b> to compare.
            </param>
            <param name="id2">
            	The second <b>ObjectId</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="id1"/> and <paramref name="id2"/> are equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.op_Inequality(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId)">
            <summary>
            	Determines whether two instances of <b>ObjectId</b> are not equal.
            </summary>
            <param name="id1">
            	The first <b>ObjectId</b> to compare.
            </param>
            <param name="id2">
            	The second <b>ObjectId</b>to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="id1"/> and <paramref name="id2"/> are not equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.op_Equality(ClearScada.Client.ObjectId,System.Int32)">
            <summary>
            	Determines whether an instance of <b>ObjectId</b> and an instance of <see cref="T:System.Int32"/> are equal.
            </summary>
            <param name="id1">
            	The <b>ObjectId</b> to compare.
            </param>
            <param name="id2">
            	The <b>int</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="id1"/> and <paramref name="id2"/> are equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.op_Inequality(ClearScada.Client.ObjectId,System.Int32)">
            <summary>
            	Determines whether an instance of <b>ObjectId</b> and an instance of <see cref="T:System.Int32"/> are not equal.
            </summary>
            <param name="id1">
            	The <b>ObjectId</b> to compare.
            </param>
            <param name="id2">
            	The <b>int</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="id1"/> and <paramref name="id2"/> are not equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.op_Implicit(ClearScada.Client.ObjectId)~System.Int32">
            <summary>
            	Converts an instance of <b>ObjectId</b> to an <see cref="T:System.Int32"/>.
            </summary>
            <param name="id">
            	The <b>ObjectId</b> to convert.
            </param>
            <returns>
            	An <see cref="T:System.Int32"/> containing the numeric value of <paramref name="id"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.op_Implicit(System.Int32)~ClearScada.Client.ObjectId">
            <summary>
            	Converts an instance of <see cref="T:System.Int32"/> to an <b>ObjectId</b>.
            </summary>
            <param name="id">
            	The <b>int</b> to convert.
            </param>
            <returns>
            	An <b>ObjectId</b> containing the ID specified by <paramref name="id"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.Equals(ClearScada.Client.ObjectId)">
            <summary>
            	Returns a value indicating whether this instance is equal to a specified <b>ObjectId</b> value.
            </summary>
            <param name="other">
            	The value to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="other"/> has the same value as this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.Equals(System.Int32)">
            <summary>
            	Returns a value indicating whether this instance is equal to a specified <b>int</b> value.
            </summary>
            <param name="other">
            	The value to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="other"/> has the same value as this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.Equals(System.Object)">
            <summary>
            	Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">
            	An object to compare with this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is an instance of <b>ObjectId</b> or <see cref="T:System.Int32"/>, and has the same value as this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.GetHashCode">
            <summary>
            	Returns the hash code for this instance.
            </summary>
            <returns>
            	A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:ClearScada.Client.ObjectId.ToString">
            <summary>
            	Converts the numerical value of this instance to its equivalent string representation.
            </summary>
            <returns>
            	The string representation of the value of this instance.</returns>
            <remarks>
            	The return value is formatted with the general numeric format specifier ("G") and the <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> for the current culture.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.ObjectId.ToString(System.IFormatProvider)">
            <summary>
            	Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.
            </summary>
            <param name="provider">
            	An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.
            </param>
            <returns>
            	The string representation of the value of this instance as specified by <paramref name="provider"/>.
            </returns>
            <remarks>
            	This instance is formatted with the general numeric format specifier ("G").<br/>
            	The <paramref name="provider"/> parameter is an <b>IFormatProvider</b> that obtains a <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> object.
            	The <b>NumberFormatInfo</b> provides culture-specific format information about this instance.
            	If <paramref name="provider"/> is <see langword="null"/>, this instance is formatted with the <b>NumberFormatInfo</b> for the current culture.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.ObjectId.ToString(System.String)">
            <summary>
            	Converts the numeric value of this instance to its equivalent string representation, using the specified format.
            </summary>
            <param name="format">
            	A numeric format string.
            </param>
            <returns>
            	The string representation of the value of this instance as specified by <paramref name="format"/>.
            </returns>
            <remarks>
            	If format is <see langword="null"/> or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").<br/>
            	The return value of this instance is formatted with the <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> for the current culture.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.ObjectId.ToString(System.String,System.IFormatProvider)">
            <summary>
            	Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.
            </summary>
            <param name="format">
            	A numeric format string.
            </param>
            <param name="formatProvider">
            	An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.
            </param>
            <returns>
            	The string representation of the value of this instance as specified by <paramref name="format"/> and <paramref name="formatProvider"/>
            </returns>
            <remarks>
            	If format is <see langword="null"/> or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").<br/>
            	The <paramref name="formatProvider"/> parameter is an <b>IFormatProvider</b> that obtains a <see cref="T:System.Globalization.NumberFormatInfo">NumberFormatInfo</see> object.
            	The <b>NumberFormatInfo</b> provides culture-specific format information about this instance.
            	If <paramref name="formatProvider"/> is <see langword="null"/>, this instance is formatted with the <b>NumberFormatInfo</b> for the current culture.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.ObjectId.ToInt32">
            <summary>
            	Converts this instance to an <see cref="T:System.Int32"/>.
            </summary>
            <returns>
            	An <see cref="T:System.Int32"/> containing the numeric value of this instance.
            </returns>
        </member>
        <member name="T:ClearScada.Client.ObjectPermissions">
            <summary>
            	Specifies flags that control access to the data and operations of a database object.
            </summary>
            <remarks>
            	Some permissions are only relevant for certain types of object e.g. Override is only relevant for points.
            </remarks>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.None">
            <summary>
            	Specifies no access.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Browse">
            <summary>
            	Controls whether an object is listed when enumerating the children of its parent.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Configure">
            <summary>
            	Controls whether an object can be configured, e.g. modifying configuration properties, renaming an object, creating new objects in a group.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Security">
            <summary>
            	Controls whether an object's security can be modified, and whether users and user groups and be configured.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.SystemAdmin">
            <summary>
            	Controls whether system administration operations can be performed, e.g. mounting a historic archive, modifiying system configuration, shutting down server.
            	Most system administration operations require <b>SystemAdmin</b> permission on the database's root group
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Control">
            <summary>
            	Controls whether the object can be controlled, e.g. modifying most data properties, controlling a point, generating a report.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.AcceptAlarms">
            <summary>
            	Controls whether the object's alarms can be accepted.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.DisableAlarms">
            <summary>
            	Controls whether the object's alarms can be disabled.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Override">
            <summary>
            	Controls whether the object's value can be overriden.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Notes">
            <summary>
            	Controls whether the object's notes can be set.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.RetrieveData">
            <summary>
            	Controls whether data retrieval can be initiated for the object e.g. one shot an outstation.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.DisableControl">
            <summary>
            	Controls whether controls can be be disabled for the object.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Promote">
            <summary>
            	Controls whether the object can be promoted.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.SwitchLine">
            <summary>
            	Controls whether the object can switch communications channels.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Tune">
            <summary>
            	Controls whether the object's alarm limits can be tuned.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Diagnostics">
            <summary>
            	Controls whether the object diagnostic and monitoring facilities can be accessed.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.ModifyHistoric">
            <summary>
            	Controls whether the object's historic data can modified.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.AnnotateHistoric">
            <summary>
            	Controls whether the object's historic data can be annotated.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.ValidateHistoric">
            <summary>
            	Controls whether the object's historic data can be validated.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.ViewAlarms">
            <summary>
            	Controls whether the object's alarms can be read.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Read">
            <summary>
            	Controls whether the object can be read.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.ExclusiveControl">
            <summary>
            	Controls whether the object can be taken under exclusive control.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.ManageExclusiveControl">
            <summary>
            	Controls whether exclusive control of the object can be taken away from another user.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.RemoveAlarms">
            <summary>
            	Controls whether the object's alarms can be removed.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.EnableDisable">
            <summary>
            	Controls whether the object can be enabled or disabled.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.ManualRedirect">
            <summary>
            	Controls whether the object's alarms can be manually redirected.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.UnacceptAlarms">
            <summary>
            	Controls whether the object's alarms can be unaccepted.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.AssignAlarms">
            <summary>
            	Controls whether the object's alarms responsibility can be modified.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.OnOffScan">
            <summary>
            	Controls whether the object can be set on or off scan.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.CancelRequest">
            <summary>
            	Controls whether the object's requests can be canceled.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Operator">
            <summary>
            	A set of permissions typically used for Operator users.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Advanced">
            <summary>
            	A set of permissions typically used for Advanced users.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Engineer">
            <summary>
            	A set of permissions typically used for Engineer users.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectPermissions.Full">
            <summary>
            	All available permissions.
            </summary>
        </member>
        <member name="T:ClearScada.Client.ObjectUpdateType">
            <summary>
            	Specifies whether an object was created, modified or deleted.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectUpdateType.Created">
            <summary>
            	A new object was created.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectUpdateType.Modified">
            <summary>
            	The configuration of an object was modified.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectUpdateType.Deleted">
            <summary>
            	An object was deleted.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ObjectUpdateType.Renamed">
            <summary>
            	An object (or its path) was renamed.
            </summary>
        </member>
        <member name="T:ClearScada.Client.ObjectUpdateEventArgs">
            <summary>
            	Provides data for events raised when objects are created, modified or deleted.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ObjectUpdateEventArgs.UpdateType">
            <summary>
            	Gets the type of update that caused the event.
            </summary>
            <value>
            	One of the <see cref="T:ClearScada.Client.ObjectUpdateType"/> values.
            </value>
        </member>
        <member name="P:ClearScada.Client.ObjectUpdateEventArgs.ObjectId">
            <summary>
            	Gets the ID of the database object that caused the event.
            </summary>
            <value>
            	An <see cref="P:ClearScada.Client.ObjectUpdateEventArgs.ObjectId"/> containing the ID of the database object that caused the event.
            </value>
        </member>
        <member name="P:ClearScada.Client.ObjectUpdateEventArgs.ObjectName">
            <summary>
            	Gets the name of the database object that caused the event.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the full name of the database object that caused the event.
            </value>
        </member>
        <member name="P:ClearScada.Client.ObjectUpdateEventArgs.ObjectClass">
            <summary>
            	Gets the class of the database object that caused the event.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the class of the database object that caused the event.
            </value>
        </member>
        <member name="T:ClearScada.Client.PropertyOverrideCollection">
            <summary>
            	Represents the property overrides of a database object.
            </summary>
        </member>
        <member name="M:ClearScada.Client.PropertyOverrideCollection.#ctor">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.PropertyOverrideCollection"/> class that is empty.
            </summary>
        </member>
        <member name="M:ClearScada.Client.PropertyOverrideCollection.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.PropertyOverrideCollection"/> class that contains properties copied from the specified collection.
            </summary>
            <param name="propertyOverrides">
            	The collection whose properties are copied to the new <see cref="T:ClearScada.Client.PropertyOverrideCollection"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyOverrides"/> is <see langword="null"/>.
            	An element of <paramref name="propertyOverrides"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	Ana element of <paramref name="propertyOverrides"/> is an empty string.
            </exception>
        </member>
        <member name="M:ClearScada.Client.PropertyOverrideCollection.Add(System.String)">
            <summary>
            	Adds a property to the collection.
            </summary>
            <param name="item">
            	The name of the property to add.
            </param>
            <remarks>
            	Adding a property that already exists in the collection leaves the collection unchanged.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="item"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="item"/> is an empty string.
            </exception>
        </member>
        <member name="M:ClearScada.Client.PropertyOverrideCollection.Clear">
            <summary>
            	Removes all properties from the collection.
            </summary>
        </member>
        <member name="M:ClearScada.Client.PropertyOverrideCollection.Contains(System.String)">
            <summary>
            	Determines whether a property is in the collection.
            </summary>
            <param name="item">
            	The name of the property to locate.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="item"/> is found in the collection; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.PropertyOverrideCollection.Remove(System.String)">
            <summary>
            	Removes a property from the collection.
            </summary>
            <param name="item">
            	The name of the property to remove.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="item"/> was found and removed from the collection; or, <see langword="false"/> if <paramref name="item"/> was not in the collection.
            </returns>
            <remarks>
            	Attempting to remove a property that is not in the collection leaves the collection unchanged.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="item"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:ClearScada.Client.PropertyOverrideCollection.Count">
            <summary>
            	Gets the number of properties in the collection.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> containing the number of properties in the collection.
            </value>
        </member>
        <member name="T:ClearScada.Client.PropertyUpdateEventArgs">
            <summary>
            	Provides data for events raised when a property of an object changes value.
            </summary>
        </member>
        <member name="P:ClearScada.Client.PropertyUpdateEventArgs.ObjectId">
            <summary>
            	Gets the ID of the database object that caused the event.
            </summary>
            <value>
            	An <see cref="P:ClearScada.Client.PropertyUpdateEventArgs.ObjectId"/> containing the ID of the database object that caused the event.
            </value>
        </member>
        <member name="P:ClearScada.Client.PropertyUpdateEventArgs.Property">
            <summary>
            	Gets the name of the property whose value has changed.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the property whose value has changed.
            </value>
        </member>
        <member name="P:ClearScada.Client.PropertyUpdateEventArgs.PreviousValue">
            <summary>
            	Gets the value of the property before the change.
            </summary>
            <value>
            	The previous value of the property.
            </value>
        </member>
        <member name="P:ClearScada.Client.PropertyUpdateEventArgs.CurrentValue">
            <summary>
            	Gets the value of the property after the change.
            </summary>
            <value>
            	The current value of the property.
            </value>
        </member>
        <member name="T:ClearScada.Client.ConnectionType">
            <summary>
            	Specifies how to connect to a server.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ConnectionType.Standard">
            <summary>
            	Connect using the standard protocol.
            </summary>
        </member>
        <member name="F:ClearScada.Client.ConnectionType.Http">
            <summary>
            	Connect using a HTTP tunnelling protocol. TODO: This is not yet implemented
            </summary>
        </member>
        <member name="T:ClearScada.Client.ServerSystem">
            <summary>
            	Represents a group of related <see cref="T:ClearScada.Client.ServerNode"/>s.
            </summary>
            <remarks>
            	A <b>ServerSystem</b> can be configured with up to <see cref="F:ClearScada.Client.ServerSystem.MaxNodes"/> <see cref="T:ClearScada.Client.ServerNode"/>s that a client can connect to to access a particular database.
            	Note that a <b>ServerSystem</b> does not have to have all nodes of a redundant standby system configured e.g. if certain nodes can not be reached due to network topology.
            </remarks>
        </member>
        <member name="F:ClearScada.Client.ServerSystem.MaxNodes">
            <summary>
            	Defines the maximum number of nodes in a <see cref="T:ClearScada.Client.ServerSystem"/>.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ServerSystem.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.ServerSystem"/> class with the specified name.
            </summary>
            <param name="name">
            	The name of the <b>ServerSystem</b>.
            </param>
        </member>
        <member name="M:ClearScada.Client.ServerSystem.#ctor(System.Xml.XmlReader)">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.ServerSystem"/> class with configuration loaded from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">
            	The <b>XmlReader</b> to load configuration from.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="reader"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	An error occurred during serialization. The original exception is available using the <see cref="P:System.Exception.InnerException">InnerException</see> property.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerSystem.Save(System.Xml.XmlWriter)">
            <summary>
            	Saves the configuration of the <see cref="T:ClearScada.Client.ServerSystem"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">
            	The <b>XmlWriter</b> to save configuration to.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="writer"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.Name">
            <summary>
            	Gets and sets the name of the system.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the system.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.IsEnabled">
            <summary>
            	Gets and sets the enabled status of the system.
            </summary>
            <value>
            	<see langword="true"/> to enable the system; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            	The default value for <b>IsEnabled</b> is <see langword="true"/>.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.ServerSystem.Nodes">
            <summary>
            	Gets the <see cref="T:ClearScada.Client.ServerNode"/>s in the system.
            </summary>
            <value>
            	An array of <see cref="T:ClearScada.Client.ServerNode"/> objects representing each node in the system.
            </value>
            <remarks>
            	The length of the <b>Nodes</b> array is <see cref="F:ClearScada.Client.ServerSystem.MaxNodes"/>. If there are less than <b>MaxNodes</b> nodes in the system, elements of <b>Nodes</b> may be <see langword="null"/>.
            </remarks>
        </member>
        <member name="T:ClearScada.Client.ServerSystemCollection">
            <summary>
            	A collection of <see cref="T:ClearScada.Client.ServerSystem"/> objects.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ServerSystemCollection.#ctor">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.ServerSystemCollection"/> class that is empty.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ServerSystemCollection.#ctor(System.Xml.XmlReader)">
            <summary>
            	Initializes a new instance of the <see cref="T:ClearScada.Client.ServerSystemCollection"/> class with configuration loaded from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">
            	The <b>XmlReader</b> to load configuration from.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="reader"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	An error occurred during serialization. The original exception is available using the <see cref="P:System.Exception.InnerException">InnerException</see> property.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerSystemCollection.Save(System.Xml.XmlWriter)">
            <summary>
            	Saves the configuration of the <see cref="T:ClearScada.Client.ServerSystemCollection"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">
            	The <b>XmlWriter</b> to save configuration to.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="writer"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerSystemCollection.GetKeyForItem(ClearScada.Client.ServerSystem)">
            <summary>
            Dummy comment for protected sealed method
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:ClearScada.Client.ServerSystemMonitor">
            <summary>
            	Monitors the availability of the <see cref="P:ClearScada.Client.ServerSystem.Nodes">Nodes</see> in a <see cref="T:ClearScada.Client.ServerSystem"/>.
            </summary>
            <remarks>
            	A <b>ServerSystemMonitor</b> monitors each of the <see cref="P:ClearScada.Client.ServerSystem.Nodes">Nodes</see> in a <see cref="T:ClearScada.Client.ServerSystem"/>,
            	and raises events when a node becomes <see cref="E:ClearScada.Client.ServerSystemMonitor.NodeAvailable">available</see>, is <see cref="E:ClearScada.Client.ServerSystemMonitor.NodeShutdown">shut down</see>, or <see cref="E:ClearScada.Client.ServerSystemMonitor.NodeFailed">fails</see>.
            	It also determines the <see cref="P:ClearScada.Client.ServerSystemMonitor.PreferredNode"/> to connect to based on availability, cost, connection type and server state.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.#ctor(ClearScada.Client.ServerSystem)">
            <summary>
            	Initializes a new instance of the <b>ServerSystemMonitor</b> class to monitor the specified system.
            </summary>
            <param name="system">
            	The system to monitor.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="system"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.Dispose">
            <summary>
            	Stops monitoring and releases all resources associated with the <b>ServerSystemMonitor</b>.
            </summary>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.IsNodeAvailable(ClearScada.Client.ServerNode)">
            <summary>
            	Determines whether a specified <see cref="T:ClearScada.Client.ServerNode"/> is available.
            </summary>
            <param name="node">
            	The node for which to check availability.
            </param>
            <returns>
            	<see langword="true"/> if the specified <b>ServerNode</b> is available; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            	A node is available if the ClearSCADA database server is running on it, and is in the <see cref="F:ClearScada.Client.ServerState.Main">Main</see> or <see cref="F:ClearScada.Client.ServerState.Standby">Standby</see> state.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            	The <b>ServerSystemMonitor</b> has been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	The <b>ServerSystemMonitor</b> is not currently monitoring the system.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="node"/> is not a node being monitored by the <b>ServerSystemMonitor</b>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.GetNodeState(ClearScada.Client.ServerNode)">
            <summary>
            	Gets the current state of a specified <see cref="T:ClearScada.Client.ServerNode"/>.
            </summary>
            <param name="node">
            	The node for which to get the state.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.ServerStateDetails"/> containing the node's current state; or, <see langword="null"/> if the ClearSCADA database server is not running on the node.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            	The <b>ServerSystemMonitor</b> has been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	The <b>ServerSystemMonitor</b> is not currently monitoring the system.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="node"/> is not a node being monitored by the <b>ServerSystemMonitor</b>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.Start">
            <summary>
            	Starts monitoring the <see cref="P:ClearScada.Client.ServerSystem.Nodes">Nodes</see> in the <see cref="P:ClearScada.Client.ServerSystemMonitor.System"/>.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            	The <b>ServerSystemMonitor</b> has been disposed.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	The <b>ServerSystemMonitor</b> is already monitoring the system.
            </exception>
        </member>
        <member name="M:ClearScada.Client.ServerSystemMonitor.Stop">
            <summary>
            	Stops monitoring the <see cref="P:ClearScada.Client.ServerSystem.Nodes">Nodes</see> in the <see cref="P:ClearScada.Client.ServerSystemMonitor.System"/>.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            	The <b>ServerSystemMonitor</b> has been disposed.
            </exception>
        </member>
        <member name="E:ClearScada.Client.ServerSystemMonitor.NodeAvailable">
            <summary>
            	Occurs when a previously unreachable <see cref="T:ClearScada.Client.ServerNode"/> becomes available.
            </summary>
        </member>
        <member name="E:ClearScada.Client.ServerSystemMonitor.NodeShutdown">
            <summary>
            	Occurs when a previously available <see cref="T:ClearScada.Client.ServerNode"/> is shut down normally.
            </summary>
        </member>
        <member name="E:ClearScada.Client.ServerSystemMonitor.NodeFailed">
            <summary>
            	Occurs when a previously available <see cref="T:ClearScada.Client.ServerNode"/> is no longer reachable.
            </summary>
        </member>
        <member name="E:ClearScada.Client.ServerSystemMonitor.PreferredNodeChanged">
            <summary>
            	Occurs when the <see cref="P:ClearScada.Client.ServerSystemMonitor.PreferredNode"/> changes.
            </summary>
        </member>
        <member name="P:ClearScada.Client.ServerSystemMonitor.System">
            <summary>
            	Gets the system the <b>ServerSystemMonitor</b> is monitoring.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.ServerSystem"/> the <b>ServerSystemMonitor</b> is monitoring.
            </value>
        </member>
        <member name="P:ClearScada.Client.ServerSystemMonitor.PreferredNode">
            <summary>
            	Gets the current preferred <b>ServerNode</b> to connect to.
            </summary>
            <value>
            	The current preferred <see cref="T:ClearScada.Client.ServerNode"/> to connect to; or, a <see langword="null"/> if there are no available <b>ServerNode</b>s, or <see cref="M:ClearScada.Client.ServerSystemMonitor.Start">Start</see> has not been called.
            </value>
            <remarks>
            	A node is available if the ClearSCADA database server is running on it, and is in the <see cref="F:ClearScada.Client.ServerState.Main">Main</see> or <see cref="F:ClearScada.Client.ServerState.Standby">Standby</see> state.
            	If multiple nodes are available, then the one with the lowest <see cref="P:ClearScada.Client.ServerNode.Cost">Cost</see> is preferred.
            	If available multiple nodes have the same cost, then if one is <b>Main</b> it is preferred, otherwise the choice is arbitrary.
            </remarks>
        </member>
        <member name="T:ClearScada.Client.Severity">
            <summary>
            	Represents the severity of an alarm or event.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Severity.op_Equality(ClearScada.Client.Severity,ClearScada.Client.Severity)">
            <summary>
            	Determines whether two instances of <b>Severity</b> are equal.
            </summary>
            <param name="severity1">
            	The first <b>Severity</b> to compare.
            </param>
            <param name="severity2">
            	The second <b>Severity</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="severity1"/> is equal to <paramref name="severity2"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.op_Inequality(ClearScada.Client.Severity,ClearScada.Client.Severity)">
            <summary>
            	Determines whether two instances of <b>Severity</b> are not equal.
            </summary>
            <param name="severity1">
            	The first <b>Severity</b> to compare.
            </param>
            <param name="severity2">
            	The second <b>Severity</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="severity1"/> is not equal to <paramref name="severity2"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.op_LessThan(ClearScada.Client.Severity,ClearScada.Client.Severity)">
            <summary>
            	Determines whether one <b>Severity</b> is less than another <b>Severity</b>.
            </summary>
            <param name="severity1">
            	The first <b>Severity</b> to compare.</param>
            <param name="severity2">
            	The second <b>Severity</b> to compare.</param>
            <returns>
            	<see langword="true"/> if <paramref name="severity1"/> is less than <paramref name="severity2"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.op_LessThanOrEqual(ClearScada.Client.Severity,ClearScada.Client.Severity)">
            <summary>
            	Determines whether one <b>Severity</b> is less than or equal to another <b>Severity</b>.
            </summary>
            <param name="severity1">
            	The first <b>Severity</b> to compare.</param>
            <param name="severity2">
            	The second <b>Severity</b> to compare.</param>
            <returns>
            	<see langword="true"/> if <paramref name="severity1"/> is less than or equal to <paramref name="severity2"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.op_GreaterThan(ClearScada.Client.Severity,ClearScada.Client.Severity)">
            <summary>
            	Determines whether one <b>Severity</b> is greater than another <b>Severity</b>.
            </summary>
            <param name="severity1">
            	The first <b>Severity</b> to compare.
            </param>
            <param name="severity2">
            	The second <b>Severity</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="severity1"/> is greater than <paramref name="severity2"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.op_GreaterThanOrEqual(ClearScada.Client.Severity,ClearScada.Client.Severity)">
            <summary>
            	Determines whether one <b>Severity</b> is greater than or equal to another <b>Severity</b>.
            </summary>
            <param name="severity1">
            	The first <b>Severity</b> to compare.
            </param>
            <param name="severity2">
            	The second <b>Severity</b> to compare.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="severity1"/> is greater than <paramref name="severity2"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.Equals(ClearScada.Client.Severity)">
            <summary>
            	Returns a value indicating whether this instance is equal to a specified <b>Severity</b> value.
            </summary>
            <param name="other">
            	The value to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="other"/> has the same value as this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.Equals(System.Object)">
            <summary>
            	Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">
            	An object to compare with this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is an instance of <b>Severity</b>, and has the same value as this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.CompareTo(ClearScada.Client.Severity)">
            <summary>
            	Compares this instance to a specified <b>Severity</b> and returns an indication of their relative values.
            </summary>
            <param name="other">
            	The value to compare to this instance.
            </param>
            <returns>
            	A signed number indicating the relative values of this instance and <paramref name="other"/>.<br/>
            	<list type="table">
            		<listheader>
            			<term>Return Value</term>
            			<description>Description</description>
            		</listheader>
            		<item>
            			<term>Less than zero</term>
            			<description>This is instance is less than <paramref name="other"/>.</description>
            		</item>
            		<item>
            			<term>Zero</term>
            			<description>This is instance equal to <paramref name="other"/>.</description>
            		</item>
            		<item>
            			<term>Greater than zero</term>
            			<description>This is instance is greater than <paramref name="other"/>.</description>
            		</item>
            	</list>
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.GetHashCode">
            <summary>
            	Returns the hash code for this instance.
            </summary>
            <returns>
            	A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Severity.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:ClearScada.Client.Severity.Priority">
            <summary>
            Gets the priority of the severity.
            </summary>
            <value>
            An <see cref="T:System.Int16"/> containing the numeric priority of the severity.
            </value>
            <remarks>
            The <b>Priority</b> of a <b>Severity</b> is a number between 1 and 1000 representing the relative priority of the severity.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Severity.Description">
            <summary>
            Gets the description of the severity.
            </summary>
            <value>
            A <see cref="T:System.String"/> containing the description of the severity.
            </value>
        </member>
        <member name="T:ClearScada.Client.SeverityCollection">
            <summary>
            	A read-only collection of <b>Severity</b> values.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.AggregateDictionary">
            <summary>
            	A read-only dictionary of <see cref="T:ClearScada.Client.Simple.Aggregate"/> objects, indexed by aggregate name.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Simple.AggregateDictionary.ContainsKey(System.String)">
            <summary>
            	Determines whether there is a aggregate with the specified name in the <b>AggregateDictionary</b>.
            </summary>
            <param name="key">
            	The name of the aggregate to locate.
            </param>
            <returns>
            	<see langword="true"/> if the <b>AggregateDictionary</b> contains an aggregate with the specified name; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AggregateDictionary.TryGetValue(System.String,ClearScada.Client.Simple.Aggregate@)">
            <summary>
            	Gets the aggregate with the specified name.
            </summary>
            <param name="key">
            	The name of the aggregate to get.
            </param>
            <param name="value">
            	When this method returns, contains the aggregate with the specified name, if found; otherwise, <see langword="null"/>. This parameter is passed uninitialized.
            </param>
            <returns>
            	<see langword="true"/> if the <b>AggregateDictionary</b> contains an aggregate with the specified name; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            	This method combines the functionality of the <see cref="M:ClearScada.Client.Simple.AggregateDictionary.ContainsKey(System.String)">ContainsKey</see> method and the <see cref="P:ClearScada.Client.Simple.AggregateDictionary.Item(System.String)">Item</see> property.
            	Use the <b>TryGetValue</b> method if your code frequently attempts to access aggregates that are not in the <b>AggregateDictionary</b>.
            	Using this method is more efficient than catching the <see cref="T:System.Collections.Generic.KeyNotFoundException"/> thrown by the <b>Item</b> property.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDictionary.Count">
            <summary>
            	Gets the number of aggregates in the <b>AggregateDictionary</b>.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> containing the number of aggregates in the <b>AggregateDictionary</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDictionary.Keys">
            <summary>
            	Gets a collection containing the aggregate names in the <b>AggregateDictionary</b>.
            </summary>
            <value>
            	An <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>&lt;<see cref="T:System.String"/>&gt; containing the aggregate names in the <b>AggregateDictionary</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDictionary.Values">
            <summary>
            	Gets a collection containing the aggregates in the <b>AggregateDictionary</b>.
            </summary>
            <value>
            	An <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>&lt;<see cref="T:ClearScada.Client.Simple.Aggregate"/>&gt; containing the aggregates in the <b>AggregateDictionary</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDictionary.Item(System.String)">
            <summary>
            	Gets the aggregate with the specified name.
            </summary>
            <param name="key">
            	The name of the aggregate to get.
            </param>
            <value>
            	The <see cref="T:ClearScada.Client.Simple.Aggregate"/> with the specified name.
            </value>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            	An aggregate named <paramref name="key"/> does not exist in the <b>AggregateDictionary</b>.
            </exception>
        </member>
        <member name="T:ClearScada.Client.Simple.AlarmConditionDictionary">
            <summary>
            	A read-only dictionary of <see cref="T:ClearScada.Client.Simple.AlarmCondition"/> objects, indexed by condition name.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Simple.AlarmConditionDictionary.ContainsKey(System.String)">
            <summary>
            	Determines whether there is a alarm condition with the specified name in the <b>AlarmConditionDictionary</b>.
            </summary>
            <param name="key">
            	The name of the alarm condition to locate.
            </param>
            <returns>
            	<see langword="true"/> if the <b>AlarmConditionDictionary</b> contains an alarm condition with the specified name; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AlarmConditionDictionary.TryGetValue(System.String,ClearScada.Client.Simple.AlarmCondition@)">
            <summary>
            	Gets the alarm condition with the specified name.
            </summary>
            <param name="key">
            	The name of the alarm condition to get.
            </param>
            <param name="value">
            	When this method returns, contains the alarm condition with the specified name, if found; otherwise, <see langword="null"/>. This parameter is passed uninitialized.
            </param>
            <returns>
            	<see langword="true"/> if the <b>AlarmConditionDictionary</b> contains an alarm condition with the specified name; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            	This method combines the functionality of the <see cref="M:ClearScada.Client.Simple.AlarmConditionDictionary.ContainsKey(System.String)">ContainsKey</see> method and the <see cref="P:ClearScada.Client.Simple.AlarmConditionDictionary.Item(System.String)">Item</see> property.
            	Use the <b>TryGetValue</b> method if your code frequently attempts to access alarm conditionss that are not in the <b>AlarmConditionDictionary</b>.
            	Using this method is more efficient than catching the <see cref="T:System.Collections.Generic.KeyNotFoundException"/> thrown by the <b>Item</b> property.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDictionary.Count">
            <summary>
            	Gets the number of alarm conditions in the <b>AlarmConditionDictionary</b>.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> containing the number of alarm conditions in the <b>AlarmConditionDictionary</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDictionary.Keys">
            <summary>
            	Gets a collection containing the condition names in the <b>AlarmConditionDictionary</b>.
            </summary>
            <value>
            	An <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>&lt;<see cref="T:System.String"/>&gt; containing the condition names in the <b>AlarmConditionDictionary</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDictionary.Values">
            <summary>
            	Gets a collection containing the alarm conditions in the <b>AlarmConditionDictionary</b>.
            </summary>
            <value>
            	An <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>&lt;<see cref="T:ClearScada.Client.Simple.AlarmCondition"/>&gt; containing the alarm conditions in the <b>AlarmConditionDictionary</b>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDictionary.Item(System.String)">
            <summary>
            	Gets the alarm condition with the specified name.
            </summary>
            <param name="key">
            	The name of the alarm condition to get.
            </param>
            <value>
            	The <see cref="T:ClearScada.Client.Simple.AlarmCondition"/> with the specified name.
            </value>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            	An alarm condition named <paramref name="key"/> does not exist in the <b>AlarmConditionDictionary</b>.
            </exception>
        </member>
        <member name="T:ClearScada.Client.Simple.AreaOfInterest">
            <summary>
            	Represents an Area of Interest.
            </summary>
            <remarks>
            	An <b>AreaOfInterest</b> maintains a reference to its <see cref="T:ClearScada.Client.Simple.Connection"/> object.
            	If the <b>Connection</b> is disconnected, then operations on the <b>AreaOfInterest</b> that require a server request will throw an <see cref="T:System.InvalidOperationException"/>.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.Refresh">
            <summary>
            	Refreshes the <b>AreaOfInterest</b> with the latest details from the server.
            </summary>
            <scxpermission name="Read" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	The area has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.GetChild(System.String)">
            <summary>
            	Gets the child of the area with the specified name.
            </summary>
            <param name="areaName">
            	The name of the child area to look up.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the child area with the specified name, if found; otherwise, <see langword="null"/>.
            </returns>
            <scxpermission name="Read" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.GetChildren(System.String)">
            <summary>
            	Gets the children of the area whose names match the specified pattern.
            </summary>
            <param name="areaNamePattern">
            	The pattern on which to match area names; or, an empty string to return all children regardless of name.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterestCollection"/> with an entry for each child of the area whose name matches the specified pattern; or, an an empty <b>AreaOfInterestCollection</b> if the area contains no such children.
            </returns>
            <remarks>
            	The syntax used for <paramref name="areaNamePattern"/> is OPC filter syntax. See OPC AE 1.1 Appendix A for details.
            </remarks>
            <scxpermission name="Read" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaNamePattern"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	The area has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.GetDescendants">
            <summary>
            	Gets all descendants of the area.
            </summary>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterestCollection"/> with an entry for each descendant of the area; or, an an empty <b>AreaOfInterestCollection</b> if the area has no descendants.
            </returns>
            <scxpermission name="Read" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	The area has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.GetDescendants(System.String)">
            <summary>
            	Gets the descendants of the area whose names match the specified pattern.
            </summary>
            <param name="areaNamePattern">
            	The pattern on which to match area names.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterestCollection"/> with an entry for each descendant of the area whose name matches the specified pattern; or, an an empty <b>AreaOfInterestCollection</b>, if the area contains no such descendants.
            </returns>
            <remarks>
            	The syntax used for <paramref name="areaNamePattern"/> is OPC filter syntax. See OPC AE 1.1 Appendix A for details.
            </remarks>
            <scxpermission name="Read" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaNamePattern"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	The area has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.CreateArea(System.String)">
            <summary>
            	Creates a new Area of Interest as a child of this area.
            </summary>
            <param name="areaName">
            	The name to give the new area; or, an empty string to generate a default name for the new area.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterest"/> representing the newly created area.
            </returns>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	The area has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="areaName"/> is too long.<br/>-or-<br/>
            	<paramref name="areaName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="areaName"/> clashes with the name of an existing area in this area.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating an area named <paramref name="areaName"/> in this area would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating a new area in this area would exceed the database's maximum area depth.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.Delete(System.Boolean)">
            <summary>
            	Deletes the area from the database.
            </summary>
            <param name="forceDeletion">
            	<see langword="true"/> to delete the area even there are references to it; or, <see langword="false"/> to only delete the area if it is not referenced.
            </param>
            <remarks>
            	If there are references from database objects to the area, then it will only be deleted if <paramref name="forceDeletion"/> is <see langword="true"/>.
            	In this case, all references to the area will be cleared.
            </remarks>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	The area has been deleted from the database.<br/>-or-<br/>
            	The area is the database's root area.
            </exception>
            <exception cref="T:ClearScada.Client.AreaReferenceException">
            	The area, or its children, are referenced by objects, and <paramref name="forceDeletion"/> is <see langword="false"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.Rename(System.String)">
            <summary>
            	Changes the name of the area.
            </summary>
            <param name="areaName">
            	The new name to give the area.
            </param>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="areaName"/> is an empty string.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	The area has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="areaName"/> is too long.<br/>-or-<br/>
            	<paramref name="areaName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="areaName"/> clashes with the name of an existing area in this area's parent area.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Renaming this area to <paramref name="areaName"/> would exceed the database's maximum full name length.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.MoveTo(ClearScada.Client.Simple.AreaOfInterest)">
            <summary>
            	Moves the area to a new location
            </summary>
            <param name="parent">
            	The area to move the area to.
            </param>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	The area has been deleted from the database.<br/>-or-<br/>
            	<paramref name="parent"/> has been deleted from the database<br/>-or-<br/>
            	The area is the database's root area.<br/>-or-<br/>
            	<paramref name="parent"/> is the same as this area.<br/>-or-<br/>
            	<paramref name="parent"/> is a child of this area.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	The name of this area clashes with the name of an existing area in <paramref name="parent"/>.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Moving this area to <paramref name="parent"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Moving this area to <paramref name="parent"/> would exceed the database's maximum area depth.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.AreaOfInterest.CopyTo(ClearScada.Client.Simple.AreaOfInterest,System.String)">CopyTo</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.AreaOfInterest.CopyTo(ClearScada.Client.Simple.AreaOfInterest,System.String)">
            <summary>
            	Creates a copy of the area.
            </summary>
            <param name="parent">
            	The area in which to create the new area.
            </param>
            <param name="areaName">
            	The name to give the new area; or, an empty string to generate a default name for the new area.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterest"/> representing the newly created database area.
            </returns>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AreaOfInterest</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The area has been deleted from the database.<br/>-or-<br/>
            	<paramref name="parent"/> has been deleted from the database.<br/>-or-<br/>
            	The area is the database's root area.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="areaName"/> is too long.<br/>-or-<br/>
            	<paramref name="areaName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="areaName"/> clashes with the name of an existing object in <paramref name="parent"/>.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating a copy of this area named <paramref name="areaName"/> in <paramref name="parent"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating a copy of this area in <paramref name="parent"/> would exceed the database's maximum area depth.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.AreaOfInterest.MoveTo(ClearScada.Client.Simple.AreaOfInterest)">MoveTo</seealso>
        </member>
        <member name="P:ClearScada.Client.Simple.AreaOfInterest.Id">
            <summary>
            	Gets the unique identifer of the area.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.ObjectId"/> containing the ID of the area.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AreaOfInterest.Parent">
            <summary>
             Gets the parent of the area.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterest"/> representing the parent of the area; or, <see langword="null"/> if the area is the database's root area.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AreaOfInterest.Name">
            <summary>
            	Gets the name of the area.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the area.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AreaOfInterest.FullName">
            <summary>
            	Gets the full name of the area.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the area.
            </value>
        </member>
        <member name="T:ClearScada.Client.Simple.AreaOfInterestCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.Simple.AreaOfInterest"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.Connection">
            <summary>
            	Represents a connection to a database.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <b>Connection</b> class with the specified client name.
            </summary>
            <param name="clientName">
            	The name of the client application.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="clientName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="clientName"/> is an empty string.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.Connect(System.String)">
            <summary>
            	Connects the <b>Connection</b> to the server running on the specified host using default settings.
            </summary>
            <overloads>
            	Connects the <b>Connection</b> to the specified server.
            </overloads>
            <param name="hostName">
            	The DNS name of the server to connect to.
            </param>
            <remarks>
            	If the <b>Connection</b> is currently connected, it will be disconnected and a new connection established.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            	The <b>Connection</b> object has been disposed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="hostName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.Connect(ClearScada.Client.ServerNode)">
            <summary>
            	Connects the <b>Connection</b> to the specified server.
            </summary>
            <param name="node">
            	The server to connect to.
            </param>
            <remarks>
            	If the <b>Connection</b> is currently connected, it will be disconnected and a new connection established.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            	The <b>Connection</b> object has been disposed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="node"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.Disconnect">
            <summary>
            	Closes the <b>Connection</b> and allows it to be re-connected.
            </summary>
            <remarks>
            	After calling <b>Disconnect</b>, the <b>Connection</b> object can be re-connected by calling <see cref="M:ClearScada.Client.Simple.Connection.Connect(ClearScada.Client.ServerNode)">Connect</see> again.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.Dispose">
            <summary>
            	Releases all resources associated with the <b>Connection</b>.
            </summary>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.LogOn(System.String,System.String)">
            <summary>
            	Logs the <b>Connection</b> on as the specified user.
            </summary>
            <param name="userName">The name of the user to log on as.</param>
            <param name="password">The password of the user to log on as.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="userName"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="password"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The username and password combination is incorrect.
            </exception>
            <exception cref="T:ClearScada.Client.PasswordExpiredException">
            	The password of the specified user has expired.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.LogOff">
            <summary>
            	Logs the <b>Connection</b> off.
            </summary>
            <remarks>
            	Calling <b>LogOff</b> while not logged on has no effect.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetObject(ClearScada.Client.ObjectId)">
            <summary>
            	Gets the database object with the specified ID.
            </summary>
            <overloads>
            	Gets the specified database object.
            </overloads>
            <param name="objectId">
            	The ID of the object to look up.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the database object with the specified ID, if found; otherwise, <see langword="null"/>.
            </returns>
            <remarks>
            	To get the database's root group, pass <see cref="F:ClearScada.Client.ObjectId.Root"/> as <paramref name="objectId"/>.
            </remarks>
            <scxpermission name="Read" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetObject(System.String)">
            <summary>
            	Gets the database object with the specified name.
            </summary>
            <param name="objectName">
            	The name of the object to look up.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the database object with the specified name, if found; otherwise, <see langword="null"/>.
            </returns>
            <scxpermission name="Read" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="objectName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetObjects(System.String,System.String)">
            <summary>
            	Gets the objects in the database that match the specified criteria.
            </summary>
            <param name="className">
            	The class of objects to return; or, an empty string to return all objects regardless of class.
            </param>
            <param name="objectNamePattern">
            	The pattern on which to match object names; or, an empty string to return all objects regardless of name.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObjectCollection"/> with an entry for each object in the database that is of (or derived from) the specified class, and whose name matches the specified pattern; or, an an empty <b>DBObjectCollection</b>, if the database contains no such objects.
            </returns>
            <remarks>
            	The syntax used for <paramref name="objectNamePattern"/> is OPC filter syntax. See OPC AE 1.1 Appendix A for details.
            </remarks>
            <scxpermission name="Browse" on="Root Group"/>
            <scxpermission name="Browse" on="Objects">
            	Objects for which the caller does not have <b>Browse</b> permission will not be returned.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="className"/> is <see langword="null"/>.
            	<paramref name="objectNamePattern"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="className"/> is not a valid database class.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.CreateObject(System.String,ClearScada.Client.ObjectId,System.String)">
            <summary>
            	Creates a new object in the database.
            </summary>
            <param name="className">
            	The class of object to create.
            </param>
            <param name="parentId">
            	The ID of the group in which to create the new object.
            </param>
            <param name="objectName">
            	The name to give the new object; or, an empty string to generate a default name for the new object.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the newly created database object.
            </returns>
            <scxpermission name="Configure" on="Parent Group"/>
            <scxpermission name="Security" on="Parent Group">
            	Needed (in addition to <b>Configure</b>) if new object is a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="className"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="objectName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="className"/> is not a valid database class.<br/>-or-<br/>
            	<paramref name="className"/> specifies a class that is not creatable,<br/>-or-<br/>
            	<paramref name="className"/> specifies a class that is not allowed in the type of group specified by <paramref name="parentId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies a group that is currently controlled by a configuration permit, and <paramref name="className"/> specifies a class that can't be created in a permit.<br/>-or-<br/>
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="parentId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies an object that is not a group.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies an empty instance (one without a template configured).<br/>-or-<br/>
            	<paramref name="parentId"/> specifies a template that is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="objectName"/> is too long.<br/>-or-<br/>
            	<paramref name="objectName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="objectName"/> clashes with the name of an existing object in <paramref name="parentId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies a template, and <paramref name="objectName"/> clashes with the name of an existing object in an instance of that template.<br/>-or-<br/>
            	<paramref name="className"/> is <c>CDBUser</c>, and <paramref name="objectName"/> clashes with the name of an existing user or built-in user.<br/>-or-<br/>
            	<paramref name="className"/> is <c>CDBUser</c>, and <paramref name="objectName"/> only contains numeric digits.<br/>-or-<br/>
            	<paramref name="className"/> is <c>CDBUser</c>, and <paramref name="objectName"/> is shorter than the minimum username length.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating an object named <paramref name="objectName"/> in <paramref name="parentId"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating a new object of class <paramref name="className"/> in <paramref name="parentId"/> would exceed the database's maximum object depth.<br/>-or-<br/>
            	Creating a new object of class <paramref name="className"/> would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.Connection.CreateInstance(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.String)">CreateInstance</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.CreateInstance(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.String)">
            <summary>
            	Creates a new instance of a specified template.
            </summary>
            <param name="templateId">
            	The ID of the template to create an instance of.
            </param>
            <param name="parentId">
            	The ID of the group in which to create the new instance.
            </param>
            <param name="instanceName">
            	The name to give the new instance; or, an empty string to generate a default name for the new instance.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the newly created instance.
            </returns>
            <scxpermission name="Configure" on="Parent Group"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="instanceName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="templateId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="parentId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="templateId"/> specifies an object that is not a template.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies an object that is not a group.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies an empty instance (one without a template configured).<br/>-or-<br/>
            	<paramref name="parentId"/> specifies the same template as <paramref name="templateId"/>, or a group that is a child of <paramref name="templateId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies another instance of <paramref name="templateId"/>, or a group that is a child of an instance of <paramref name="templateId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies a template that is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="instanceName"/> is too long.<br/>-or-<br/>
            	<paramref name="instanceName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="instanceName"/> clashes with the name of an existing object in <paramref name="parentId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies a template, and <paramref name="instanceName"/> clashes with the name of an existing object in an instance of that template.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating an object named <paramref name="instanceName"/> in <paramref name="parentId"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating an object in <paramref name="parentId"/> would exceed the database's maximum object depth.<br/>-or-<br/>
            	Creating the objects of <paramref name="templateId"/> in the new instance would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating the objects of <paramref name="templateId"/> in the new instance would exceed the database's maximum object depth.<br/>-or-<br/>
            	Creating the objects of <paramref name="templateId"/> in the new instance would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.Connection.CreateObject(System.String,ClearScada.Client.ObjectId,System.String)">CreateObject</seealso>
            <seealso cref="M:ClearScada.Client.Simple.Connection.ConvertInstance(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.Boolean)">ConvertInstance</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.DeleteObject(ClearScada.Client.ObjectId,System.Boolean)">
            <summary>
            	Deletes an object from the database.
            </summary>
            <param name="objectId">
            	The ID of the object to delete.
            </param>
            <param name="forceDeletion">
            	<see langword="true"/> to delete the object even if there are references to it; or, <see langword="false"/> to only delete the object if it is not referenced.
            </param>
            <remarks>
            	If there are references from other database objects to the object, or to children of the object, then it will only be deleted if <paramref name="forceDeletion"/> is <see langword="true"/>.
            	In this case, all references to the object(s) will be cleared. When deleting a group, references from one object in the group to another object in the group do not prevent deletion.
            </remarks>
            <scxpermission name="Configure" on="Target Object">
            	If target object is a group, then also needed on all children.
            </scxpermission>
            <scxpermission name="Security" on="Target Object">
            	Needed (in addition to <b>Configuration</b>) if target object is a user or user group. If target object is a group, then needed on any children that are users or user groups.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="objectId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies the database's root group.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies a user, or a group containing a user, that is currently logged on.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies a user, or a group containing a user, that has an active configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.ObjectReferenceException">
            	The object specified by <paramref name="objectId"/>, or its children, are referenced by other objects, and <paramref name="forceDeletion"/> is <see langword="false"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object in an instance that is controlled by the instance's template.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object in a template, and the corresponding object in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.RenameObject(ClearScada.Client.ObjectId,System.String)">
            <summary>
            	Changes the name of an object in the database.
            </summary>
            <param name="objectId">
            	The ID of the object to rename.
            </param>
            <param name="objectName">
            	The new name to give the object.
            </param>
            <scxpermission name="Configure" on="Target Object"/>
            <scxpermission name="Security" on="Target Object">
            	Needed (in addition to <b>Configuration</b>) if target object is a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="objectName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="objectName"/> is an empty string.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="objectId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies the database's root group.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="objectName"/> is too long.<br/>-or-<br/>
            	<paramref name="objectName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="objectName"/> clashes with the name of an existing object in <paramref name="objectId"/>'s parent group.<br/>-or-<br/>
            	<paramref name="objectId"/> is in a template, and <paramref name="objectName"/> clashes with the name of an existing object in an instance of that template.<br/>-or-<br/>
            	<paramref name="objectId"/> is a user, and <paramref name="objectName"/> clashes with the name of an existing user or built-in user.<br/>-or-<br/>
            	<paramref name="objectId"/> is a user, and <paramref name="objectName"/> only contains numeric digits.<br/>-or-<br/>
            	<paramref name="objectId"/> is a user, and <paramref name="objectName"/> is shorter than the minimum username length.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Renaming <paramref name="objectId"/> to <paramref name="objectName"/> would exceed the database's maximum full name length.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object in an instance that is controlled by the instance's template.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object in a template, and the corresponding object in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.MoveObject(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId)">
            <summary>
            	Moves an object in the database to a new location.
            </summary>
            <param name="objectId">
            	The ID of the object to move.
            </param>
            <param name="parentId">
            	The ID of the group to move the object to.
            </param>
            <scxpermission name="Configure" on="Target Object">
            	If target object is a group, then also needed on all children.
            </scxpermission>
            <scxpermission name="Security" on="Target Object">
            	Needed (in addition to <b>Configure</b>) if target object is a user or user group. If target object is a group, then also needed on any children that are users or user groups.
            </scxpermission>
            <scxpermission name="Configure" on="Old Parent"/>
            <scxpermission name="Configure" on="New Parent"/>
            <scxpermission name="Security" on="New Parent">
            	Needed if target object is a user or user group, or a group containing a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="objectId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="parentId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies an object that is not a group.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies the database's root group.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies the same object as <paramref name="objectId"/>.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies a group, and <paramref name="parentId"/> specifies a child of that group.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object of a class that is not allowed in the type of group specified by <paramref name="parentId"/>.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies a group that contains an object of a class that is not allowed in the type of group specified by <paramref name="parentId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies an empty instance (one without a template configured).<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an instance, or a group containing an instance, and <paramref name="parentId"/> specifies that instance's template.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an instance, or a group containing an instance, and <paramref name="parentId"/> specifies another instance of that instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	The name of <paramref name="objectId"/> clashes with the name of an existing object in <paramref name="parentId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies a template, and the name of <paramref name="objectId"/> clashes with the name of an existing object in an instance of that template.<br/>-or-<br/>
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Moving <paramref name="objectId"/> to <paramref name="parentId"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Moving <paramref name="objectId"/> to <paramref name="parentId"/> would exceed the database's maximum object depth.<br/>-or-<br/>
            	Moving <paramref name="objectId"/> to <paramref name="parentId"/> would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object in an instance that is controlled by the instance's template.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object in a template, and the corresponding object in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.Connection.CopyObject(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.String)">CopyObject</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.CopyObject(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.String)">
            <summary>
            	Creates a copy of an object in the database.
            </summary>
            <param name="objectId">
            	The ID of the object to copy.
            </param>
            <param name="parentId">
            	The ID of the group in which to create the new object.
            </param>
            <param name="objectName">
            	The name to give the new object; or, an empty string to generate a default name for the new object.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the newly created database object.
            </returns>
            <scxpermission name="Read" on="Target Object">
            	If target object is a group, then also needed on all children.
            </scxpermission>
            <scxpermission name="Configure" on="New Parent"/>
            <scxpermission name="Security" on="New Parent">
            	Needed (in addition to <b>Configure</b>) if target object is a user or user group, or a group containing a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="objectName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="objectId"/> specifies an object of a class that is not allowed in the type of group specified by <paramref name="parentId"/>.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies a group that contains an object of a class that is not allowed in the type of group specified by <paramref name="parentId"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="objectId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="parentId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies an object that is not a group.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies the database's root group.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies an empty instance (one without a template configured).
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="objectName"/> is too long.<br/>-or-<br/>
            	<paramref name="objectName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="objectName"/> clashes with the name of an existing object in <paramref name="parentId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies a template, and <paramref name="objectName"/> clashes with the name of an existing object in an instance of that template.<br/>-or-<br/>
            	<paramref name="objectId"/> is a user, and <paramref name="objectName"/> clashes with the name of an existing user or built-in user.<br/>-or-<br/>
            	<paramref name="objectId"/> is a user, and <paramref name="objectName"/> only contains numeric digits.<br/>-or-<br/>
            	<paramref name="objectId"/> is a user, and <paramref name="objectName"/> is shorter than the minimum username length.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating a copy of <paramref name="objectId"/> named <paramref name="objectName"/> in <paramref name="parentId"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating a copy of <paramref name="objectId"/> in <paramref name="parentId"/> would exceed the database's maximum object depth.<br/>-or-<br/>
            	Creating a copy of <paramref name="objectId"/> in <paramref name="parentId"/> would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.Connection.MoveObject(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId)">MoveObject</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.ConvertObject(ClearScada.Client.ObjectId,System.String)">
            <summary>
            	Converts an object to a different class.
            </summary>
            <param name="objectId">
            	The ID of the object to convert.
            </param>
            <param name="className">
            	The name of the class to convert the object to.
            </param>
            <scxpermission name="Configure" on="Target Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="className"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="className"/> is not a valid database class.<br/>-or-<br/>
            	<paramref name="className"/> specifies a class that is not a valid conversion for <paramref name="objectId"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="objectId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies the database's root group.<br/>-or-<br/>
            	The specified conversion is from one group type to another, and the group contains objects that are not allowed in the target type.
            </exception>
            <exception cref="T:ClearScada.Client.ObjectReferenceException">
            	The specified conversion is from group to template, but objects in the group are referenced by objects outside the group.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object in an instance that is controlled by the instance's template, and is not an abstract object or a converted abstract object.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object in a template, and the corresponding object in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.ConvertInstance(ClearScada.Client.ObjectId,ClearScada.Client.ObjectId,System.Boolean)">
            <summary>
            	Converts an instance to a different template.
            </summary>
            <param name="instanceId">
            	The ID of the instance to convert.
            </param>
            <param name="templateId">
            	The ID of the template to convert the instance to.
            </param>
            <param name="forceConversion">
            	<see langword="true"/> to convert the instance even if contains local objects; or, <see langword="false"/> to only convert the instance if it does not contain local objects.
            </param>
            <remarks>
            	If the instance contains local objects (i.e. objects that are defined in the instance and not its template), then it will only be converted if <paramref name="forceConversion"/> is <see langword="true"/>.
            	In this case, the local objects will be deleted.
            </remarks>
            <scxpermission name="Configure" on="Target Instance"/>
            <scxpermission name="Read" on="Template"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="instanceId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="templateId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="instanceId"/> specifies an object that is not an instance.<br/>-or-<br/>
            	<paramref name="templateId"/> specifies an object that is not a template.<br/>-or-<br/>
            	<paramref name="instanceId"/> specifies an instance in the template specified by <paramref name="templateId"/>.<br/>-or-<br/>
            	<paramref name="instanceId"/> specifies an instance in a template, and <paramref name="templateId"/> specifies a template that contains another instance of that template.<br/>-or-<br/>
            	<paramref name="instanceId"/> specifies an instance in an instance of the template specified by <paramref name="templateId"/>.<br/>-or-<br/>
            	<paramref name="instanceId"/> specifies an instance in an instance, and <paramref name="templateId"/> specifies a template that contains another instance of that instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Converting <paramref name="instanceId"/> to <paramref name="templateId"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Converting <paramref name="instanceId"/> to <paramref name="templateId"/> would exceed the database's maximum object depth.<br/>-or-<br/>
            	Converting <paramref name="instanceId"/> to <paramref name="templateId"/> would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	<paramref name="instanceId"/> specifies an instance in an instance, and the TemplateId of the child instance is controlled by the parent instance's template.<br/>-or-<br/>
            	<paramref name="instanceId"/> specifies an instance in a template, and the corresponding instance in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.LocalObjectsException">
            	The instance specified by <paramref name="instanceId"/> contains local objects, and <paramref name="forceConversion"/> is <see langword="false"/>.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.ChangeUserPassword(ClearScada.Client.ObjectId,System.String,System.String)">
            <summary>
            	Changes the password of a user.
            </summary>
            <param name="objectId">
            	The object ID of the user whose password to change.
            </param>
            <param name="oldPassword">
            	The user's current password, if required; otherwise, an empty string.
            </param>
            <param name="newPassword">
            	The user's new password.
            </param>
            <remarks>
            The <paramref>oldPassword</paramref> parameter is required if the connection is logged on the specified user.
            If the connection is logged on as a different user, then that user must have <b>Configure</b> and <b>Security</b> permissions on the specified user object.
            </remarks>
            <scxpermission name="Configure, Security" on="User">
            	Not required if the connection is logged on as the specified user.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="oldPassword"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="newPassword"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="objectId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object that is not a user.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidPasswordException">
            	<paramref name="newPassword"/> is an empty string, and the specified user is not allowed an empty password.<br/>-or-<br/>
            	<paramref name="newPassword"/> does not meet the required password length for the specified user.<br/>-or-<br/>
            	<paramref name="newPassword"/> does not meet the required password strength for the specified user.<br/>-or-<br/>
            	<paramref name="newPassword"/> is the same as the specified user's current passwod.<br/>-or-<br/>
            	<paramref name="newPassword"/> is the same as a password recently used by the specified user.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The connection is logged on the specified user, and <paramref name="oldPassword"/> is incorrect.<br/>-or-<br/>
            	The connection is logged on the specified user, and the user is not allowed to change their own password.<br/>-or-<br/>
            	The connection is logged as a different user, and that user does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.ChangeUserVoicemailPin(ClearScada.Client.ObjectId,System.String,System.String)">
            <summary>
            	Changes the Voicemail PIN of a user.
            </summary>
            <param name="objectId">
            	The object ID of the user whose password to change.
            </param>
            <param name="oldPin">
            	The user's current PIN, if required; otherwise, an empty string.
            </param>
            <param name="newPin">
            	The user's new PIN.
            </param>
            <remarks>
            The <paramref>oldPin</paramref> parameter is required if the connection is logged on the specified user.
            If the connection is logged on as a different user, then that user must have <b>Configure</b> and <b>Security</b> permissions on the specified user object.
            </remarks>
            <scxpermission name="Configure, Security" on="User">
            	Not required if the connection is logged on as the specified user.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="oldPin"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="newPin"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="newPin"/> contains characters other than digits.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="objectId"/> is not a valid object ID.<br/>-or-<br/>
            	<paramref name="objectId"/> specifies an object that is not a user.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidPasswordException">
            	<paramref name="newPin"/> is an empty string, and the specified user is not allowed an empty PIN.<br/>-or-<br/>
            	<paramref name="newPin"/> does not meet the database's required PIN length.<br/>-or-<br/>
            	<paramref name="newPin"/> is the same as the specified user's current PIN.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The connection is logged on the specified user, and <paramref name="oldPin"/> is incorrect.<br/>-or-<br/>
            	The connection is logged as a different user, and that user does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetClasses(System.String[])">
            <summary>
            	Gets the metadata for the specified database classes.
            </summary>
            <param name="classNames">
            	The names of the classes for which to get the metadata.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.ClassDefinitionCollection"/> with an entry for each of the specified database classes.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="classNames"/> is <see langword="null"/>.
            	An element of <paramref name="classNames"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	An element of <paramref name="classNames"/> is not a valid database class.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetClass(System.String)">
            <summary>
            	Gets the metadata for a specified database class.
            </summary>
            <param name="className">
            	The name of the class for which to get the metadata.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> that contains the metadata the specified database class.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="className"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="className"/> is not a valid database class.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetSeverities">
            <summary>
            	Gets metadata for the database's Alarm &amp; Event severities.
            </summary>
            <returns>
            	A <see cref="T:ClearScada.Client.SeverityCollection"/> containing an entry for each of the database's configured severities.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.RegisterForObjectUpdates(System.String[])">
            <summary>
            	Causes an event to be raised when database objects of specified classes are created, modified or deleted.
            </summary>
            <param name="classNames">
            	An array of database classes for which to raise an event.
            </param>
            <remarks>
            	This method causes the <see cref="E:ClearScada.Client.Simple.Connection.ObjectUpdated"/> event to be raised whenever an object of (or derived from) one of the specified classes is created, modified or deleted.
            	If the method is called again with a different set of classes, the two sets will be merged. To stop events being raised, call <see cref="M:ClearScada.Client.Simple.Connection.UnregisterObjectUpdates">UnregisterObjectUpdates</see>.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="classNames"/> is <see langword="null"/>.<br/>-or-<br/>
            	An element of <paramref name="classNames"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="classNames"/> is an empty array.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	An element of <paramref name="classNames"/> is not a valid database class.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.Connection.UnregisterObjectUpdates">UnregisterObjectUpdates</seealso>
            <seealso cref="E:ClearScada.Client.Simple.Connection.ObjectUpdated">ObjectUpdated</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.UnregisterObjectUpdates">
            <summary>
            	Stops events being raised when database objects are created, modified or deleted.
            </summary>
            <remarks>
            	It is safe to call this method without having called <see cref="M:ClearScada.Client.Simple.Connection.RegisterForObjectUpdates(System.String[])">RegisterForObjectUpdates</see>.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.Connection.RegisterForObjectUpdates(System.String[])">RegisterForObjectUpdates</seealso>
            <seealso cref="E:ClearScada.Client.Simple.Connection.ObjectUpdated">ObjectUpdated</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetArea(ClearScada.Client.AreaOfInterestId)">
            <summary>
            	Gets the Area of Interest with the specified ID.
            </summary>
            <overloads>
            	Gets the specified Area Of Interest.
            </overloads>
            <param name="areaId">
            	The ID of the area to look up.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterest"/> representing the area with the specified ID, if found; otherwise, <see langword="null"/>.
            </returns>
            <remarks>
            	To get the database's root area, pass <see cref="F:ClearScada.Client.AreaOfInterestId.Root"/> as <paramref name="areaId"/>.
            </remarks>
            <scxpermission name="Read" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetArea(System.String)">
            <summary>
            	Gets the Area of Interest with the specified name.
            </summary>
            <param name="areaName">
            	The name of the area to look up.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterest"/> representing the area with the specified name, if found; otherwise, <see langword="null"/>.
            </returns>
            <scxpermission name="Read" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.GetAreas(System.String)">
            <summary>
            	Gets the Areas of Interest in the database whose names match the specified pattern.
            </summary>
            <param name="areaNamePattern">
            	The pattern on which to match area names; or, an empty string to return all area regardless of name.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterestCollection"/> with an entry for each area in the database whose name matches the specified pattern; or, an an empty <b>DBObjectCollection</b>, if the database contains no such areas.
            </returns>
            <remarks>
            	The syntax used for <paramref name="areaNamePattern"/> is OPC filter syntax. See OPC AE 1.1 Appendix A for details.
            </remarks>
            <scxpermission name="Read" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaNamePattern"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.CreateArea(ClearScada.Client.AreaOfInterestId,System.String)">
            <summary>
            	Creates a new Area of Interest in the database.
            </summary>
            <param name="parentId">
            	The ID of the area in which to create the new area.
            </param>
            <param name="areaName">
            	The name to give the new area; or, an empty string to generate a default name for the new area.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterest"/> representing the newly created area.
            </returns>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	<paramref name="parentId"/> is not a valid area ID.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="areaName"/> is too long.<br/>-or-<br/>
            	<paramref name="areaName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="areaName"/> clashes with the name of an existing area in <paramref name="parentId"/>.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating an area named <paramref name="areaName"/> in <paramref name="parentId"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating a new area in <paramref name="parentId"/> would exceed the database's maximum area depth.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.DeleteArea(ClearScada.Client.AreaOfInterestId,System.Boolean)">
            <summary>
            	Deletes an Area of Interest from the database.
            </summary>
            <param name="areaId">
            	The ID of the area to delete.
            </param>
            <param name="forceDeletion">
            	<see langword="true"/> to delete the area even there are references to it; or, <see langword="false"/> to only delete the area if it is not referenced.
            </param>
            <remarks>
            	If there are references from database objects to the area, then it will only be deleted if <paramref name="forceDeletion"/> is <see langword="true"/>.
            	In this case, all references to the area will be cleared.
            </remarks>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	<paramref name="areaId"/> is not a valid area ID.<br/>-or-<br/>
            	<paramref name="areaId"/> specifies the database's root area.
            </exception>
            <exception cref="T:ClearScada.Client.AreaReferenceException">
            	The area specified by <paramref name="areaId"/>, or its children, are referenced by objects, and <paramref name="forceDeletion"/> is <see langword="false"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.RenameArea(ClearScada.Client.AreaOfInterestId,System.String)">
            <summary>
            	Changes the name of an Area Of Interest.
            </summary>
            <param name="areaId">
            	The ID of the area to rename.
            </param>
            <param name="areaName">
            	The new name to give the area.
            </param>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="areaName"/> is an empty string.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	<paramref name="areaId"/> is not a valid object ID.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="areaName"/> is too long.<br/>-or-<br/>
            	<paramref name="areaName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="areaName"/> clashes with the name of an existing area in <paramref name="areaId"/>'s parent area.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Renaming <paramref name="areaId"/> to <paramref name="areaName"/> would exceed the database's maximum full name length.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.MoveArea(ClearScada.Client.AreaOfInterestId,ClearScada.Client.AreaOfInterestId)">
            <summary>
            	Moves an Area of Interest to a new location
            </summary>
            <param name="areaId">
            	The ID of the area to move.
            </param>
            <param name="parentId">
            	The ID of the area to move the area to.
            </param>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	<paramref name="areaId"/> is not a valid area ID.<br/>-or-<br/>
            	<paramref name="parentId"/> is not a valid area ID.<br/>-or-<br/>
            	<paramref name="areaId"/> specifies the database's root area.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies the same area as <paramref name="areaId"/>.<br/>-or-<br/>
            	<paramref name="parentId"/> specifies a child of <paramref name="areaId"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	The name of <paramref name="areaId"/> clashes with the name of an existing area in <paramref name="parentId"/>.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Moving <paramref name="areaId"/> to <paramref name="parentId"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Moving <paramref name="areaId"/> to <paramref name="parentId"/> would exceed the database's maximum area depth.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.Connection.CopyArea(ClearScada.Client.AreaOfInterestId,ClearScada.Client.AreaOfInterestId,System.String)">CopyArea</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.Connection.CopyArea(ClearScada.Client.AreaOfInterestId,ClearScada.Client.AreaOfInterestId,System.String)">
            <summary>
            	Creates a copy of an Area of Interest.
            </summary>
            <param name="areaId">
            	The ID of the area to copy.
            </param>
            <param name="parentId">
            	The ID of the area in which to create the new area.
            </param>
            <param name="areaName">
            	The name to give the new area; or, an empty string to generate a default name for the new area.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.Simple.AreaOfInterest"/> representing the newly created database area.
            </returns>
            <scxpermission name="Configure" on="Root Group">
            	Area of Interest operations require the appropriate permission on the database's root group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Connection</b> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="areaName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	<paramref name="areaId"/> is not a valid area ID.<br/>-or-<br/>
            	<paramref name="parentId"/> is not a valid area ID.<br/>-or-<br/>
            	<paramref name="areaId"/> specifies the database's root area.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="areaName"/> is too long.<br/>-or-<br/>
            	<paramref name="areaName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="areaName"/> clashes with the name of an existing object in <paramref name="parentId"/>.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating a copy of <paramref name="areaId"/> named <paramref name="areaName"/> in <paramref name="parentId"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating a copy of <paramref name="areaId"/> in <paramref name="parentId"/> would exceed the database's maximum area depth.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.Connection.MoveArea(ClearScada.Client.AreaOfInterestId,ClearScada.Client.AreaOfInterestId)">MoveArea</seealso>
        </member>
        <member name="E:ClearScada.Client.Simple.Connection.ObjectUpdated">
            <summary>
            	Occurs when a database object is created, modified or deleted.
            </summary>
            <remarks>
            	This event is only raised if <see cref="M:ClearScada.Client.Simple.Connection.RegisterForObjectUpdates(System.String[])">RegisterForObjectUpdates</see> has been called.
            </remarks>
            <seealso cref="M:ClearScada.Client.Simple.Connection.RegisterForObjectUpdates(System.String[])">RegisterForObjectUpdates</seealso>
            <seealso cref="M:ClearScada.Client.Simple.Connection.UnregisterObjectUpdates">UnregisterObjectUpdates</seealso>
        </member>
        <member name="P:ClearScada.Client.Simple.Connection.ClientName">
            <summary>
            	Gets the name of the client application.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the client application, used to identify this <b>Connection</b> when connected to a server.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.Connection.IsConnected">
            <summary>
            	Gets a value indicating whether the <b>Connection</b> is currently connected to a server.
            </summary>
            <value>
            	<see langword="true"/> if the <b>Connection</b> is currently connected to a server; otherwise, <see langword="false"/>.
            </value>
            <seealso cref="M:ClearScada.Client.Simple.Connection.Connect(ClearScada.Client.ServerNode)">Connect</seealso>
            <seealso cref="M:ClearScada.Client.Simple.Connection.Disconnect">Disconnect</seealso>
        </member>
        <member name="P:ClearScada.Client.Simple.Connection.Server">
            <summary>
            	Gets the advanced interface used by the <b>Connection</b>.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.Advanced.IServer"/> interface used by the <b>Connection</b>, if connected; otherwise, <see langword="null"/>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.Connection.IsLoggedOn">
            <summary>
            	Gets a value indicating whether the <b>Connection</b> is currently logged on as a specific user.
            </summary>
            <value>
            	<see langword="true"/> if the <b>Connection</b> is currently connected and logged on; otherwise, <see langword="false"/>.
            </value>
            <seealso cref="P:ClearScada.Client.Simple.Connection.UserName"/>
            <seealso cref="P:ClearScada.Client.Simple.Connection.UserObjectId"/>
            <seealso cref="M:ClearScada.Client.Simple.Connection.LogOn(System.String,System.String)">LogOn</seealso>
            <seealso cref="M:ClearScada.Client.Simple.Connection.LogOff">LogOff</seealso>
        </member>
        <member name="P:ClearScada.Client.Simple.Connection.UserName">
            <summary>
            	Gets the name of the currently logged on user.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the currently logged on user, if connected and logged on; otherwise, an empty string.
            </value>
            <seealso cref="P:ClearScada.Client.Simple.Connection.IsLoggedOn"/>
            <seealso cref="P:ClearScada.Client.Simple.Connection.UserObjectId"/>
            <seealso cref="M:ClearScada.Client.Simple.Connection.LogOn(System.String,System.String)">LogOn</seealso>
            <seealso cref="M:ClearScada.Client.Simple.Connection.LogOff">LogOff</seealso>
        </member>
        <member name="P:ClearScada.Client.Simple.Connection.UserObjectId">
            <summary>
            	Gets the object ID of the currently logged on user.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.ObjectId"/> containing the ID of the currently logged on user, if connected and logged on; otherwise, <see cref="F:ClearScada.Client.ObjectId.Null"/>.
            </value>
            <seealso cref="P:ClearScada.Client.Simple.Connection.IsLoggedOn"/>
            <seealso cref="P:ClearScada.Client.Simple.Connection.UserName"/>
            <seealso cref="M:ClearScada.Client.Simple.Connection.LogOn(System.String,System.String)">LogOn</seealso>
            <seealso cref="M:ClearScada.Client.Simple.Connection.LogOff">LogOff</seealso>
        </member>
        <member name="T:ClearScada.Client.Simple.Aggregate">
            <summary>
            	Represents a database aggregate.
            </summary>
            <remarks>
            	An <b>Aggregate</b> maintains a reference to its <see cref="T:ClearScada.Client.Simple.Connection"/> object.
            	If the <b>Connection</b> is disconnected, then operations on the <b>Aggregate</b> that require a server request will throw an <see cref="T:System.InvalidOperationException"/>.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.Simple.Aggregate.GetProperty(System.String)">
            <summary>
            	Gets the value of a property of the aggregate.
            </summary>
            <param name="propertyName">
            	The name of the property to get.
            </param>
            <returns>
            	The value of the property.
            </returns>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types. If a property's <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see>
            		is <see cref="T:System.Object"/>, <see cref="T:System.String"/> or <see cref="T:System.Nullable`1">Nullable</see>, then the value of the property can <see langword="null"/> to indicate
            		the property does not have a value e.g. the CurrentValue of an analog point that has never been updated.
            	</para>
            	<para>
            		To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            	</para>
            	<para>
            		To get the value of a property of one of the aggregate's alarm conditions, prefix the name of the property with the name of the alarm condition, concatenated with a period
            		e.g. <c>bool accepted = (bool) aggr.GetValue( "CallbackFail.Accepted" );</c>. Alternatively, acccess the alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.Aggregate.AlarmConditions"/> property.
            	</para>
            </remarks>
            <scxpermission name="Read" on="Parent Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Aggregate</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AggregateException">
            	The aggregate is not enabled.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the aggregate.<br/>-or-<br/>
            	<paramref name="propertyName"/> specifies a property that is not readable.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Aggregate.SetProperty(System.String,System.Object)">
            <summary>
            	Sets the value of a property of the aggregate.
            </summary>
            <param name="propertyName">
            	The name of the property to set.
            </param>
            <param name="value">
            	The value of the property.
            </param>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types.
            	</para>
            	<para>
            	To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            	Setting the value of a property to an instance of a different supported type will attempt to convert the value.
            	Setting the value of a property to an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            	<para>
            	To set the value of a property of one of the aggregate's alarm conditions, prefix the name of the property with the name of the alarm condition, concatenated with a period
            	e.g. <c>aggr.SetValue( "CallbackFail.Accepted", true );</c>. Alternatively, acccess the alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.Aggregate.AlarmConditions"/> property.
            	</para>
            </remarks>
            <scxpermission name="Configure" on="Parent Object">
            	Needed to set the value of a configuration property.
            </scxpermission>
            <scxpermission name="Security" on="Parent Object">
            	Needed (in addition to <b>Configure</b>) to set the value of a configuration property if the object is a user or user group.
            </scxpermission>
            <scxpermission name="Control" on="Parent Object">
            	Needed to set the value of most data properties. Use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.WritePermissions">WritePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Aggregate</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="value"/> is an unsupported type.
            </exception>
            <exception cref="T:ClearScada.Client.AggregateException">
            	The aggregate is not enabled.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> has been deleted from the database.<br/>-or-<br/>
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> does not specify a valid object ID or name.<br/>-or-<br/>
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> specifies a valid object, but the object is of the wrong type for the property.<br/>-or-<br/>
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> specifies a valid object, but the object is in a template, and the aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> is not in the same template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.AreaOfInterestId"/>, and <paramref name="value"/> does not specify a valid Area of Interest ID or name.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the aggregate.<br/>-or-<br/>
            	<paramref name="propertyName"/> specifies a property that is not writable.<br/>-or-<br/>
            	<paramref name="value"/> could not be converted to the appropriate type for <paramref name="propertyName"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> is in an instance, and <paramref name="propertyName"/> is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Aggregate.InvokeMethod(System.String,System.Object[])">
            <summary>
            	Invokes a method on the aggregate.
            </summary>
            <param name="methodName">
            	The name of the method to invoke.
            </param>
            <param name="arguments">
            	The arguments to pass to the method; or, <see langword="null"/> if the method does not have parameters.
            </param>
            <returns>
            	The return value of the method; or, <see langword="null"/> if the method does not have a return value.
            </returns>
            <remarks>
            	A method's return type or parameters can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            	</list>
            	<para>
            		The return type or parameters can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types.
            	</para>
            	<para>
            		To determine the return type of a method, use the <see cref="P:ClearScada.Client.Simple.MethodDefinition.ReturnType">ReturnType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodDefinition"/>.
            		To determine the type of a parameter, use the <see cref="P:ClearScada.Client.Simple.MethodParameterDefinition.ParameterType">ParameterType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodParameterDefinition"/>.
            		Passing an argument as an instance of a different supported type will attempt to convert the value.
            		Passing an argument as an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            	<para>
            	To invoke a method one of the aggregate's alarm conditions, prefix the name of the method with the name of the alarm condition, concatenated with a period
            	e.g. <c>aggr.InvokeMethod( "CallbackFailed.Accpet", null );</c>. Alternatively, acccess the alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.Aggregate.AlarmConditions"/> property.
            	</para>
            </remarks>
            <scxpermission name="Various" on="Parent Object">
            	The permissions required to invoke a method vary for each method. Use the <see cref="P:ClearScada.Client.Simple.MethodDefinition.InvokePermissions">InvokePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Aggregate</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="methodName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	An element of <paramref name="arguments"/> is an unsupported type.
            </exception>
            <exception cref="T:ClearScada.Client.AggregateException">
            	The aggregate is not enabled.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.MethodException">
            	<paramref name="methodName"/> does not specify the name of a method of the aggregate.<br/>-or-<br/>
            	<paramref name="arguments"/> does not contain the correct number of arguments.<br/>-or-<br/>
            	The method was invoked but the call failed. TODO: At some point we need to go through all method implementations and modify them to fill out an exception rather than return a HRESULT. Unfortunately there are currently nearly 750 methods in SCX.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.Aggregate.IsPropertyWritable(System.String)">
            <summary>
            	Determines whether the caller can set the value of a property of the aggregate
            </summary>
            <param name="propertyName">
            	The name of the property.
            </param>
            <returns>
            	<see langword="true"/> if the caller can write to the specified property; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            	This method checks the following conditions:<br/>
            	<list type="bullet">
            		<item>The property is writable.</item>
            		<item>The caller has the necessary permissions to write to the property.</item>
            		<item>If the aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> is in an instance, the property is not controlled by the instance's template.</item>
            	</list>
            	<para>
            		To determine if a property of one of the aggregate's alarm conditions is writable, prefix the name of the property with the name of the alarm condition, concatenated with a period
            		e.g. <c>bool writable = aggr.IsPropertyWritable( "CallbackFail.Accepted" );</c>. Alternatively, acccess the alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.Aggregate.AlarmConditions"/> property.
            	</para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Aggregate</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AggregateException">
            	The aggregate is not enabled.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the aggregate.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.Aggregate.ParentObject">
            <summary>
            	Gets the parent database object of the aggregate.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the parent database object of the aggregate.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.Aggregate.Name">
            <summary>
            	Gets the name of the aggregate.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the aggregate.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.Aggregate.AggregateDefinition">
            <summary>
            	Gets the aggregate's definition
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Simple.AggregateDefinition"/> representing the aggregate's definition.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.Aggregate.Enabled">
            <summary>
            	Gets and sets a value indicating whether the aggegate is enabled.
            </summary>
            <value>
            	<see langword="true"/> if the aggregate is enabled; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            	If the aggregate is not an optional aggregate, <b>Enabled</b> will always be <see langword="true"/>.
            	It is not possible to enable a optional multi-choice aggregate using the <b>Enabled</b> property; instead, use the <see cref="P:ClearScada.Client.Simple.Aggregate.ClassName"/> property.
            	However, it is possible to disable an optional multi-choice aggregate using the <b>Enabled</b> property.
            </remarks>
            <scxpermission name="Configure" on="Parent Object">
            	Needed to enable or disable an aggregate.
            </scxpermission>
            <scxpermission name="Security" on="Parent Object">
            	Needed (in addition to <b>Configure</b>) to enable or disable an aggregate on a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	When setting the property, the <b>Aggregate</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	When setting the property, the aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AggregateException">
            	When setting the property, <paramref name="value"/> is <see langword="true"/> and the aggregate is a multi-choice aggregate.<br/>-or-<br/>
            	When setting the property, <paramref name="value"/> is <see langword="false"/> and the aggregate is not an optional aggregate.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	When setting the property, the caller does not have the necessary permissions.<br/>-or-<br/>
            	When setting the property, the aggregate's parent object is in an instance, and the aggregate is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	When setting the property, an error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.Aggregate.ClassName">
            <summary>
            	Gets and sets which class of a multi-choice aggregate is enabled.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the current class of the aggregate; or, an empty string if the aggregate is disabled.
            </value>
            <remarks>
            	To get the list of possible classes for an aggregate, use the <see cref="P:ClearScada.Client.Simple.AggregateDefinition.AggregateClasses">Classes</see> property of the aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.AggregateDefinition"/>.
            </remarks>
            <scxpermission name="Configure" on="Parent Object">
            	Needed to change the class of an aggregate.
            </scxpermission>
            <scxpermission name="Security" on="Parent Object">
            	Needed (in addition to <b>Configure</b>) to change the class of an aggregate on a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	When setting the property, the <b>Aggregate</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	When setting the property, <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	When setting the property, the aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AggregateException">
            	When setting the property, the <paramref name="value"/> is not the name of a valid class for the aggregate.<br/>-or-<br/>
            	When setting the property, <paramref name="value"/> is an empty string and the aggregate is not an optional aggregate.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	When setting the property, the caller does not have the necessary permissions.<br/>-or-<br/>
            	When setting the property, the aggregate's parent object is in an instance, and the aggregate is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	When setting the property, an error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.Aggregate.AlarmConditions">
            <summary>
            	Gets the alarm conditions of the aggregate.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Simple.AlarmConditionDictionary"/> with an entry for each of the aggregate's alarm conditions; or, an empty <b>AlarmConditionDictionary</b> if the aggregate has no alarm conditions.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.Aggregate.Item(System.String)">
            <summary>
            	Gets or sets the value of a property of the aggregate.
            </summary>
            <param name="propertyName">
            	The name of the property to get or set.
            </param>
            <value>
            	The value of the property.
            </value>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types. If a property's <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see>
            		is <see cref="T:System.Object"/>, <see cref="T:System.String"/> or <see cref="T:System.Nullable`1">Nullable</see>, then the value of the property can <see langword="null"/> to indicate
            		the property does not have a value e.g. the CurrentValue of an analog point that has never been updated.
            	</para>
            	<para>
            		To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            		Setting the value of a property to an instance of a different supported type will attempt to convert the value.
            		Setting the value of a property to an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            	<para>
            		To get or set the value of a property of one of the aggregate's alarm conditions, prefix the name of the property with the name of the alarm condition, concatenated with a period
            		e.g. <c>aggr["CallbackFail.Accepted"] = true;</c>. Alternatively, acccess the alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.Aggregate.AlarmConditions"/> property.
            	</para>
            </remarks>
            <scxpermission name="Read" on="Parent Object">
            	Needed to get the value of a property.
            </scxpermission>
            <scxpermission name="Configure" on="Parent Object">
            	Needed to set the value of a configuration property.
            </scxpermission>
            <scxpermission name="Security" on="Parent Object">
            	Needed (in addition to <b>Configure</b>) to set the value of a configuration property if the object is a user or user group.
            </scxpermission>
            <scxpermission name="Control" on="Parent Object">
            	Needed to set the value of most data properties. Use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.WritePermissions">WritePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>Aggregate</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	When setting the property, <paramref name="value"/> is an unsupported type.
            </exception>
            <exception cref="T:ClearScada.Client.AggregateException">
            	The aggregate is not enabled.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> has been deleted from the database.<br/>-or-<br/>
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> does not specify a valid object ID or name.<br/>-or-<br/>
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> specifies a valid object, but the object is of the wrong type for the property.<br/>-or-<br/>
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> specifies a valid object, but the object is in a template, and the aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> is not in the same template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	When setting a property of type <see cref="T:ClearScada.Client.AreaOfInterestId"/>, <paramref name="value"/> does not specify a valid Area of Interest ID or name.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the aggregate.<br/>-or-<br/>
            	When setting the property, <paramref name="propertyName"/> specifies a property that is not writable.<br/>-or-<br/>
            	When setting the property, <paramref name="value"/> could not be converted to the appropriate type for <paramref name="propertyName"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	When setting the property, the aggregate's <see cref="P:ClearScada.Client.Simple.Aggregate.ParentObject"/> is in an instance, and <paramref name="propertyName"/> is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="T:ClearScada.Client.Simple.AlarmCondition">
            <summary>
            Represents a database alarm condition.
            </summary>
            <remarks>
            	An <b>AlarmCondition</b> maintains a reference to its <see cref="T:ClearScada.Client.Simple.Connection"/> object.
            	If the <b>Connection</b> is disconnected, then operations on the <b>AlarmCondition</b> that require a server request will throw an <see cref="T:System.InvalidOperationException"/>.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.Simple.AlarmCondition.GetProperty(System.String)">
            <summary>
            	Gets the value of a property of the alarm condition.
            </summary>
            <param name="propertyName">
            	The name of the property to get.
            </param>
            <returns>
            	The value of the property.
            </returns>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types. If a property's <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see>
            		is <see cref="T:System.Object"/>, <see cref="T:System.String"/> or <see cref="T:System.Nullable`1">Nullable</see>, then the value of the property can <see langword="null"/> to indicate
            		the property does not have a value e.g. the CurrentValue of an analog point that has never been updated.
            	</para>
            	<para>
            		To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            	</para>
            </remarks>
            <scxpermission name="Read" on="Parent Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AlarmCondition</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The alarm conditions's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the alarm condition.
            	<paramref name="propertyName"/> specifies a property that is not readable.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AlarmCondition.SetProperty(System.String,System.Object)">
            <summary>
            	Sets the value of a property of the alarm condition.
            </summary>
            <param name="propertyName">
            	The name of the property to set.
            </param>
            <param name="value">
            	The value of the property.
            </param>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types.
            	</para>
            	<para>
            		To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            		Setting the value of a property to an instance of a different supported type will attempt to convert the value.
            		Setting the value of a property to an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            </remarks>
            <scxpermission name="Configure" on="Parent Object">
            	Needed to set the value of a configuration property.
            </scxpermission>
            <scxpermission name="Security" on="Parent Object">
            	Needed (in addition to <b>Configure</b>) to set the value of a configuration property if the object is a user or user group.
            </scxpermission>
            <scxpermission name="Control" on="Parent Object">
            	Needed to set the value of most data properties. Use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.WritePermissions">WritePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AlarmCondition</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="value"/> is an unsupported type.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The alarm condition's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> has been deleted from the database.
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> does not specify a valid object ID or name.<br/>-or-<br/>
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> specifies a valid object, but the object is of the wrong type for the property.<br/>-or-<br/>
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> specifies a valid object, but the object is in a template, and the alarm condition's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> is not in the same template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.AreaOfInterestId"/>, and <paramref name="value"/> does not specify a valid Area of Interest ID or name.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the alarm condition.<br/>-or-<br/>
            	<paramref name="propertyName"/> specifies a property that is not writable.<br/>-or-<br/>
            	<paramref name="value"/> could not be converted to the appropriate type for <paramref name="propertyName"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The alarm condition's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> is in an instance, and <paramref name="propertyName"/> is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AlarmCondition.InvokeMethod(System.String,System.Object[])">
            <summary>
            	Invokes a method on the alarm condition.
            </summary>
            <param name="methodName">
            	The name of the method to invoke.
            </param>
            <param name="arguments">
            	The arguments to pass to the method; or, <see langword="null"/> if the method does not have parameters.
            </param>
            <returns>
            	The return value of the method; or, <see langword="null"/> if the method does not have a return value.
            </returns>
            <remarks>
            	A method's return type or parameters can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            	</list>
            	<para>
            	The return type or parameters can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types.
            	</para>
            	<para>
            	To determine the return type of a method, use the <see cref="P:ClearScada.Client.Simple.MethodDefinition.ReturnType">ReturnType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodDefinition"/>.
            	To determine the type of a parameter, use the <see cref="P:ClearScada.Client.Simple.MethodParameterDefinition.ParameterType">ParameterType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodParameterDefinition"/>.
            	Passing an argument as an instance of a different supported type will attempt to convert the value.
            	Passing an argument as an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            </remarks>
            <scxpermission name="Various" on="Parent Object">
            	The permissions required to invoke a method vary for each method. Use the <see cref="P:ClearScada.Client.Simple.MethodDefinition.InvokePermissions">InvokePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AlarmCondition</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="methodName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	An element of <paramref name="arguments"/> is an unsupported type.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The alarm condition's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.MethodException">
            	<paramref name="methodName"/> does not specify the name of a method of the alarm condition.<br/>-or-<br/>
            	<paramref name="arguments"/> does not contain the correct number of arguments.<br/>-or-<br/>
            	The method was invoked but the call failed. TODO: At some point we need to go through all method implementations and modify them to fill out an exception rather than return a HRESULT. Unfortunately there are currently nearly 750 methods in SCX.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.AlarmCondition.IsPropertyWritable(System.String)">
            <summary>
            	Determines whether the caller can set the value of a property of the alarm condition
            </summary>
            <param name="propertyName">
            	The name of the property.
            </param>
            <returns>
            	<see langword="true"/> if the caller can write to the specified property; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            	This method checks the following conditions:<br/>
            	<list type="bullet">
            		<item>The property is not read-only.</item>
            		<item>The caller has the necessary permissions to write to the property.</item>
            		<item>If the alarm condition's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> is in an instance, the property is not controlled by the instance's template.</item>
            	</list>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AlarmCondition</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The alarm condition's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the alarm condition.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmCondition.ParentObject">
            <summary>
            	Gets the parent database object of the alarm condition.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the parent database object of the alarm condition.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmCondition.ParentAggregate">
            <summary>
            	Gets the parent aggregate of the alarm condition.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.Aggregate"/> representing the parent aggregate of the alarm condition; or, <see langword="null"/> if the alarm condition does not belong to an aggregate.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmCondition.Name">
            <summary>
            	Gets the name of the alarm condition.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the alarm condition.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmCondition.AlarmConditionDefinition">
            <summary>
            	Gets the alarm condition's definition
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Simple.AlarmConditionDefinition"/> representing the alarm condition's definition.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmCondition.Item(System.String)">
            <summary>
            	Gets or sets the value of a property of the alarm condition.
            </summary>
            <param name="propertyName">
            	The name of the property to get or set.
            	</param>
            <value>
            	The value of the property.
            </value>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types. If a property's <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see>
            		is <see cref="T:System.Object"/>, <see cref="T:System.String"/> or <see cref="T:System.Nullable`1">Nullable</see>, then the value of the property can <see langword="null"/> to indicate
            		the property does not have a value e.g. the CurrentValue of an analog point that has never been updated.
            	</para>
            	<para>
            		To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            		Setting the value of a property to an instance of a different supported type will attempt to convert the value.
            		Setting the value of a property to an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            </remarks>
            <scxpermission name="Read" on="Parent Object">
            	Needed to get the value of a property.
            </scxpermission>
            <scxpermission name="Configure" on="Parent Object">
            	Needed to set the value of a configuration property.
            </scxpermission>
            <scxpermission name="Security" on="Parent Object">
            	Needed (in addition to <b>Configure</b>) to set the value of a configuration property if the object is a user or user group.
            </scxpermission>
            <scxpermission name="Control" on="Parent Object">
            	Needed to set the value of most data properties. Use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.WritePermissions">WritePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>AlarmCondition</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	When setting the property, <paramref name="value"/> is an unsupported type.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The alarm condition's object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the alarm condition.<br/>-or-<br/>
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> does not specify a valid object ID or name.<br/>-or-<br/>
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> specifies a valid object, but the object is of the wrong type for the property.<br/>-or-<br/>
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> specifies a valid object, but the object is in a template, and the alarm condition's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> is not in the same template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	When setting a property of type <see cref="T:ClearScada.Client.AreaOfInterestId"/>, <paramref name="value"/> does not specify a valid Area of Interest ID or name.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the alarm condition.<br/>-or-<br/>
            	When setting the property, <paramref name="propertyName"/> specifies a property that is not writable.<br/>-or-<br/>
            	When setting the property, <paramref name="value"/> could not be converted to the appropriate type for <paramref name="propertyName"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	When setting the property, the alarm conditions's <see cref="P:ClearScada.Client.Simple.AlarmCondition.ParentObject"/> is in an instance, and <paramref name="propertyName"/> is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="T:ClearScada.Client.Simple.DBObject">
            <summary>
            	Represents a database object.
            </summary>
            <remarks>
            	A <b>DBObject</b> maintains a reference to its <see cref="T:ClearScada.Client.Simple.Connection"/> object.
            	If the <b>Connection</b> is disconnected, then operations on the <b>DBObject</b> that require a server request will throw an <see cref="T:System.InvalidOperationException"/>.
            </remarks>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.Refresh">
            <summary>
            	Refreshes the <b>DBObject</b> with the latest details from the server.
            </summary>
            <scxpermission name="Read" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <see cref="T:ClearScada.Client.Simple.Connection"/> used to retrieve this <b>AreaOfInterest</b> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetProperty(System.String)">
            <summary>
            	Gets the value of a property of the object.
            </summary>
            <param name="propertyName">
            	The name of the property to get.
            </param>
            <returns>
            	The value of the property.
            </returns>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types. If a property's <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see>
            		is <see cref="T:System.Object"/>, <see cref="T:System.String"/> or <see cref="T:System.Nullable`1">Nullable</see>, then the value of the property can <see langword="null"/> to indicate
            		the property does not have a value e.g. the CurrentValue of an analog point that has never been updated.
            	</para>
            	<para>
            	To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            	</para>
            	<para>
            	To get the value of a property of one of the object's aggregates or alarm conditions, prefix the name of the property with the name of the aggregate or alarm condition, concatenated with a period
            	e.g. <c>bool compressed = (bool) obj.GetValue( "Historic.Compress" );</c>. Alternatively, acccess the aggregates and alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.DBObject.Aggregates"/> and <see cref="P:ClearScada.Client.Simple.DBObject.AlarmConditions"/> properties.
            	</para>
            </remarks>
            <scxpermission name="Read" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the object.<br/>-or-<br/>
            	<paramref name="propertyName"/> specifies a property that is not readable.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.SetProperty(System.String,System.Object)">
            <summary>
            	Sets the value of a property of the object.
            </summary>
            <param name="propertyName">
            	The name of the property to set.
            </param>
            <param name="value">
            	The value of the property.
            </param>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types.
            	</para>
            	<para>
            	To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            	Setting the value of a property to an instance of a different supported type will attempt to convert the value.
            	Setting the value of a property to an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            	<para>
            	To set the value of a property of one of the object's aggregates or alarm conditions, prefix the name of the property with the name of the aggregate or alarm condition, concatenated with a period
            	e.g. <c>obj.SetValue( "Historic.Compress", true );</c>. Alternatively, acccess the aggregates and alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.DBObject.Aggregates"/> and <see cref="P:ClearScada.Client.Simple.DBObject.AlarmConditions"/> properties.
            	</para>
            </remarks>
            <scxpermission name="Configure" on="Object">
            	Needed to set the value of a configuration property.
            </scxpermission>
            <scxpermission name="Security" on="Object">
            	Needed (in addition to <b>Configure</b>) to set the value of a configuration property, if the object is a user or user group.
            </scxpermission>
            <scxpermission name="Control" on="Object">
            	Needed to set the value of most data properties. Use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.WritePermissions">WritePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="value"/> is an unsupported type.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> does not specify a valid object ID or name.<br/>-or-<br/>
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> specifies a valid object, but the object is of the wrong type for the property.<br/>-or-<br/>
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.ObjectId"/>, and <paramref name="value"/> specifies a valid object, but the object is in a template, and this object is not in the same template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	<paramref name="propertyName"/> is of type <see cref="T:ClearScada.Client.AreaOfInterestId"/>, and <paramref name="value"/> does not specify a valid Area of Interest ID or name.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the object.<br/>-or-<br/>
            	<paramref name="propertyName"/> specifies a property that is not writable.<br/>-or-<br/>
            	<paramref name="value"/> could not be converted to the appropriate type for <paramref name="propertyName"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The object is in an instance, and <paramref name="propertyName"/> is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.SetProperties(System.String[],System.Object[])">
            <summary>
            	Sets the values of multiple configuration properties of the object in a single transaction.
            </summary>
            <param name="propertyNames">The names of the properties to set. Each element of <b>propertyNames</b> corresponds to the element of <b>values</b> with the same index.</param>
            <param name="values">The values of the properties. Each element of <b>values</b> corresponds to the element of <b>propertyNames</b> with the same index.</param>
            <remarks>
            	When setting large numbers of properties, using <b>SetProperties</b> is more efficient than using <see cref="M:ClearScada.Client.Simple.DBObject.SetProperty(System.String,System.Object)">SetProperty</see> to set each property individually.
            	The object  will only be modified if all the specified properties can be set successfully with the specified values.
            	<b>This method can only be used to set <see cref="F:ClearScada.Client.Simple.PropertyType.Configuration">Configuration</see> properties.</b>
            </remarks>
            <scxpermission name="Configure" on="Object"/>
            <scxpermission name="Security" on="Object">
            	Needed (in addition to <b>Configure</b>) if the object is a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyNames"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="values"/> is <see langword="null"/>.<br/>-or-<br/>
            	An element of <paramref name="propertyNames"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="propertyNames"/> is empty.<br/>-or-<br/>
            	<paramref name="values"/> is not the same length as <paramref name="propertyNames"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            	One of the properties is of type <see cref="T:ClearScada.Client.ObjectId"/>, and the corresponding value does not specify a valid object ID or name.<br/>-or-<br/>
            	One of the properties is of type <see cref="T:ClearScada.Client.ObjectId"/>, and the corresponding value specifies a valid object, but the object is of the wrong type for the property.<br/>-or-<br/>
            	One of the properties is of type <see cref="T:ClearScada.Client.ObjectId"/>, and the corresponding value specifies a valid object, but the object is in a template, and this object is not in the same template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	One of the properties is of type <see cref="T:ClearScada.Client.AreaOfInterestId"/>, and the corresponding value does not specify a valid Area of Interest ID or name.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	One of the elements of <paramref name="propertyNames"/> does not specify the name of a property of the object.<br/>-or-<br/>
            	One of the properties is not a configuration property.<br/>-or-<br/>
            	One of the properties is not writable.<br/>-or-<br/>
            	One of the values could not be converted to the appropriate type for that property.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The object in an instance, and one of the properties is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.InvokeMethod(System.String,System.Object[])">
            <summary>
            	Invokes a method on the object.
            </summary>
            <param name="methodName">
            	The name of the method to invoke.
            </param>
            <param name="arguments">
            	The arguments to pass to the method; or, <see langword="null"/> if the method does not have parameters.
            </param>
            <returns>
            	The return value of the method; or, <see langword="null"/> if the method does not have a return value.
            </returns>
            <remarks>
            	A method's return type or parameters can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            	</list>
            	<para>
            	The return type or parameters can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types.
            	</para>
            	<para>
            	To determine the return type of a method, use the <see cref="P:ClearScada.Client.Simple.MethodDefinition.ReturnType">ReturnType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodDefinition"/>.
            	To determine the type of a parameter, use the <see cref="P:ClearScada.Client.Simple.MethodParameterDefinition.ParameterType">ParameterTypeType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodParameterDefinition"/>.
            	Passing an argument as an instance of a different supported type will attempt to convert the value.
            	Passing an argument as an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            	<para>
            	To invoke a method one of the object's aggregates or alarm conditions, prefix the name of the method with the name of the aggregate or alarm condition,
            	concatenated with a period e.g. <c>obj.InvokeMethod( "Historic.InsertValue", DateTimeOffset.Now, 12.3, 192 );</c>.
            	Alternatively, acccess the aggregates and alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.DBObject.Aggregates"/> and <see cref="P:ClearScada.Client.Simple.DBObject.AlarmConditions"/> properties.
            	</para>
            </remarks>
            <scxpermission name="Various" on="Object">
            	The permissions required to invoke a method vary for each method. Use the <see cref="P:ClearScada.Client.Simple.MethodDefinition.InvokePermissions">InvokePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.MethodDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="methodName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	An element of <paramref name="arguments"/> is an unsupported type.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.MethodException">
            	<paramref name="methodName"/> does not specify the name of a method of the object.<br/>-or-<br/>
            	<paramref name="methodName"/> does not contain the correct number of arguments.<br/>-or-<br/>
            	The method was invoked but the call failed. TODO: At some point we need to go through all method implementations and modify them to fill out an exception rather than return a HRESULT. Unfortunately there are currently nearly 750 methods in SCX.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.IsPropertyWritable(System.String)">
            <summary>
            	Determines whether the caller can set the value of a property of the object
            </summary>
            <param name="propertyName">
            	The name of the property.
            </param>
            <returns>
            	<see langword="true"/> if the caller can write to the specified property; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            	This method checks the following conditions:<br/>
            	<list type="bullet">
            		<item>The property is not read-only.</item>
            		<item>The caller has the necessary permissions to write to the property.</item>
            		<item>If the object is in an instance, the property is not controlled by the instance's template.</item>
            	</list>
            	<para>
            	To determine if a property of one of the object's aggregates or alarm conditions is writable, prefix the name of the property with the name of the aggregate or alarm condition,
            	concatenated with a period e.g. <c>bool writable = obj.IsPropertyWritable( "Historic.Compress" );</c>.
            	Alternatively, acccess the aggregates and alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.DBObject.Aggregates"/> and <see cref="P:ClearScada.Client.Simple.DBObject.AlarmConditions"/> properties.
            	</para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the object.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.CheckPermissions(ClearScada.Client.ObjectPermissions)">
            <summary>
            	Determines whether the caller has the specified permissions on the object.
            </summary>
            <param name="permissions">
            	The permissions to check for.
            </param>
            <returns>
            	<see langword="true"/> if the caller has the specified permissions; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetChild(System.String)">
            <summary>
            	Gets the child of the object with the specified name.
            </summary>
            <param name="objectName">
            	The name of the child object to look up.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the child object with the specified name, if found; otherwise, <see langword="null"/>.
            </returns>
            <scxpermission name="Read" on="Child Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="objectName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetChildren(System.String,System.String)">
            <summary>
            	Gets the children of the object that match the specified criteria.
            </summary>
            <param name="className">
            	The class of objects to return; or, an empty string to return all children regardless of class.
            </param>
            <param name="objectNamePattern">
            	The pattern on which to match object names; or, an empty string to return all children regardless of name.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObjectCollection"/> with an entry for child of the object that is of (or derived from) the specified class, and whose name matches the specified pattern; or, an an empty <b>DBObjectCollection</b> if the object has no such children.
            </returns>
            <remarks>
            	The syntax used for <paramref name="objectNamePattern"/> is OPC filter syntax. See OPC AE 1.1 Appendix A for details.
            </remarks>
            <scxpermission name="Browse" on="Object"/>
            <scxpermission name="Browse" on="Children">
            	Children for which the caller does not have <b>Browse</b> permission will not be returned.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="className"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="objectNamePattern"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="className"/> is not a valid database class.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not a group.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetDescendants(System.String,System.String)">
            <summary>
            	Gets the descendants of the object that match the specified criteria.
            </summary>
            <param name="className">
            	The class of objects to return; or, an empty string to return all descendants regardless of class.
            </param>
            <param name="objectNamePattern">
            	The pattern on which to match object names; or, an empty string to return all descendants regardless of name.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObjectCollection"/> with an entry for descendant of the object that is of (or derived from) the specified class, and whose name matches the specified pattern; or, an an empty <b>DBObjectCollection</b> if the object has no such descendants.
            </returns>
            <remarks>
            	The syntax used for <paramref name="objectNamePattern"/> is OPC filter syntax. See OPC AE 1.1 Appendix A for details.
            </remarks>
            <scxpermission name="Browse" on="Object"/>
            <scxpermission name="Browse" on="Descendants">
            	Descendants for which the caller does not have <b>Browse</b> permission will not be returned.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="className"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="objectNamePattern"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="className"/> is not a valid database class.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not a group.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.CreateObject(System.String,System.String)">
            <summary>
            	Creates a new object in the database as a child of this object.
            </summary>
            <param name="className">
            	The class of object to create.
            </param>
            <param name="objectName">
            	The name to give the new object; or, an empty string to generate a default name for the new object.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the newly created database object.
            </returns>
            <scxpermission name="Configure" on="Object"/>
            <scxpermission name="Security" on="Object">
            	Needed (in addition to <b>Configure</b>) if new object is a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="className"/> is <see langword="null"/>.<br/>-or-<br/>
            	<paramref name="objectName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="className"/> is not a valid database class.<br/>-or-<br/>
            	<paramref name="className"/> specifies a class that is not creatable,<br/>-or-<br/>
            	<paramref name="className"/> specifies a class that is not allowed in the object.<br/>-or-<br/>
            	The object is is currently controlled by a configuration permit, and <paramref name="className"/> specifies a class that can't be created in a permit.<br/>-or-<br/>
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not a group.
            	The object is an empty instance (one without a template configured).<br/>-or-<br/>
            	The object is a template that is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="objectName"/> is too long.<br/>-or-<br/>
            	<paramref name="objectName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="objectName"/> clashes with the name of an existing object in this group.<br/>-or-<br/>
            	The object is a template, and <paramref name="objectName"/> clashes with the name of an existing object in an instance of that template.<br/>-or-<br/>
            	<paramref name="className"/> is <c>CDBUser</c>, and <paramref name="objectName"/> clashes with the name of an existing user or built-in user.<br/>-or-<br/>
            	<paramref name="className"/> is <c>CDBUser</c>, and <paramref name="objectName"/> only contains numeric digits.<br/>-or-<br/>
            	<paramref name="className"/> is <c>CDBUser</c>, and <paramref name="objectName"/> is shorter than the minimum username length.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating an object named <paramref name="objectName"/> in this object would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating a new object of class <paramref name="className"/> in this object would exceed the database's maximum object depth.<br/>-or-<br/>
            	Creating a new object of class <paramref name="className"/> would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.DBObject.CreateInstance(ClearScada.Client.Simple.DBObject,System.String)">CreateInstance</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.CreateInstance(ClearScada.Client.Simple.DBObject,System.String)">
            <summary>
            	Creates a new instance of a specified template as a child of this object.
            </summary>
            <param name="template">
            	The template to create an instance of.
            </param>
            <param name="instanceName">
            	The name to give the new instance; or, an empty string to generate a default name for the new instance.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the newly created instance.
            </returns>
            <scxpermission name="Configure" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="instanceName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	<paramref name="template"/> is has been deleted from the database.<br/>-or-<br/>
            	<paramref name="template"/> is not a template.<br/>-or-<br/>
            	The object is not a group.<br/>-or-<br/>
            	The object is an empty instance (one without a template configured).<br/>-or-<br/>
            	The object is the same as <paramref name="template"/>, or a group that is a child of <paramref name="template"/>.<br/>-or-<br/>
            	The object is another instance of <paramref name="template"/>, or a group that is a child of an instance of <paramref name="template"/>.<br/>-or-<br/>
            	The object is a template that is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="instanceName"/> is too long.<br/>-or-<br/>
            	<paramref name="instanceName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="instanceName"/> clashes with the name of an existing object in this group.<br/>-or-<br/>
            	The object is a template, and <paramref name="instanceName"/> clashes with the name of an existing object in an instance of that template.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating an object named <paramref name="instanceName"/> in this object would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating an object in this object would exceed the database's maximum object depth.<br/>-or-<br/>
            	Creating the objects of <paramref name="template"/> in the new instance would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating the objects of <paramref name="template"/> in the new instance would exceed the database's maximum object depth.<br/>-or-<br/>
            	Creating the objects of <paramref name="template"/> in the new instance would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.DBObject.CreateObject(System.String,System.String)">CreateObject</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.Delete(System.Boolean)">
            <summary>
            	Deletes the object from the database.
            </summary>
            <param name="forceDeletion">
            	<see langword="true"/> to delete the object even if there are references to it; or, <see langword="false"/> to only delete the object if it is not referenced.
            </param>
            <remarks>
            	If there are references from other database objects to the object, or to children of the object, then it will only be deleted if <paramref name="forceDeletion"/> is <see langword="true"/>.
            	In this case, all references to the object(s) will be cleared. When deleting a group, references from one object in the group to another object in the group do not prevent deletion.
            </remarks>
            <scxpermission name="Configure" on="Object">
            	If the object is a group, then also needed on all children.
            </scxpermission>
            <scxpermission name="Security" on="Object">
            	Needed (in addition to <b>Configuration</b>) if the object is a user or user group. If the object is a group, then needed on any children that are users or user groups.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is the database's root group.<br/>-or-<br/>
            	The object is a user, or a group containing a user, that is currently logged on.<br/>-or-<br/>
            	The object is a user, or a group containing a user, that has an active configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.ObjectReferenceException">
            	The object, or its children, are referenced by other objects, and <paramref name="forceDeletion"/> is <see langword="false"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The object is in an instance, and is controlled by the instance's template.<br/>-or-<br/>
            	The object is in a template, and the corresponding object in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.Rename(System.String)">
            <summary>
            	Changes the name of the object.
            </summary>
            <param name="objectName">
            	The new name to give the object.
            </param>
            <scxpermission name="Configure" on="Object"/>
            <scxpermission name="Security" on="Object">
            	Needed (in addition to <b>Configuration</b>) if the object is a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="objectName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="objectName"/> is an empty string.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is the database's root group.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="objectName"/> is too long.<br/>-or-<br/>
            	<paramref name="objectName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="objectName"/> clashes with the name of an existing object in the objects's parent group.<br/>-or-<br/>
            	The object is in a template, and <paramref name="objectName"/> clashes with the name of an existing object in an instance of that template.<br/>-or-<br/>
            	The object is a user, and <paramref name="objectName"/> clashes with the name of an existing user or built-in user.<br/>-or-<br/>
            	The object is a user, and <paramref name="objectName"/> only contains numeric digits.<br/>-or-<br/>
            	The object is a user, and <paramref name="objectName"/> is shorter than the minimum username length.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Renaming the object to <paramref name="objectName"/> would exceed the database's maximum full name length.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The object is in an instance, and is controlled by the instance's template.<br/>-or-<br/>
            	The object is in a template, and the corresponding object in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.MoveTo(ClearScada.Client.Simple.DBObject)">
            <summary>
            	Moves the object to a new location.
            </summary>
            <param name="parent">
            	The group to move the object to.
            </param>
            <scxpermission name="Configure" on="Object">
            	If the object is a group, then also needed on all children.
            </scxpermission>
            <scxpermission name="Security" on="Object">
            	Needed (in addition to <b>Configure</b>) if the object is a user or user group. If the object is a group, then also needed on any children that are users or user groups.
            </scxpermission>
            <scxpermission name="Configure" on="Old Parent"/>
            <scxpermission name="Configure" on="New Parent"/>
            <scxpermission name="Security" on="New Parent">
            	Needed if the object is a user or user group, or a group containing a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	<paramref name="parent"/> has been deleted from the database.<br/>-or-<br/>
            	<paramref name="parent"/> is not a group.<br/>-or-<br/>
            	The object is the database's root group.<br/>-or-<br/>
            	<paramref name="parent"/> is the same as the object.<br/>-or-<br/>
            	The object is a group, and <paramref name="parent"/> is a child of that group.<br/>-or-<br/>
            	The object is of a class that is not allowed in <paramref name="parent"/>.<br/>-or-<br/>
            	The object is a group that contains an object of a class that is not allowed in <paramref name="parent"/>.<br/>-or-<br/>
            	<paramref name="parent"/> is an empty instance (one without a template configured).<br/>-or-<br/>
            	The object is an instance, or a group containing an instance, and <paramref name="parent"/> is that instance's template.<br/>-or-<br/>
            	The object is an instance, or a group containing an instance, and <paramref name="parent"/> is another instance of that instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	The name of the object clashes with the name of an existing object in <paramref name="parent"/>.<br/>-or-<br/>
            	<paramref name="parent"/> is a template, and the name of the object clashes with the name of an existing object in an instance of that template.<br/>-or-<br/>
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Moving the object to <paramref name="parent"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Moving the object to <paramref name="parent"/> would exceed the database's maximum object depth.<br/>-or-<br/>
            	Moving the object to <paramref name="parent"/> would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The object is in an instance, and is controlled by the instance's template.<br/>-or-<br/>
            	The object is in a template, and the corresponding object in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.DBObject.CopyTo(ClearScada.Client.Simple.DBObject,System.String)">CopyTo</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.CopyTo(ClearScada.Client.Simple.DBObject,System.String)">
            <summary>
            	Creates a copy of the object in the database.
            </summary>
            <param name="parent">
            	The group in which to create the new object.
            </param>
            <param name="objectName">
            	The name to give the new object; or, an empty string to generate a default name for the new object.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the newly created database object.
            </returns>
            <scxpermission name="Read" on="Object">
            	If the object is a group, then also needed on all children.
            </scxpermission>
            <scxpermission name="Configure" on="New Parent"/>
            <scxpermission name="Security" on="New Parent">
            	Needed (in addition to <b>Configure</b>) if the object is a user or user group, or a group containing a user or user group.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="objectName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	The object is of a class that is not allowed in <paramref name="parent"/>.<br/>-or-<br/>
            	The object is a group that contains an object of a class that is not allowed in <paramref name="parent"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	<paramref name="parent"/> has been deleted from the database.<br/>-or-<br/>
            	<paramref name="parent"/> is not a group.<br/>-or-<br/>
            	The object is the database's root group.<br/>-or-<br/>
            	<paramref name="parent"/> is an empty instance (one without a template configured).
            </exception>
            <exception cref="T:ClearScada.Client.InvalidNameException">
            	<paramref name="objectName"/> is too long.<br/>-or-<br/>
            	<paramref name="objectName"/> contains invalid characters.<br/>-or-<br/>
            	<paramref name="objectName"/> clashes with the name of an existing object in <paramref name="parent"/>.<br/>-or-<br/>
            	<paramref name="parent"/> is a template, and <paramref name="objectName"/> clashes with the name of an existing object in an instance of that template.<br/>-or-<br/>
            	The object is a user, and <paramref name="objectName"/> clashes with the name of an existing user or built-in user.<br/>-or-<br/>
            	The object is a user, and <paramref name="objectName"/> only contains numeric digits.<br/>-or-<br/>
            	The object is a user, and <paramref name="objectName"/> is shorter than the minimum username length.
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Creating a copy of the object named <paramref name="objectName"/> in <paramref name="parent"/> would exceed the database's maximum full name length.<br/>-or-<br/>
            	Creating a copy of the object in <paramref name="parent"/> would exceed the database's maximum object depth.<br/>-or-<br/>
            	Creating a copy of the object in <paramref name="parent"/> would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.DBObject.MoveTo(ClearScada.Client.Simple.DBObject)">MoveTo</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.Convert(System.String)">
            <summary>
            	Converts the object to a different class.
            </summary>
            <param name="className">
            	The name of the class to convert the object to.
            </param>
            <scxpermission name="Configure" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="className"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	<paramref name="className"/> is not a valid database class.<br/>-or-<br/>
            	<paramref name="className"/> specifies a class that is not a valid conversion for the object&gt;.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is the database's root group.<br/>-or-<br/>
            	The specified conversion is from one group type to another, and the group contains objects that are not allowed in the target type.
            </exception>
            <exception cref="T:ClearScada.Client.ObjectReferenceException">
            	The specified conversion is from group to template, but objects in the group are referenced by objects outside the group.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The object is in an instance, and is controlled by the instance's template and is not an abstract object or a converted abstract object.<br/>-or-<br/>
            	The object is in a template, and the corresponding object in one of the instances of the template is currently controlled by a configuration permit.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetPropertyOverrides">
            <summary>
            	Gets the property overrides of the object.
            </summary>
            <returns>
            	A <see cref="T:ClearScada.Client.PropertyOverrideCollection"/> containing an entry for each of the object's property override; or, an empty <see langword="PropertyOverrideCollection"/> if the object has no property overrides.</returns>
            <scxpermission name="Read" on="Parent Template"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not in a template.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.SetPropertyOverrides(ClearScada.Client.PropertyOverrideCollection)">
            <summary>
            	Sets the property overrides of the object.
            </summary>
            <param name="propertyOverrides">
            	The property overrides to set; or, an empty <see langword="PropertyOverrideCollection"/> to remove all property overrides from the object.
            </param>
            <scxpermission name="Configure" on="Parent Template"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyOverrides"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not in a template.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	One of the entries in <paramref name="propertyOverrides"/> does not specify the name of a property of the object.<br/>-or-<br/>
            	One of the properties in <paramref name="propertyOverrides"/> is not a configuration property.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetSecurity">
            <summary>
            	Gets the security of an object.
            </summary>
            <returns>
            	An <see cref="T:ClearScada.Client.AccessControlList"/> containing the security for the object.
            </returns>
            <scxpermission name="Security" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.<br/>-or-<br/>
            	Security is not enabled on this database.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.SetSecurity(ClearScada.Client.AccessControlList,System.Boolean)">
            <summary>
            	Sets the security of an object.
            </summary>
            <param name="security">
            	An <see cref="T:ClearScada.Client.AccessControlList"/> containing the new security for the object.
            </param>
            <param name="removeSecurityFromDescendants">
            	<see langword="true"/> to remove the security for any descendants, causing them to inherit their security from this object; or, <see langword="false"/> to leave descendants as they are.
            </param>
            <remarks>
            	<para>
            		To remove the security from an object and cause it to inherit from its parent, pass an <see cref="T:ClearScada.Client.AccessControlList"/> with its
            		<see cref="P:ClearScada.Client.AccessControlList.InheritedFromParent">InheritedFromParent</see> property set to <see langword="true"/>.
            	</para>
            	<para>
            		If <paramref name="removeSecurityFromDescendants"/> is <see langword="true"/>, and the caller does not have <b>Security</b> permission on a descendant,
            		or a descendant is an object in an instance whose security is controlled by its template, then the security of that descendant will not be removed.
            		An <see cref="T:ClearScada.Client.AccessDeniedException"/> will not be thrown in this case.
            	</para>
            </remarks>
            <scxpermission name="Security" on="Object">
            	If <paramref name="removeSecurityFromDescendants"/> is <see langword="true"/>, then also needed on any descendants.
            </scxpermission>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="security"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.<br/>-or-<br/>
            	Security is not enabled on this database.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	<paramref name="security"/> contains an <see cref="T:ClearScada.Client.AccessControlEntry"/> that specifies an invalid user name.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	The object in an instance, and its security is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.ImportConfiguration(System.IO.Stream)">
            <summary>
            	Imports object configuration from a stream.
            </summary>
            <param name="stream">
            	The stream to import configuration from.
            </param>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the top-level imported object.
            </returns>
            <remarks>
            	The stream must contain the contains of a valid ClearSCADA database export e.g. from a previous call to <see cref="M:ClearScada.Client.Simple.DBObject.ExportConfiguration(System.IO.Stream)">ExportConfiguration</see> or an existing SDE file.
            	The stream must be readable and seekable. The <see cref="P:System.IO.Stream.Position">Position</see> of the stream will be reset to the beginning of the stream if necessary.
            </remarks>
            <scxpermission name="Configure" on="Object"/>
            <scxpermission name="Security" on="Object">
            	Needed (in addition to <b>Configure</b>) if the import stream contains users or user groups.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="stream"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="stream"/> is not readable.
            	<paramref name="stream"/> is not seekable.
            	<paramref name="stream"/> is empty.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidClassException">
            	The top-level object in the import stream is of an unsupported database class.<br/>-or-<br/>
            	The import stream contains objects of a class that is not allowed in the object.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not a group.<br/>-or-<br/>
            	The object is an empty instance (one without a template configured).
            </exception>
            <exception cref="T:ClearScada.Client.DatabaseLimitException">
            	Importing the objects in the import stream would exceed the database's maximum full name length.<br/>-or-<br/>
            	Importing the objects in the import stream would exceed the database's maximum object depth.<br/>-or-<br/>
            	Importing the objects in the import stream would exceed the database's point limit.
            </exception>
            <exception cref="T:ClearScada.Client.ImportFormatException">
            	The import stream does not contain a valid ClearSCADA database export.<br/>-or-<br/>
            	The import stream is in an unsupported format.<br/>-or-<br/>
            	The import stream contains objects from an unsupported database version.<br/>-or-<br/>
            	The import stream terminates unexpectedly (e.g. a corrupt file).
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.ExportConfiguration(System.IO.Stream)">
            <summary>
            	Exports object configuration to a stream.
            </summary>
            <param name="stream">
            	The stream to export configuration to.
            </param>
            <remarks>
            	The stream must be writable.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
             <exception cref="T:System.ArgumentNullException">
            	<paramref name="stream"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="stream"/> is not writable.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetReferencesTo">
            <summary>
            	Gets a list of the other database objects that reference this object.
            </summary>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObjectCollection"/> with an entry for each database object that references this object; or, an an empty <b>DBObjectCollection</b> if no other objects reference this object.
            </returns>
            <scxpermission name="Read" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetReferencesFrom">
            <summary>
            	Gets a list of the other database objects that this object references.
            </summary>
            <returns>
            	A <see cref="T:ClearScada.Client.Simple.DBObjectCollection"/> with an entry for each database object that this object references; or, an an empty <b>DBObjectCollection</b> if this object references no other objects.
            </returns>
            <scxpermission name="Read" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetAlarms">
            <summary>
            	Gets the active alarms of the object.
            </summary>
            <returns>
            	An <see cref="T:ClearScada.Client.AlarmDetailsCollection"/> with an entry for each active alarm on the object; or, an empty <see cref="T:ClearScada.Client.AlarmDetailsCollection"/> has no active alarms.
            </returns>
            <remarks>
            	Calling <b>GetAlarms</b> on a group will return the active alarms for each of the group's children. Calling <b>GetAlarms</b> on the database's root group will also return any active text alarms.
            </remarks>
            <scxpermission name="ViewAlarms" on="Object">
            	Alarms on objects for which the caller does not have <b>ViewAlarms</b> permission will not be returned.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not an alarmable object or a group.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.GetEvents(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            	Gets event journal entries related to the object for a specified time range.
            </summary>
            <param name="rangeStart">
            	The start of the time for which to return events.
            </param>
            <param name="rangeEnd">
            	The end of the time for which to return events.
            </param>
            <returns>
            	An <see cref="T:ClearScada.Client.EventDetailsCollection"/> with an entry for each event in the specified range; or, an empty <see cref="T:ClearScada.Client.EventDetailsCollection"/> if there are no such events.
            </returns>
            <scxpermission name="Read" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="rangeEnd"/> is earlier than <paramref name="rangeStart"/>.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.RegisterForPropertyUpdates(System.String[])">
            <summary>
            	Causes events to be raised when the one of the specified properties of the object changes value.
            </summary>
            <param name="propertyNames">
            	The property names for which to raise update events.
            </param>
            <remarks>
            	<para>
            		This method causes the <see cref="E:ClearScada.Client.Simple.DBObject.PropertyUpdated"/> event to be raised whenever the one of the properties specified by <paramref name="propertyNames"/> changes value.
            		If the method is called again with a different set of properties, the two sets will be merged. To stop events being raised, call <see cref="M:ClearScada.Client.Simple.DBObject.UnregisterPropertyUpdates">UnregisterPropertyUpdates</see>.
            	</para>
            	<para>
            		To raise events when a property of one of the object's aggregates or alarm conditions changes value, prefix the name of the property with the name of the aggregate or alarm condition,
            		concatenated with a period e.g. <c>obj.RegisterForPropertyUpdates( "Historic.LastUpdateTime" );</c>.
            	</para>
            </remarks>
            <scxpermission name="Read" on="Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyNames"/> is <see langword="null"/>.<br/>-or-<br/>
            	An element of <paramref name="propertyNames"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="propertyNames"/> is empty.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	One of the elements of <paramref name="propertyNames"/> does not specify the name of a property of the object.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.DBObject.UnregisterPropertyUpdates">UnregisterPropertyUpdates</seealso>
            <seealso cref="E:ClearScada.Client.Simple.DBObject.PropertyUpdated">PropertyUpdated</seealso>
        </member>
        <member name="M:ClearScada.Client.Simple.DBObject.UnregisterPropertyUpdates">
            <summary>
            	Stops events being raised when properties of the object change value.
            </summary>
            <remarks>
            	It is safe to call this method without having called <see cref="M:ClearScada.Client.Simple.DBObject.RegisterForPropertyUpdates(System.String[])">RegisterForPropertyUpdates</see>.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
            <seealso cref="M:ClearScada.Client.Simple.DBObject.RegisterForPropertyUpdates(System.String[])">RegisterForPropertyUpdates</seealso>
            <seealso cref="E:ClearScada.Client.Simple.DBObject.PropertyUpdated">PropertyUpdated</seealso>
        </member>
        <member name="E:ClearScada.Client.Simple.DBObject.PropertyUpdated">
            <summary>
            	Occurs when a property of the object changes value.
            </summary>
            <remarks>
            	This event is only raised if <see cref="M:ClearScada.Client.Simple.DBObject.RegisterForPropertyUpdates(System.String[])">RegisterForPropertyUpdates</see> has been called.
            </remarks>
            <seealso cref="M:ClearScada.Client.Simple.DBObject.RegisterForPropertyUpdates(System.String[])">RegisterForPropertyUpdates</seealso>
            <seealso cref="M:ClearScada.Client.Simple.DBObject.UnregisterPropertyUpdates">UnregisterPropertyUpdates</seealso>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.Id">
            <summary>
            	Gets the unique identifer of the object.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.ObjectId"/> containing the ID of the object.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.Parent">
            <summary>
            	Gets the parent group of the object.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the parent group of the object; or, <see langword="null"/> if the object is the database's root group.
            </value>
            <scxpermission name="Read" on="Parent Group"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object's parent group has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.Name">
            <summary>
            	Gets the name of the object.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.FullName">
            <summary>
            	Gets the full name of the object.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the object.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.ClassDefinition">
            <summary>
            	Gets the object's class definition.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> representing about the object's class.
            </value>
             <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.Notes">
            <summary>
            	Gets and sets the notes associated with the object.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the notes associated with the object.
            </value>
            <scxpermission name="Read" on="Object">
            	Needed to get the notes.
            </scxpermission>
            <scxpermission name="Notes" on="Object">
            	Needed to set the notes.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.Aggregates">
            <summary>
            	Gets the aggregates of the object.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Simple.AggregateDictionary"/> with an entry for each of the object's aggregates; or, an an empty <b>AggregateDictionary</b> if the object has no aggregates.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.AlarmConditions">
            <summary>
            	Gets the alarm conditions of the object.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.Simple.AlarmConditionDictionary"/> with an entry for each of the object's alarm conditions; or, an an empty <b>AlarmConditionDictionary</b> if the object has no alarm conditions.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.Template">
            <summary>
            	Gets the parent template of the object.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the parent template of the object; or, <see langword="null"/> if the object is not in a template.
            </value>
            <scxpermission name="Read" on="Parent Template"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object's parent template has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.Instance">
            <summary>
            	Gets the parent instance of the object.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the parent instance of the object; or, <see langword="null"/> if the object is not in a instance.
            </value>
            <scxpermission name="Read" on="Parent Instance"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object's parent instance has been deleted from the database.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.TemplateObject">
            <summary>
            	Gets the corresponding template object of the object.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.DBObject"/> representing the corresponding template object of the object; or, <see langword="null"/> if the object is not in an instance or does not have a corresponding object in the instance's template.
            </value>
            <scxpermission name="Read" on="Template Object"/>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidObjectException">
            	The object has been deleted from the database.<br/>-or-<br/>
            	The object is not in an instance.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.IsGroup">
            <summary>
            	Gets a value indicating whether the object is a group.
            </summary>
            <value>
            	<see langword="true"/> if the object is a group; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            	An object is a group if it is an instance of CGroup, CTemplate, CTemplateInstance or COperatorDocStore.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.DBObject.Item(System.String)">
            <summary>
            	Gets or sets the value of a property of the object.
            </summary>
            <param name="propertyName">
            	The name of the property to get or set.
            </param>
            <value>
            	The value of the property.
            </value>
            <remarks>
            	The value of a property can be one of following types:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            	</list>
            	<para>
            		The value can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types. If a property's <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see>
            		is <see cref="T:System.Object"/>, <see cref="T:System.String"/> or <see cref="T:System.Nullable`1">Nullable</see>, then the value of the property can <see langword="null"/> to indicate
            		the property does not have a value e.g. the CurrentValue of an analog point that has never been updated.
            	</para>
            	<para>
            		To determine the type of a property, use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.DataType">DataType</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/>.
            		Setting the value of a property to an instance of a different supported type will attempt to convert the value.
            		Setting the value of a property to an instance of an unsupported type will throw an <see cref="T:System.ArgumentException"/>.
            	</para>
            	<para>
            		To get or set the value of a property of one of the object's aggregates or alarm conditions, prefix the name of the property with the name of the aggregate or alarm condition, concatenated with a period
            		e.g. <c>obj["Historic.Compress"] = true;</c>. Alternatively, acccess the aggregates and alarm conditions directly using the <see cref="P:ClearScada.Client.Simple.DBObject.Aggregates"/> and <see cref="P:ClearScada.Client.Simple.DBObject.AlarmConditions"/> properties.
            	</para>
            </remarks>
            <scxpermission name="Read" on="Object">
            	Needed to get the value of a property.
            </scxpermission>
            <scxpermission name="Configure" on="Object">
            	Needed to set the value of a configuration property.
            </scxpermission>
            <scxpermission name="Security" on="Object">
            	Needed (in addition to <b>Configure</b>) to set the value of a configuration property, if the object is a user or user group.
            </scxpermission>
            <scxpermission name="Control" on="Object">
            	Needed to set the value of most data properties. Use the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.WritePermissions">WritePermissions</see> property of the corresponding <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/> to determine the actual permissions needed.
            </scxpermission>
            <exception cref="T:System.InvalidOperationException">
            	The <b>DBObject</b>'s <see cref="T:ClearScada.Client.Simple.Connection"/> is not connected to a server.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="propertyName"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	When setting the property, <paramref name="value"/> is an unsupported type.
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> does not specify a valid object ID or name.<br/>-or-<br/>
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> specifies a valid object, but the object is of the wrong type for the property.<br/>-or-<br/>
            	When setting a property of type <see cref="T:ClearScada.Client.ObjectId"/>, <paramref name="value"/> specifies a valid object, but the object is in a template, and this object is not in the same template.
            </exception>
            <exception cref="T:ClearScada.Client.InvalidAreaException">
            	When setting a property of type <see cref="T:ClearScada.Client.AreaOfInterestId"/>, <paramref name="value"/> does not specify a valid Area of Interest ID or name.
            </exception>
            <exception cref="T:ClearScada.Client.PropertyException">
            	<paramref name="propertyName"/> does not specify the name of a property of the aggregate.<br/>-or-<br/>
            	When setting the property, <paramref name="propertyName"/> specifies a property that is not writable.<br/>-or-<br/>
            	When setting the property, <paramref name="value"/> could not be converted to the appropriate type for <paramref name="propertyName"/>.
            </exception>
            <exception cref="T:ClearScada.Client.AccessDeniedException">
            	The caller does not have the necessary permissions.<br/>-or-<br/>
            	When setting the property, the object is in an instance, and <paramref name="propertyName"/> is controlled by the instance's template.
            </exception>
            <exception cref="T:ClearScada.Client.CommunicationsException">
            	An error occurred communicating with the server.
            </exception>
        </member>
        <member name="T:ClearScada.Client.Simple.DBObjectCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.Simple.DBObject"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Advanced.VersionNumber">
             <summary>
            
             </summary>
        </member>
        <member name="F:ClearScada.Client.Advanced.VersionNumber.CurrentVersion">
             <summary>
            
             </summary>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.#ctor(System.Byte,System.Byte,System.Int16)">
             <summary>
            
             </summary>
             <param name="major"></param>
             <param name="minor"></param>
             <param name="build"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.#ctor(ClearScada.Client.Advanced.VersionNumber)">
             <summary>
            
             </summary>
             <param name="version"></param>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.op_Equality(ClearScada.Client.Advanced.VersionNumber,ClearScada.Client.Advanced.VersionNumber)">
             <summary>
            
             </summary>
             <param name="version1"></param>
             <param name="version2"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.op_Inequality(ClearScada.Client.Advanced.VersionNumber,ClearScada.Client.Advanced.VersionNumber)">
             <summary>
            
             </summary>
             <param name="version1"></param>
             <param name="version2"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.op_Explicit(ClearScada.Client.Advanced.VersionNumber)~System.Int32">
             <summary>
            
             </summary>
             <param name="version"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.Equals(ClearScada.Client.Advanced.VersionNumber)">
             <summary>
            
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:ClearScada.Client.Advanced.VersionNumber.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:ClearScada.Client.Advanced.VersionNumber.Major">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.VersionNumber.Minor">
             <summary>
            
             </summary>
        </member>
        <member name="P:ClearScada.Client.Advanced.VersionNumber.Build">
             <summary>
            
             </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.AggregateDefinition">
            <summary>
            	Provides metadata about a database aggregate.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDefinition.Name">
            <summary>
            	Gets the name of the aggregate.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the aggregate.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDefinition.DisplayName">
            <summary>
            	Gets the display name of the aggregate.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized display name of the aggregate.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDefinition.ParentClass">
            <summary>
            	Gets the database class the aggregate belongs to.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> the aggregate belongs to.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDefinition.CanDisable">
            <summary>
            	Gets a value that indicates whether the aggregate can be disabled.
            </summary>
            <value>
            	<see langword="true"/> if the aggregate can be disabled; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AggregateDefinition.AggregateClasses">
            <summary>
            	Gets the possible database classes for the aggregate.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.ClassDefinitionCollection"/> with an entry for each of the possible classes for the aggregate.
            </value>
            <remarks>
            	If the aggregate is not a multi-choice aggregate, <b>AggregateClasses</b> will contain a single entry.
            </remarks>
        </member>
        <member name="T:ClearScada.Client.Simple.AggregateDefinitionCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.Simple.AggregateDefinition"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.AlarmConditionDefinition">
            <summary>
            	Provides metadata about a database alarm condition.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDefinition.Name">
            <summary>
            	Gets the name of the alarm condition.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the alarm condition.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDefinition.DisplayName">
            <summary>
            	Gets the display name of the alarm condition.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized display name of the alarm condition.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDefinition.ParentClass">
            <summary>
            	Gets the database class the alarm condition belongs to.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> the alarm condition belongs to.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDefinition.Category">
            <summary>
            	Gets the category of the alarm condition.
            </summary>
            <value>
            	An <see cref="T:System.String"/> containing the category of the alarm condition.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDefinition.SubConditions">
            <summary>
            	Gets the sub-conditions of the alarm condition.
            </summary>
            <value>
            	A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1">ReadOnlyCollection</see>&lt;<see cref="T:System.String"/>&gt; with an entry for each sub-condition of the alarm condition.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.AlarmConditionDefinition.AlarmClass">
            <summary>
            	Gets the database class for the alarm condition.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> containing metadata about the <b>CAlarm</b> database class.
            </value>
        </member>
        <member name="T:ClearScada.Client.Simple.AlarmConditionDefinitionCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.Simple.AlarmConditionDefinition"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.ClassDefinition">
            <summary>
            	Provides metadata about a database class.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.Name">
            <summary>
            	Gets the name of the class.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the class.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.DisplayName">
            <summary>
            	Gets the display name of the class.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized display name of the class.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.Category">
            <summary>
            	Gets the category of the class.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the category the class belongs to.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.BaseClass">
            <summary>
            	Gets the base class of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> for the class's base class; or, <see langword="null"/> if the class has no base class.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.DerivedClasses">
            <summary>
            	Gets the derived classes of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.ClassDefinitionCollection"/> with an entry for each of the class's derived classes; or, an an empty <b>ClassDefinitionCollection</b> if the class has no derived classes.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.Icon">
            <summary>
            	Gets the icon used to represent objects of the class.
            </summary>
            <value>
            	A <see cref="T:System.Drawing.Bitmap"/> containing the icon used to represent objects of the class.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.ConfigurationProperties">
            <summary>
            	Gets the configuration properties of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.PropertyDefinitionCollection"/> with an entry for each of the class's configuration properties; or, an an empty <b>PropertyDefinitionCollection</b> if the class has no configuration properties.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.DataProperties">
            <summary>
            	Gets the persisted data properties of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.PropertyDefinitionCollection"/> with an entry for each of the class's data properties; or, an an empty <b>PropertyDefinitionCollection</b> if the class has no data properties.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.DynamicProperties">
            <summary>
            	Gets the dynamic data properties of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.PropertyDefinitionCollection"/> with an entry for each of the class's dynamic properties; or, an an empty <b>PropertyDefinitionCollection</b> if the class has no dynamic properties.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.Methods">
            <summary>
            	Gets the methods of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.MethodDefinitionCollection"/> with an entry for each of the class's methods; or, an an empty <b>MethodDefinitionCollection</b> if the class has no methods.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.Aggregates">
            <summary>
            	Gets the aggregates of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.AggregateDefinitionCollection"/> with an entry for each of the class's aggregates; or, an an empty <b>AggregateDefinitionCollection</b> if the class has no aggregates.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.ClassDefinition.AlarmConditions">
            <summary>
            	Gets the alarm conditions of the class.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.AlarmConditionDefinitionCollection"/> with an entry for each of the class's alarm conditions; or, an an empty <b>AlarmConditionDefinitionCollection</b> if the class has no alarm conditions.
            </value>
        </member>
        <member name="T:ClearScada.Client.Simple.ClassDefinitionCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.MethodDefinition">
            <summary>
            	Provides metadata about a method of a database class.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodDefinition.Name">
            <summary>
            	Gets the name of the method.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the method.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodDefinition.DisplayName">
            <summary>
            	Gets the display name of the method.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized display name of the method.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodDefinition.Description">
            <summary>
            	Gets the description of the method.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized description of the method.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodDefinition.ParentClass">
            <summary>
            	Gets the database class the method belongs to.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> the method belongs to.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodDefinition.Parameters">
            <summary>
            	Gets the parameters of the method.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.MethodParameterDefinitionCollection"/> containing an entry for each parameter of the method; or, an an empty <b>MethodParameterDefinitionCollection</b> if the method has no parameters.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodDefinition.ReturnType">
            <summary>
            	Gets the return type of the method
            </summary>
            <value>
            	A <see cref="T:System.Type"/> representing the type of the method's return value; or, <see cref="T:System.Void"/> if the method does not return a value.
            </value>
            <remarks>
            	The return type of a method can by one of following:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Void"/></item>
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:System.Object"/></item>
            	</list>
            	<para>
            		A method with a return type of <see cref="T:System.Object"/> means that the method can return any of the other above types - it does not mean the method can return any arbitrary type.
            		A method can also return a single-dimensioned <see cref="T:System.Array"/> of any of the above types. 
            	</para>	
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodDefinition.InvokePermissions">
            <summary>
            	Gets the permissions needed to invoke this method.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.ObjectPermissionSet"/> containing the permissions needed to invoke to this method.
            </value>
        </member>
        <member name="T:ClearScada.Client.Simple.MethodDefinitionCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.Simple.MethodDefinition"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.MethodParameterDefinition">
            <summary>
            	Provides metadata about a parameter of a method of a database class.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodParameterDefinition.Name">
            <summary>
            	Gets the name of the parameter.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the parameter.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodParameterDefinition.DisplayName">
            <summary>
            	Gets the display name of the parameter.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized display name of the parameter.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodParameterDefinition.Description">
            <summary>
            	Gets the description of the parameter.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized description of the parameter.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodParameterDefinition.ParentMethod">
            <summary>
            	Gets the method the parameter belongs to.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.Simple.MethodDefinition"/> the parameter belongs to.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodParameterDefinition.ParameterType">
            <summary>
            	Gets the type of the parameter.
            </summary>
            <value>
            	A <see cref="T:System.Type"/> representing the type of the parameter.
            </value>
            <remarks>
            	The type of a parameter can by one of following:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            		<item><see cref="T:System.Object"/></item>
            	</list>
            	<para>
            		A parameter with a type of <see cref="T:System.Object"/> means that the parameter can be any of the other above types - it does not mean the parameter can be any arbitrary type.
            		A parameter can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types. 
            	</para>	
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.MethodParameterDefinition.IsOptional">
            <summary>
            	Gets a value indicating whether the parameter can be omitted when calling its method.
            </summary>
            <value>
            	<see langword="true"/> if the parameter can be omitted; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            	If a parameter is optional, then all subsequent parameters in its method will also be optional. If a parameter is omitted when calling its method, then all subsequent parameters must also be omitted.
            </remarks>
        </member>
        <member name="T:ClearScada.Client.Simple.MethodParameterDefinitionCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.Simple.MethodParameterDefinition"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.PropertyType">
            <summary>
            	Specifies whether a property is part of an objects's configuration, persisted data, or dynamic data.
            </summary>
            <remarks>
            	This enumeration is used by the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.PropertyType">PropertyType</see> property of the <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/> class.
            </remarks>
        </member>
        <member name="F:ClearScada.Client.Simple.PropertyType.Configuration">
            <summary>
            	The property is part of an object's configuration
            </summary>
        </member>
        <member name="F:ClearScada.Client.Simple.PropertyType.Data">
            <summary>
            	The property is part of an object's persisted data.
            </summary>
        </member>
        <member name="F:ClearScada.Client.Simple.PropertyType.Dynamic">
            <summary>
            	The property is part of an object's dynamic data.
            </summary>
        </member>
        <member name="T:ClearScada.Client.Simple.PropertyDefinition">
            <summary>
            	Provides metadata about a property of a database class.
            </summary>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.Name">
            <summary>
            	Gets the name of the property.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the name of the property.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.DisplayName">
            <summary>
            	Gets the display name of the property.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized display name of the property.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.Description">
            <summary>
            	Gets the description of the property.
            </summary>
            <value>
            	A <see cref="T:System.String"/> containing the localized description of the property.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.ParentClass">
            <summary>
            	Gets the database class the property belongs to.
            </summary>
            <value>
            	The <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> the property belongs to.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.PropertyType">
            <summary>
            	Gets whether a property is part of an objects's configuration, persisted data, or dynamic data.
            </summary>
            <value>
            	One of the <see cref="T:ClearScada.Client.Simple.PropertyType"/> values.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.DataType">
            <summary>
            	Gets the underlying datatype of the property.
            </summary>
            <value>
            	A <see cref="T:System.Type"/> representing the underlying datatype of the property.
            </value>
            <remarks>
            	The data type of a property can be one of following:<br/>
            	<list type="bullet">
            		<item><see cref="T:System.Boolean"/></item>
            		<item><see cref="T:System.Byte"/></item>
            		<item><see cref="T:System.SByte"/></item>
            		<item><see cref="T:System.Int16"/></item>
            		<item><see cref="T:System.UInt16"/></item>
            		<item><see cref="T:System.Int32"/></item>
            		<item><see cref="T:System.UInt32"/></item>
            		<item><see cref="T:System.Int64"/></item>
            		<item><see cref="T:System.UInt64"/></item>
            		<item><see cref="T:System.Single"/></item>
            		<item><see cref="T:System.Double"/></item>
            		<item><see cref="T:System.String"/></item>
            		<item><see cref="T:System.DateTimeOffset"/></item>
            		<item><see cref="T:ClearScada.Client.ObjectId"/></item>
            		<item><see cref="T:ClearScada.Client.AreaOfInterestId"/></item>
            		<item><see cref="T:System.Object"/></item>
            	</list>
            	<para>
            		A property with a data type of <see cref="T:System.Object"/> means that the property can be any of the other above types - it does not mean the property can be of any arbitrary type.
            		A property can also be a single-dimensioned <see cref="T:System.Array"/> of any of the above types, or <see cref="T:System.Nullable`1">Nullable&lt;T&gt;</see> where T is any of the above value-types. 
            	</para>	
            	<para>
            		The type of database object referenced by an <see cref="T:ClearScada.Client.ObjectId"/> property is specified by the <see cref="P:ClearScada.Client.Simple.PropertyDefinition.ReferenceClass"/> property.
            	</para>
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.ReferenceClass">
            <summary>
            	Gets the type of database object referenced by a <see cref="T:ClearScada.Client.ObjectId"/> property.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.Simple.ClassDefinition"/> for the the type of database object referenced by this property, if the property is a <see cref="T:ClearScada.Client.ObjectId"/>; otherwise, <see langword="null"/>.
            </value>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.Length">
            <summary>
            	Gets the length of a <see cref="T:System.String"/> property.
            </summary>
            <value>
            	An <see cref="T:System.Int32"/> containing the maximum number of characters that can be stored in this property, if the property is a <see cref="T:System.String"/> property; otherwise, <b>1</b>.
            </value>
            <remarks>
            	If there is no limit on the number of characters that can be stored in this property, <b>Length</b> will be <b>0</b>. 
            	However, the value of the property may be truncated when accessed through interfaces that do not support arbitrary length strings, such as ODBC.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.IsReadable">
            <summary>
            	Gets a value indicating whether the value of the property can be read.
            </summary>
            <value>
            	<see langword="true"/> if the value of the property can be read; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            	This property indicates whether a property is fundamentally readable. 
            	It does not check if the caller has the necessary permissions to read the property.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.IsWritable">
            <summary>
            	Gets a value indicating whether the value of the property can be written.
            </summary>
            <value>
            	<see langword="true"/> if the value of the property can be written; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            	This property indicates whether a property is fundamentally writable. 
            	It does not check if the caller has the necessary permissions to write to the property, or if the property is controlled by a template.
            	To check if a property is writable for a particular object, use <see cref="M:ClearScada.Client.Simple.DBObject.IsPropertyWritable(System.String)">IsPropertyWritable</see>.
            	To get the permissions needed to write to this property, use <see cref="P:ClearScada.Client.Simple.PropertyDefinition.WritePermissions"/>.
            </remarks>
        </member>
        <member name="P:ClearScada.Client.Simple.PropertyDefinition.WritePermissions">
            <summary>
            	Gets the permissions needed to write to this property.
            </summary>
            <value>
            	An <see cref="T:ClearScada.Client.ObjectPermissionSet"/> containing the permissions needed to write to this property.
            </value>
            <remarks>
            	For configuration properties, this will always be <b>Configure</b>. 
            	For most data properties, this will be <b>Control</b>, however some data properties may need a different set of permissions.
            </remarks>
        </member>
        <member name="T:ClearScada.Client.Simple.PropertyDefinitionCollection">
            <summary>
            	A read-only collection of <see cref="T:ClearScada.Client.Simple.PropertyDefinition"/> objects.
            </summary>
        </member>
        <member name="T:ClearScada.Client.StateChangeEventArgs">
            <summary>
            	Provides data about events raised when a server changes state.
            </summary>
        </member>
        <member name="P:ClearScada.Client.StateChangeEventArgs.StateDetails">
            <summary>
            	Gets the state of the server.
            </summary>
            <value>
            	A <see cref="T:ClearScada.Client.ServerStateDetails"/> containing the state of the server.
            </value>
        </member>
    </members>
</doc>
